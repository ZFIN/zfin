<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!-- Alwyas include the full package in each class.name attribute. This allows refactoring to identify
     the class and include them. Otherwise a refactoring of a class reference here is not recognized and
     could potentially break the code (e.g. moving a clas  into a different package. -->
<hibernate-mapping package="org.zfin.mutant">

    <typedef class="org.zfin.database.StringEnumUserType" name="phenotypeTag">
        <param name="enumClassname">org.zfin.mutant.Phenotype$Tag</param>
    </typedef>

    <class name="org.zfin.mutant.Genotype" table="genotype">
        <id name="zdbID" type="string">
            <column name="geno_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">GENO</param>
            </generator>
        </id>

        <property name="name" column="geno_display_name"/>
        <property name="nameOrder" column="geno_name_order"/>
        <property name="handle" column="geno_handle"/>
        <property name="wildtype" column="geno_is_wildtype"/>
        <property name="nickname" column="geno_nickname"/>

        <set name="genotypeExperiments" lazy="true">
            <key column="genox_geno_zdb_id"/>
            <one-to-many class="org.zfin.mutant.GenotypeExperiment"/>
        </set>

        <set name="associatedGenotypes" lazy="true" table="genotype_background" access="field">
            <key column="genoback_geno_zdb_id"/>
            <many-to-many class="org.zfin.mutant.Genotype" column="genoback_background_zdb_id"/>
        </set>

        <set name="genotypeFeatures" lazy="true">
            <key column="genofeat_geno_zdb_id"/>
            <one-to-many class="org.zfin.mutant.GenotypeFeature"/>
        </set>

    </class>

    <class name="org.zfin.mutant.GenotypeFeature" table="genotype_feature">
        <id name="zdbID" type="string">
            <column name="genofeat_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">GENOFEAT</param>
            </generator>
        </id>

        <many-to-one name="genotype" class="org.zfin.mutant.Genotype">
            <column name="genofeat_geno_zdb_id"/>
        </many-to-one>

        <many-to-one name="feature" class="org.zfin.mutant.Feature">
            <column name="genofeat_feature_zdb_id"/>
        </many-to-one>

    </class>

    <class name="org.zfin.mutant.GenotypeExperiment" table="genotype_experiment">
        <id name="zdbID">
            <column name="genox_zdb_id"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">GENOX</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>

        <many-to-one name="experiment" class="org.zfin.expression.Experiment">
            <column name="genox_exp_zdb_id"/>
        </many-to-one>
        <many-to-one name="genotype" class="org.zfin.mutant.Genotype">
            <column name="genox_geno_zdb_id"/>
        </many-to-one>

        <set name="phenotypes" lazy="true">
            <key column="apato_genox_zdb_id"/>
            <one-to-many class="org.zfin.mutant.Phenotype"/>
        </set>
    </class>

    <class name="org.zfin.mutant.Phenotype" table="atomic_phenotype">
        <id name="zdbID" type="string">
            <column name="apato_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">APATO</param>
            </generator>
        </id>

        <discriminator type="string"
                       formula="(CASE get_obj_type(apato_subterm_zdb_id)
                                    WHEN 'ANAT' THEN 'Anatomy'
                                    ELSE             'Go-term'
                                 END)"/>
        
        <many-to-one name="genotypeExperiment" class="org.zfin.mutant.GenotypeExperiment">
            <column name="apato_genox_zdb_id"/>
        </many-to-one>

        <property name="patoSubTermzdbID" column="apato_subterm_zdb_id" insert="false" update="false"/>

        <property name="patoSuperTermzdbID" column="apato_superterm_zdb_id" insert="false" update="false"/>

        <many-to-one name="term" class="org.zfin.mutant.Term">
            <column name="apato_quality_zdb_id"/>
        </many-to-one>

        <many-to-one name="publication" class="org.zfin.publication.Publication">
            <column name="apato_pub_zdb_id"/>
        </many-to-one>
<!--
        ToDo: mark tag as phenotypeTag type when this col is cleaned up
-->
        <property name="tag" column="apato_tag" />

        <set name="figures" lazy="true" table="apato_figure">
            <key column="apatofig_apato_zdb_id"/>
            <many-to-many class="org.zfin.expression.Figure" column="apatofig_fig_zdb_id"/>
        </set>

        <subclass name="org.zfin.anatomy.AnatomyPhenotype" discriminator-value="Anatomy">
            <many-to-one name="anatomyTerm" column="apato_subterm_zdb_id" class="org.zfin.anatomy.AnatomyItem"/>
        </subclass>

        <subclass name="org.zfin.ontology.GoPhenotype" discriminator-value="Go-term">
            <many-to-one name="goTerm" column="apato_subterm_zdb_id" class="org.zfin.ontology.GoTerm"/>
        </subclass>

    </class>

    <class name="Feature" table="feature">
        <id name="zdbID" column="feature_zdb_id"/>
        <property name="name" column="feature_name" not-null="true"/>
        <property name="abbreviation" column="feature_abbrev" not-null="true"/>
        <property name="abbreviationOrder" column="feature_abbrev_order" not-null="true"/>
        <property name="comments" column="feature_comments" not-null="true"/>
                                                                              
        <set name="featureMarkerRelations" lazy="true">
            <key column="fmrel_ftr_zdb_id"/>
            <one-to-many class="org.zfin.mutant.FeatureMarkerRelationship"/>
        </set>
    </class>

    <class name="FeatureMarkerRelationship" table="feature_marker_relationship">
        <id name="zdbID" column="fmrel_zdb_id"/>
        <property name="type" column="fmrel_type" not-null="true"/>
        <property name="featureZdbId" column="fmrel_ftr_zdb_id" not-null="true"/>
        <many-to-one name="marker" class="org.zfin.marker.Marker">
            <column name="fmrel_mrkr_zdb_id"/>
        </many-to-one>
    </class>

    <class name="org.zfin.expression.ExperimentCondition" table="experiment_condition" >

        <id name="zdbID" type="string">
            <column name="expcond_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">EXPCOND</param>
            </generator>
        </id>

        <many-to-one name="experiment" class="org.zfin.expression.Experiment">
            <column name="expcond_exp_zdb_id"/>
        </many-to-one>

        <many-to-one name="morpholino" class="org.zfin.marker.Marker">
            <column name="expcond_mrkr_zdb_id"/>
        </many-to-one>

    </class>

    <class name="org.zfin.mutant.Term" table="term" >

        <id name="zdbID" type="string">
            <column name="term_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">TERM</param>
            </generator>
        </id>

        <property name="name" column="term_name" />

    </class>

    <class name="org.zfin.ontology.GoTerm" table="go_term" >

        <id name="zdbID" type="string">
            <column name="goterm_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">GOTERM</param>
            </generator>
        </id>

        <property name="name" column="goterm_name" />
        <property name="goID" column="goterm_go_id" />

    </class>
    <!--
    ToDo:
    This is a helper class only needed until the full relationship between Genotype and GenotypeExperiment is
    established

    <class name="org.zfin.mutant.repository.GenotypeExperiment" table="genotype_experiment">
        <id name="zdbID" type="string">
            <column name="genox_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">GENOX</param>
            </generator>
        </id>

        <property name="genotypeZdbID">
            <column name="genox_geno_zdb_id"/>
        </property>

    </class>
  -->

</hibernate-mapping>

