<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.jboss.org/dtd/hibernate/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.zfin.expression">

    <class name="org.zfin.expression.Figure" table="figure">
        <!--<cache usage="read-only"/>-->
        <id name="zdbID" type="string">
            <column name="fig_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">FIG</param>
            </generator>
        </id>

        <discriminator type="string"
                       formula="(CASE fig_label
                                    WHEN 'text only' THEN 'TOD'
                                    ELSE                  'FIG'
                                 END)"/>

        <property name="caption">
            <column name="fig_caption"/>
        </property>

        <property name="comments">
            <column name="fig_comments"/>
        </property>

        <property name="label">
            <column name="fig_label"/>
        </property>

        <property name="orderingLabel">
            <column name="fig_full_label"/>
        </property>

        <set name="expressionResults" lazy="true" inverse="true" table="expression_pattern_figure">
            <key column="xpatfig_fig_zdb_id"/>
            <many-to-many class="org.zfin.expression.ExpressionResult" column="xpatfig_xpatres_zdb_id"/>
        </set>

        <set name="images" lazy="true">
            <key column="img_fig_zdb_id"/>
            <one-to-many class="org.zfin.expression.Image"/>
        </set>

        <many-to-one name="publication" class="org.zfin.publication.Publication" column="fig_source_zdb_id"
                     insert="false"
                     update="false"/>
        <subclass name="org.zfin.expression.FigureFigure" discriminator-value="FIG"/>

        <subclass name="org.zfin.expression.TextOnlyFigure" discriminator-value="TOD"/>

    </class>

    <class name="org.zfin.expression.Image" mutable="false" table="image">
        <cache usage="read-only"/>
        <id name="zdbID" type="string">
            <column name="img_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">IMAGE</param>
            </generator>
        </id>

        <property name="imageFilename">
            <column name="img_image"/>
        </property>

        <property name="imageWithAnnotationsFilename">
            <column name="img_image_with_annotation"/>
        </property>

        <property name="height">
            <column name="img_height"/>
        </property>

        <property name="width">
            <column name="img_width"/>
        </property>

        <many-to-one name="figure" class="org.zfin.expression.Figure" column="img_fig_zdb_id"/>

        <property name="thumbnail">
            <column name="img_thumbnail"/>
        </property>

        <set name="terms" lazy="true" table="int_image_term">
            <key column="iit_img_zdb_id"/>
            <many-to-many column="iit_term_zdb_id" class="org.zfin.ontology.GenericTerm"/>
        </set>

        <join table="image_stage" optional="true">
            <key column="imgstg_img_zdb_id"/>
            <component name="imageStage">
                <many-to-one name="start" column="imgstg_start_stg_zdb_id"
                             class="org.zfin.anatomy.DevelopmentStage"
                             lazy="proxy"/>
                <many-to-one name="end" column="imgstg_end_stg_zdb_id"
                             class="org.zfin.anatomy.DevelopmentStage"
                             lazy="proxy"/>
            </component>
        </join>

    </class>

    <!-- Make sure only attributes that have changed are updated in teh Query: if no probe is given
         but probe = null is set then a trigger would fail.
         -->
    <class name="org.zfin.expression.ExpressionExperiment" table="expression_experiment" dynamic-update="true"
           dynamic-insert="true">
        <id name="zdbID" type="string">
            <column name="xpatex_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">XPAT</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>

        <many-to-one name="publication" class="org.zfin.publication.Publication" column="xpatex_source_zdb_id"/>
        <many-to-one name="assay" column="xpatex_assay_name" class="org.zfin.expression.ExpressionAssay"/>
        <many-to-one name="genotypeExperiment" column="xpatex_genox_zdb_id" class="org.zfin.mutant.GenotypeExperiment"/>

        <many-to-one name="gene" class="org.zfin.marker.Marker" column="xpatex_gene_zdb_id"/>
        <many-to-one name="probe" class="org.zfin.marker.Clone" column="xpatex_probe_feature_zdb_id"/>
        <many-to-one name="antibody" column="xpatex_atb_zdb_id" class="org.zfin.antibody.Antibody"/>
        <many-to-one name="markerDBLink" column="xpatex_dblink_zdb_id" class="org.zfin.sequence.MarkerDBLink"/>

        <set name="expressionResults" lazy="true" inverse="true">
            <key column="xpatres_xpatex_zdb_id"/>
            <one-to-many class="org.zfin.expression.ExpressionResult"/>
        </set>


    </class>

    <class name="org.zfin.expression.ExpressionResult" table="expression_result">
        <id name="zdbID" type="string">
            <column name="xpatres_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">XPATRES</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>

        <property name="expressionFound" column="xpatres_expression_found"/>
        <property name="comment" column="xpatres_comments"/>

        <many-to-one name="expressionExperiment" class="org.zfin.expression.ExpressionExperiment"
                     column="xpatres_xpatex_zdb_id" not-null="true"/>

        <component name="entity">
            <many-to-one name="subterm" column="xpatres_subterm_zdb_id"/>
            <many-to-one name="superterm" column="xpatres_superterm_zdb_id"/>
        </component>

        <many-to-one name="startStage" class="org.zfin.anatomy.DevelopmentStage" column="xpatres_start_stg_zdb_id"/>
        <many-to-one name="endStage" class="org.zfin.anatomy.DevelopmentStage" column="xpatres_end_stg_zdb_id"/>

        <set name="figures" table="expression_pattern_figure">
            <key column="xpatfig_xpatres_zdb_id"/>
            <many-to-many class="org.zfin.expression.Figure" column="xpatfig_fig_zdb_id"/>
        </set>

    </class>

    <!-- This object should exist in the database -->
    <!--
        <class name="ExperimentFigureStage" >
            <composite-id>
                <key-property name="expressionExperiment" />
            </composite-id>
        </class>
    -->

    <class name="org.zfin.expression.Experiment" table="experiment">
        <id name="zdbID">
            <column name="exp_zdb_id"/>
        </id>

        <property name="name">
            <column name="exp_name"/>
        </property>

        <set name="experimentConditions" lazy="true">
            <key column="expcond_exp_zdb_id"/>
            <one-to-many class="org.zfin.expression.ExperimentCondition"/>
        </set>

        <many-to-one name="publication" column="exp_source_zdb_id"/>
    </class>

    <class name="org.zfin.expression.ExpressionAssay" mutable="false" table="expression_pattern_assay">
        <cache usage="read-only"/>
        <id name="name" column="xpatassay_name">
            <generator class="native"/>
        </id>

        <property name="abbreviation" column="xpatassay_abbrev"/>
        <property name="comments" column="xpatassay_comments"/>
        <property name="displayOrder" column="xpatassay_display_order"/>
        <!--<property name="immunogen" column="xpatassay_is_immuno"/>-->
    </class>

    <class name="org.zfin.expression.ExpressionStructure" table="expression_pattern_infrastructure">
        <id name="zdbID" type="string">
            <column name="xpatinf_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">XPATINF</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>

        <property name="date" column="xpatinf_date"/>
        <many-to-one name="publication" column="xpatinf_pub_zdb_id"/>
        <many-to-one name="person" column="xpatinf_curator_zdb_id"/>
        <many-to-one name="superterm" column="xpatinf_superterm_zdb_id"/>
        <many-to-one name="subterm" column="xpatinf_subterm_zdb_id"/>
    </class>

    <class name="org.zfin.expression.presentation.ExpressionTermFastSearch" table="expression_term_fast_search">
        <id name="id" type="long">
            <column name="etfs_pk_id" not-null="true"/>
            <generator class="increment"/>
        </id>
        <many-to-one name="expressionResult" column="etfs_xpatres_zdb_id" not-null="true"/>
        <many-to-one name="term" column="etfs_term_zdb_id" not-null="true"/>
        <property name="dateCreated" column="etfs_created_date"/>
        <property name="originalAnnotation" column="etfs_is_xpatres_term"/>
    </class>


    <!--<class name="org.zfin.expression.WildtypeExpressionExperiment" table="wildtype_expression_experiment" mutable="false">-->
    <!--<id name="id" column="id" type="java.lang.Long"/>-->

    <!--<many-to-one name="expressionExperiment" column="wee_ee_zdb_id" class="org.zfin.expression.ExpressionExperiment"/>-->
    <!--<many-to-one name="gene" column="wee_marker_zdb_id" class="org.zfin.marker.Marker"/>-->
    <!--<many-to-one name="superTerm" column="wee_super_term_zdb_id" class="org.zfin.ontology.GenericTerm"/>-->
    <!--<many-to-one name="subTerm" column="wee_sub_term_zdb_id" class="org.zfin.ontology.GenericTerm"/>-->
    <!--<many-to-one name="startStage" column="wee_start_stage_zdb_id" class="org.zfin.anatomy.DevelopmentStage"/>-->
    <!--<many-to-one name="endStage" column="wee_end_stage_zdb_id" class="org.zfin.anatomy.DevelopmentStage"/>-->
    <!--</class>-->

    <query name="stageanatomyfigure"><![CDATA[
        select stage, xpatres.entity.superterm, xpatres.figures
        from org.zfin.anatomy.DevelopmentStage stage,
             org.zfin.expression.ExpressionResult xpatres,
             org.zfin.expression.ExpressionExperiment xpatex
        where xpatex.gene.zdbID = :geneZdbID
          and xpatres member of xpatex.expressionResults
          and xpatex.genotypeExperiment.standardOrGenericControl = 't'
          and xpatex.genotypeExperiment.genotype.wildtype = true
          and xpatres.entity.superterm.termName <> :unspecified
          and xpatres.startStage.name <> :unknown
          and stage.hoursStart >= xpatres.startStage.hoursStart
          and stage.hoursEnd <= xpatres.endStage.hoursEnd
        order by stage.hoursStart, xpatres.entity.superterm.termName
       ]]>
    </query>

    <sql-query name="antibodyAOFastSearchUpdate" callable="true">
        {call add_ab_ao_fast_search(:expressionZdbID)}
    </sql-query>
</hibernate-mapping>
