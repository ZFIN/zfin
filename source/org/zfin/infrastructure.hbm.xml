<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.jboss.org/dtd/hibernate/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.zfin.infrastructure">

    <typedef class="org.zfin.framework.StringEnumValueUserType" name="recordAttributionSourceType">
        <param name="enumClassname">org.zfin.infrastructure.RecordAttribution$SourceType</param>
    </typedef>

    <typedef class="org.zfin.framework.StringEnumValueUserType" name="zdbFlagType">
        <param name="enumClassname">org.zfin.infrastructure.ZdbFlag$Type</param>
    </typedef>

    <typedef class="org.zfin.framework.StringEnumValueUserType" name="dataAliasGroup">
        <param name="enumClassname">org.zfin.infrastructure.DataAliasGroup$Group</param>
    </typedef>

    <typedef class="org.zfin.ontology.OntologyEnumUserType" name="ontologyEnumeration">
        <param name="enumClassname">org.zfin.ontology.Ontology</param>
    </typedef>

    <class name="org.zfin.infrastructure.ActiveData" table="zdb_active_data">
        <id name="zdbID" type="string">
            <column name="zactvd_zdb_id" not-null="true"/>
        </id>
    </class>

    <class name="org.zfin.infrastructure.ActiveSource" table="zdb_active_source">
        <id name="zdbID" type="string">
            <column name="zactvs_zdb_id" not-null="true"/>
        </id>
    </class>

    <class name="org.zfin.infrastructure.RecordAttribution" table="record_attribution">
        <composite-id>
            <key-property name="dataZdbID" column="recattrib_data_zdb_id" type="string"/>
            <key-property name="sourceZdbID" column="recattrib_source_zdb_id" type="string"/>
            <key-property name="sourceType" column="recattrib_source_type" type="recordAttributionSourceType"/>
        </composite-id>
        <discriminator type="string"
                       formula="(CASE get_obj_type(recattrib_source_zdb_id)
                                    WHEN 'PUB' THEN       'Pub    '
                                    WHEN 'PERS' THEN      'Person '
                                    WHEN 'COMPANY' THEN   'Company'
                                    WHEN 'JRNL' THEN      'Journal'
                                    ELSE                  'other'
                                 END)"/>

        <subclass name="org.zfin.infrastructure.PublicationAttribution" discriminator-value="Pub    ">
            <many-to-one name="publication" column="recattrib_source_zdb_id" insert="false" update="false"/>
        </subclass>

        <subclass name="org.zfin.infrastructure.PersonAttribution" discriminator-value="Person ">
            <many-to-one name="person" column="recattrib_source_zdb_id" insert="false" update="false"/>
        </subclass>

    </class>

    <class name="org.zfin.infrastructure.Updates" mutable="false" table="updates">
        <cache usage="read-only"/>
        <id name="ID" type="long">
            <column name="upd_pk_id" not-null="true"/>
            <generator class="identity"/>
        </id>
        <property name="submitterID" column="submitter_id" type="string"/>
        <property name="recID" column="rec_id" type="string"/>
        <property name="fieldName" column="field_name" type="string"/>
        <property name="newValue" column="new_value" type="string"/>
        <property name="oldValue" column="old_value" type="string"/>
        <property name="comments" column="comments" type="string"/>
        <property name="submitterName" column="submitter_name" type="string"/>
        <property name="whenUpdated" column="when" type="date"/>
    </class>

    <class name="org.zfin.infrastructure.DataNote" table="data_note">
        <id name="zdbID">
            <column name="dnote_zdb_id"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">DNOTE</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>
        <property name="dataZdbID">
            <column name="dnote_data_zdb_id"/>
        </property>
        <property name="note">
            <column name="dnote_text"/>
        </property>
        <property name="date">
            <column name="dnote_date"/>
        </property>
        <many-to-one name="curator" column="dnote_curator_zdb_id"
                     class="org.zfin.profile.Person"/>
    </class>

    <class name="org.zfin.infrastructure.DataAliasGroup" mutable="false" table="alias_group">
        <cache usage="read-only"/>
        <id name="id" access="field">
            <column name="aliasgrp_pk_id"/>
        </id>
        <property name="name" column="aliasgrp_name"/>
        <property name="significance" column="aliasgrp_significance"/>
    </class>

    <class name="org.zfin.infrastructure.ZdbFlag" table="zdb_flag">
        <id name="type" column="zflag_name" type="zdbFlagType"/>
        <property name="systemUpdateDisabled" column="zflag_is_on"/>
        <property name="dateLastModified" column="zflag_last_modified"/>
    </class>

    <class name="org.zfin.infrastructure.DataAlias" table="DATA_ALIAS">
        <cache usage="nonstrict-read-write"/>
        <id name="zdbID">
            <column name="dalias_zdb_id"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">DALIAS</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>

        <discriminator type="string"
                       formula="(CASE get_obj_type(dalias_data_zdb_id)
                                    WHEN 'ANAT' THEN 'Anatom'
                                    WHEN 'GENE' THEN 'Marker'
                                    WHEN 'ATB' THEN  'Marker'
                                    WHEN 'TERM' THEN 'Term  '
                                    WHEN 'GENO' THEN 'Genoty'
                                    WHEN 'ALT'  THEN 'Featur'
                                    ELSE             'Marker'
                                 END)"/>

        <property name="alias" column="dalias_alias"/>
        <property name="aliasLowerCase" column="dalias_alias_lower"/>
        <property name="dataZdbID" column="dalias_data_zdb_id" update="false" insert="false"/>

        <many-to-one name="aliasGroup" class="org.zfin.infrastructure.DataAliasGroup" column="dalias_group_id"
                     not-null="true"/>

        <set name="sources" lazy="true" table="record_attribution">
            <key column="recattrib_data_zdb_id" foreign-key="recattrib_data_zdb_id"/>
            <many-to-many class="org.zfin.infrastructure.ActiveSource" column="recattrib_source_zdb_id"/>
        </set>

        <set name="publications" lazy="true">
            <key column="recattrib_data_zdb_id"/>
            <one-to-many class="org.zfin.infrastructure.PublicationAttribution"/>
        </set>

        <subclass name="org.zfin.anatomy.AnatomySynonym" discriminator-value="Anatom">
            <many-to-one name="item" column="dalias_data_zdb_id" class="org.zfin.anatomy.AnatomyItem"/>
        </subclass>

        <subclass name="org.zfin.marker.MarkerAlias" discriminator-value="Marker">
            <many-to-one name="marker" column="dalias_data_zdb_id" class="org.zfin.marker.Marker"/>
        </subclass>
        <subclass name="org.zfin.feature.FeatureAlias" discriminator-value="Featur">
            <many-to-one name="feature" column="dalias_data_zdb_id" class="org.zfin.feature.Feature"/>
        </subclass>

        <subclass name="org.zfin.ontology.TermAlias" discriminator-value="Term  ">
            <many-to-one name="term" column="dalias_data_zdb_id" class="org.zfin.ontology.GenericTerm"/>
        </subclass>

        <subclass name="org.zfin.mutant.GenotypeAlias" discriminator-value="Genoty">
            <many-to-one name="genotype" column="dalias_data_zdb_id" class="org.zfin.mutant.Genotype"/>
        </subclass>

    </class>

    <class name="org.zfin.ExternalNote" abstract="true" table="external_note">
        <id name="zdbID">
            <column name="extnote_zdb_id"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">EXTNOTE</param>
                <param name="insertActiveData">true</param>
            </generator>
        </id>

        <discriminator type="string"
                       formula="(CASE extnote_note_type
                                    WHEN 'antibody' THEN    'Antibody '
                                    WHEN 'orthology' THEN   'Orthology'
                                    WHEN 'genotype' THEN 'Genotype '
                                    ELSE                    'other    '
                                 END)"/>

        <property name="note" column="extnote_note"/>
        <property name="type" column="extnote_note_type"/>
        <property name="externalDataZdbID" column="extnote_data_zdb_id" insert="false" update="false"/>

        <set name="pubAttributions">
            <key>
                <column name="recattrib_data_zdb_id"/>
            </key>
            <one-to-many class="org.zfin.infrastructure.PublicationAttribution"/>
        </set>

        <set name="personAttributions">
            <key>
                <column name="recattrib_data_zdb_id"/>
            </key>
            <one-to-many class="org.zfin.infrastructure.PersonAttribution"/>
        </set>

        <subclass name="org.zfin.antibody.AntibodyExternalNote" discriminator-value="Antibody ">
            <many-to-one name="antibody" column="extnote_data_zdb_id"/>
        </subclass>

        <subclass name="org.zfin.marker.OrthologyNote" discriminator-value="Orthology">
            <many-to-one name="marker" column="extnote_data_zdb_id"/>
        </subclass>

        <subclass name="org.zfin.mutant.GenotypeExternalNote" discriminator-value="Genotype ">
            <many-to-one name="genotype" column="extnote_data_zdb_id"/>
        </subclass>

    </class>

    <class name="org.zfin.infrastructure.AllNamesFastSearch" table="all_map_names">
        <id name="id" type="int">
            <column name="allmapnm_serial_id" not-null="true"/>
            <generator class="identity"/>
        </id>

        <discriminator type="string"
                       formula="(CASE get_obj_type(allmapnm_zdb_id)
                                    WHEN 'ALT'  THEN     'Alt---'
                                    WHEN 'GENO' THEN     'Geno--'
                                    WHEN 'MRPHLNO' THEN  'Morpho'
                                    ELSE                 'Marker'
                                 END)"/>

        <property name="name" column="allmapnm_name" type="string"/>
        <property name="nameLowerCase" column="allmapnm_name_lower" type="string"/>
        <property name="precedence" column="allmapnm_precedence" type="string"/>

        <subclass name="org.zfin.infrastructure.AllMarkerNamesFastSearch" discriminator-value="Marker">
            <many-to-one name="marker" class="org.zfin.marker.Marker" column="allmapnm_zdb_id"/>
        </subclass>
    </class>

    <class name="org.zfin.infrastructure.ReplacementZdbID" table="zdb_replaced_data">
        <composite-id>
            <key-property name="oldZdbID" column="zrepld_old_zdb_id"/>
            <key-property name="replacementZdbID" column="zrepld_new_zdb_id"/>
        </composite-id>

        <property name="oldName" column="zrepld_old_name"/>
    </class>

    <class name="org.zfin.ontology.GenericTerm" mutable="false" table="TERM">
        <cache usage="read-only"/>
        <id name="zdbID" type="string">
            <column name="term_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">TERM</param>
            </generator>
        </id>

        <property name="termName" column="term_name"/>
        <property name="oboID" column="term_ont_id"/>
        <property name="ontology" column="term_ontology" type="ontologyEnumeration"/>
        <property name="obsolete" column="term_is_obsolete"/>
        <property name="root" column="term_is_root"/>
        <property name="secondary" column="term_is_secondary"/>
        <property name="comment" column="term_comment"/>
        <property name="definition" column="term_definition"/>

        <set name="aliases" lazy="false">
            <key column="dalias_data_zdb_id"/>
            <one-to-many class="org.zfin.ontology.TermAlias"/>
        </set>

        <set name="images" lazy="true" table="int_image_term">
            <key column="iit_term_zdb_id"/>
            <many-to-many column="iit_img_zdb_id" class="org.zfin.expression.Image"/>
        </set>

        <set name="subsets" lazy="true" table="term_subset">
            <key column="termsub_term_zdb_id"/>
            <many-to-many column="termsub_subset_id" class="org.zfin.ontology.Subset"/>
        </set>

        <set name="childTermRelationships" lazy="true" table="term_relationship" inverse="true">
            <key column="termrel_term_1_zdb_id"/>
            <one-to-many class="org.zfin.ontology.GenericTermRelationship"/>
        </set>

        <set name="parentTermRelationships" lazy="true" table="term_relationship" inverse="true">
            <key column="termrel_term_2_zdb_id"/>
            <one-to-many class="org.zfin.ontology.GenericTermRelationship"/>
        </set>


    </class>

    <class name="org.zfin.ontology.GenericTermRelationship" table="term_relationship">
        <id name="zdbId">
            <column name="termrel_zdb_id" not-null="true"/>
            <generator class="org.zfin.database.ZdbIdGenerator">
                <param name="type">TERMREL</param>
            </generator>
        </id>

        <property name="type" column="termrel_type"/>
        <many-to-one name="termOne" class="org.zfin.ontology.GenericTerm" column="termrel_term_1_zdb_id"/>
        <many-to-one name="termTwo" class="org.zfin.ontology.GenericTerm" column="termrel_term_2_zdb_id"/>

    </class>

    <class name="org.zfin.ontology.Subset" table="ONTOLOGY_SUBSET">
        <id name="id">
            <column name="osubset_pk_id" not-null="true"/>
        </id>
        <property name="internalName" column="osubset_subset_name"/>
        <property name="name" column="osubset_subset_definition"/>
        <many-to-one name="metaData" column="osubset_ont_id" not-null="false"/>
    </class>

    <class name="org.zfin.ontology.TransitiveClosure" table="all_term_contains">
        <composite-id>
            <key-many-to-one name="child" column="alltermcon_contained_zdb_id"/>
            <key-many-to-one name="root" column="alltermcon_container_zdb_id"/>
        </composite-id>

        <property name="distance" column="alltermcon_min_contain_distance"/>
    </class>

    <class name="org.zfin.ontology.OntologyMetadata" table="ontology">
        <id name="id">
            <column name="ont_pk_id" not-null="true"/>
        </id>

        <property name="name" column="ont_ontology_name"/>
        <property name="date" column="ont_current_date"/>
        <property name="dataVersion" column="ont_data_version"/>
        <property name="defaultNamespace" column="ont_default_namespace"/>
        <property name="generatedBy" column="ont_import"/>
        <property name="oboVersion" column="ont_format_version"/>
        <property name="order" column="ont_order"/>
        <property name="remark" column="ont_remark"/>
        <property name="savedBy" column="ont_saved_by"/>

        <set name="subsets" lazy="false" inverse="true">
            <key column="osubset_ont_id" not-null="false"/>
            <one-to-many class="org.zfin.ontology.Subset"/>
        </set>
    </class>


    <class name="org.zfin.ontology.ReplacementTerm" table="OBSOLETE_TERM_REPLACEMENT">
        <id name="id">
            <column name="obstermrep_pk_id" not-null="true"/>
        </id>

        <many-to-one name="obsoletedTerm" column="obstermrep_term_zdb_id"/>
        <many-to-one name="replacementTerm" column="obstermrep_term_replacement_zdb_id"/>
    </class>

    <class name="org.zfin.ontology.ConsiderTerm" table="OBSOLETE_TERM_SUGGESTION">
        <id name="id">
            <column name="obstermsug_pk_id" not-null="true"/>
        </id>

        <many-to-one name="obsoletedTerm" column="obstermsug_term_zdb_id"/>
        <many-to-one name="considerTerm" column="obstermsug_term_suggestion_zdb_id"/>
    </class>

    <class name="org.zfin.database.UnloadInfo" table="DATABASE_INFO">
        <id name="id">
            <column name="di_pk_id" not-null="true"/>
        </id>

        <property name="date" column="di_date_unloaded"/>
        <property name="version" column="di_code_version"/>

    </class>

</hibernate-mapping>
