package org.zfin.people;

import org.zfin.people.presentation.client.CuratorSessionDTO;
import org.zfin.publication.Publication;

/**
 * A simple class for storing field/value pairs for a given person, optionally
 * relating to a specific publication.  (The table is more flexible, but this
 * class will map to a specific Pub)
 */
public class CuratorSession extends CuratorSessionDTO {

    private Long ID;
    private Person curator;
    private Publication publication;

    public Long getID() {
        return ID;
    }

    public void setID(Long ID) {
        this.ID = ID;
    }

    public Person getCurator() {
        return curator;
    }

    public void setCurator(Person curator) {
        this.curator = curator;
    }

    public Publication getPublication() {
        return publication;
    }

    public void setPublication(Publication publication) {
        this.publication = publication;
    }


    /* Generated by Intellij */

    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CuratorSession)) return false;

        CuratorSession that = (CuratorSession) o;

        if (ID != null ? !ID.equals(that.getID()) : that.getID() != null) return false;
        if (curator != null ? !curator.equals(that.getCurator()) : that.getCurator() != null) return false;
        if (field != null ? !field.equals(that.getField()) : that.getField() != null) return false;
        if (publication != null ? !publication.equals(that.getPublication()) : that.getPublication() != null)
            return false;
        if (value != null ? !value.equals(that.getValue()) : that.getValue() != null) return false;

        return true;
    }

    public int hashCode() {
        int result;
        result = (ID != null ? ID.hashCode() : 0);
        result = 31 * result + (curator != null ? curator.hashCode() : 0);
        result = 31 * result + (publication != null ? publication.hashCode() : 0);
        result = 31 * result + (field != null ? field.hashCode() : 0);
        result = 31 * result + (value != null ? value.hashCode() : 0);
        return result;
    }

    public static enum Attribute {
        SHOW_EXPERIMENT_SECTION,
        SHOW_EXPRESSION_SECTION,
        SHOW_STRUCTURE_SECTION,
        FIGURE_ID;

    }
}