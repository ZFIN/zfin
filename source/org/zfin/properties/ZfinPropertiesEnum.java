package org.zfin.properties;

import org.zfin.properties.ant.*;

/**
Generated by org.zfin.properties.ant.CreateEnumTask
**/
public enum ZfinPropertiesEnum implements SettableEnum{
ADAM_AMSTERDAM,
ALLIANCE_CURATION_URL,
ALL_FAILURE_REPORTS_EMAIL,
ANT_HOME,
ANT_OPTS,
AO_EMAIL_CURATOR,
AO_EMAIL_ERR,
APACHE_PORT,
APACHE_PORT_SECURE,
APACHE_SERVER_NAME,
APACHE_USER,
BLASTSCRIPT_TARGET_PATH,
BLASTSERVER_BINARY_PATH,
BLASTSERVER_BLAST_DATABASE_PATH,
BLASTSERVER_DISTRIBUTED_QUERY_PATH,
BLASTSERVER_FASTA_FILE_PATH,
BLASTSERVER_XDFORMAT,
BLASTSERVER_XDGET,
BLAST_ACCESSION_TEMP_DIR,
BLAST_CACHE_AT_STARTUP,
BLAST_FILE_DIR,
BLAST_SCRIPT_DIR,
BUILD_EMAIL,
CATALINA_BASE,
CATALINA_HOME,
CATALINA_PID,
CGI_BIN_DIR_NAME,
CLIENT_LOCALE,
CONFIGURATION_DIRECTORY,
CONVERT_BINARY_PATH,
COOKIE_PATH,
COUNT_PATO_ERR,
COUNT_PATO_OUT,
COUNT_THISSE_VEGA_ERR,
COUNT_THISSE_VEGA_OUT,
COUNT_VEGA_ERR,
COUNT_VEGA_OUT,
COUNT_ZGC_ERR,
COUNT_ZGC_OUT,
CURATION_DBNAME,
CURATION_INSTANCE,
CURATORS_AT_ZFIN,
DATABASE_UNLOAD_DIRECTORY,
DBNAME,
DB_LOCALE,
DB_NAME,
DB_OWNER,
DB_UNLOADS_PATH,
DEBUGPORT,
DEFAULT_EMAIL,
DISABLE_SECURITY,
DOI_EMAIL_REPORT,
DOMAIN_NAME,
DOWNLOAD_DIRECTORY,
ELSEVIER_REPORT,
EMAIL_SENDER_CLASS,
ENVIRONMENT,
FTPROOT_PATH,
FTP_ROOT,
GBROWSE_DB,
GBROWSE_DB_HOST,
GBROWSE_GRCZ10_IMG_PATH_FROM_ROOT,
GBROWSE_GRCZ10_PATH_FROM_ROOT,
GBROWSE_IMG_PATH_FROM_ROOT,
GBROWSE_PATH_FROM_ROOT,
GBROWSE_ZV9_IMG_PATH_FROM_ROOT,
GBROWSE_ZV9_PATH_FROM_ROOT,
GC_LOGGING_OPTS,
GENBANK_DAILY_EMAIL,
GOOGLE_ANALYTICS_ID,
GO_EMAIL_CURATOR,
GO_EMAIL_ERR,
GRADLE_USER_HOME,
GROOVY_CLASSPATH,
GROOVY_HOME,
HAS_PARTNER,
HIBERNATE_CONFIGURATION_DIRECTORY,
HOSTNAME,
IMAGE_LOAD,
INDEXER_REPORT_EMAIL,
INDEXER_UNLOAD_DIRECTORY,
INDEXER_WIKI_HOSTNAME,
INDEXER_WIKI_PASSWORD,
INDEXER_WIKI_USERNAME,
INSPECTLET_ID,
INSTANCE,
INTERNAL_BLAST_PATH,
JAVA_HOME,
JBROWSE_BASE_URL,
JBROWSE_PROXY_BASE_URL,
JBROWSE_USE_LOCAL_PROXY,
JDBC_DRIVER,
JDBC_URL,
JENKINS_HOME,
JENKINS_PORT,
JPDA_ADDRESS,
JSD_EMAIL,
LN54_CONTACT_EMAIL,
LOADUP_FULL_PATH,
LOAD_ONTOLOGIES_AT_STARTUP,
LOCUS_REGISTRATION_EMAIL,
LOG4J_FILE,
LOG_FILE_MAX,
LOG_FILE_PATTERN,
LOG_FILE_SESSION,
LOG_FILE_SIZE,
MACHINE_NAME,
MICROARRAY_EMAIL,
MOVE_BLAST_FILES_TO_DEVELOPMENT,
MUTANT_NAME,
NCBI_LINKOUT_UPLOAD,
NEW_PUBLICATION_REPORT,
NODE_ENV,
NOMEN_COORDINATOR,
NON_SECUREPORT,
NON_SECURE_HTTP,
ONTOLOGY_LOADER_EMAIL,
PARTNER_DBNAME,
PARTNER_INTERNAL_INSTANCE,
PARTNER_SOURCEROOT,
PATO_EMAIL_CURATOR,
PDF_LOAD,
PDF_PATH,
PGBINDIR,
PGDATA,
PGDATABASE,
PGHOST,
PRIMARY_COLOR,
PRODUCTION_NOTIFICATION_EMAIL,
REQUEST_NEW_ANATOMY_EMAIL,
ROOT_PATH,
SCHEDULE_TRIGGER_FILES,
SECUREPORT,
SECURE_HTTP,
SECURE_SERVER,
SEND_AUTHOR_NOTIF_EMAIL,
SHARED_DOMAIN_NAME,
SHOW_SQL,
SHUTDOWNPORT,
SOLR_CONTEXT,
SOLR_CORE,
SOLR_CREATE_BACKUPS,
SOLR_HOME,
SOLR_HOST,
SOLR_MEMORY,
SOLR_PORT,
SOLR_UNLOADS_PATH,
SOURCEROOT,
SQLHOSTS_FILE,
SQLHOSTS_HOST,
SSH,
SWISSPROT_EMAIL_CURATOR,
SWISSPROT_EMAIL_ERR,
SWISSPROT_EMAIL_REPORT,
TARGETCGIBIN,
TARGETFTPROOT,
TARGETROOT,
TARGETROOT_PREFIX,
TECHNICAL_AT_ZFIN,
USER,
USE_APACHE_FOR_SMOKE_TESTS,
VALIDATION_EMAIL_AD,
VALIDATION_EMAIL_CURATOR,
VALIDATION_EMAIL_DBA,
VALIDATION_EMAIL_EST,
VALIDATION_EMAIL_GENE,
VALIDATION_EMAIL_GENOCURATOR,
VALIDATION_EMAIL_MORPHOLINO,
VALIDATION_EMAIL_MUTANT,
VALIDATION_EMAIL_OTHER,
VALIDATION_EMAIL_TRANSCRIPT,
VALIDATION_EMAIL_XPAT,
VALID_SESSION_TIMEOUT_SECONDS,
VIDEO_LOAD,
WAREHOUSE_DUMP_DIR,
WAREHOUSE_REGN_EMAIL,
WEBHOST_BINARY_PATH,
WEBHOST_BLASTALL,
WEBHOST_BLASTDB_CURL_PATH,
WEBHOST_BLASTDB_TO_COPY,
WEBHOST_BLAST_DATABASE_PATH,
WEBHOST_DBNAME,
WEBHOST_FASTA_FILE_PATH,
WEBHOST_GENBANK_DAILY_FILES,
WEBHOST_HOSTNAME,
WEBHOST_KEY_PATH,
WEBHOST_MUTANT,
WEBHOST_SOURCE,
WEBHOST_USER,
WEBHOST_XDFORMAT,
WEBHOST_XDGET,
WEBROOT_DIRECTORY,
WEB_ADMIN_EMAIL,
WIKI_HOST,
WIKI_PASS,
WIKI_PUSH_TO_WIKI,
WIKI_USER,
ZEBRASHARE_CURATORS,
ZFIN_ADMIN,
;
private String value;
private ZfinPropertiesEnum(String value){this.value=value;}
private ZfinPropertiesEnum(){this(null);}
public String value(){return this.value;}
public String toString(){return this.value;}
public void setValue(String value){this.value=value;}
public static ZfinPropertiesEnum getEnumByName(String name){
for(ZfinPropertiesEnum t : values()){
if(t.toString().equals(name.trim())){
return t;
}}
throw new RuntimeException("No enum of name " + name + " found.");
}}
