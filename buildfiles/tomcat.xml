<?xml version="1.0" encoding="UTF-8"?>
<project name="tomcat" basedir=".">
    <!-- todo: the location of the commons tree should probably come from the env -->
    <property name="tomcat-script-mutant" value="/private/ZfinLinks/Commons/bin/tomcat.sh"/>
    <property name="tomcat-script-production-stop" value="/private/ZfinLinks/Commons/bin/stoptomcat.pl"/>
    <property name="tomcat-script-production-start" value="/private/ZfinLinks/Commons/bin/starttomcat.pl"/>
    <property name="tomcat-script-happy-stop" value="/private/ZfinLinks/Commons/bin/stophappytomcat.pl"/>
    <property name="tomcat-script-happy-start" value="/private/ZfinLinks/Commons/bin/starthappytomcat.pl"/>



    <target name="productionandalmost-tomcat-start" if="isalmostorproduction" description="Starts tomcat if production or almost">
        <exec executable="${tomcat-script-production-start}" failifexecutionfails="true">
            <arg value="start"/>
        </exec>
        <echo message=":TOMCAT START SUCCESSFUL:"/>
    </target>

    <target name="productionandalmost-tomcat-stop" if="isalmostorproduction" description="Stops tomcat if production or almost">
        <exec executable="${tomcat-script-production-stop}" failifexecutionfails="true">
            <arg value="stop"/>
        </exec>
        <echo message=":TOMCAT STOP SUCCESSFUL:"/>
    </target>

    <target name="mutant-tomcat-start" if="ismutant" description="Starts tomcat if mutant">
        <exec executable="${tomcat-script-mutant}"  failifexecutionfails="true">
            <arg value="start"/>
        </exec>
        <echo message=":TOMCAT START SUCCESSFUL:"/>
    </target>

    <target name="mutant-tomcat-stop" if="ismutant" description="Stops tomcat if mutant">
        <exec executable="${tomcat-script-mutant}" failifexecutionfails="true">
            <arg value="stop"/>
        </exec>
        <echo message=":TOMCAT STOP SUCCESSFUL:"/>
    </target>


    <target name="zfinonembryonix-tomcat-start" if="iszfinonembryonix"  description="Starts tomcat if zfin on embryonix">
        <echo message=":Manually START Tomcat:"/>
        <echo>
            "ssh username@embryonix sudo tomcat.sh start embryonix"
        </echo>
    </target>

    <target name="zfinonembryonix-tomcat-stop" if="iszfinonembryonix"  description="Stops tomcat if zfin on embryonix">
        <echo message=":Manually STOP Tomcat:"/>
        <echo>
            "ssh username@embryonix sudo tomcat.sh stop embryonix"
        </echo>
    </target>

    <target name="happy-tomcat-start" if="is-happy-zfin-org" description="Starts tomcat if happy.zfin.org">
        <exec executable="${tomcat-script-happy-start}"  failifexecutionfails="true"/>
        <echo message=":TOMCAT START SUCCESSFUL:"/>
    </target>

    <target name="happy-tomcat-stop" if="is-happy-zfin-org" description="Stops tomcat if happy.zfin.org">
        <exec executable="${tomcat-script-happy-stop}" failifexecutionfails="true"/>
        <echo message=":TOMCAT STOP SUCCESSFUL:"/>
    </target>



    <target name="tomcat-stop" depends="productionandalmost-tomcat-stop,zfinonembryonix-tomcat-stop,mutant-tomcat-stop,happy-tomcat-stop"  description="Stops tomcat by calling all tomcat stop targets"/>
    <target name="tomcat-start" depends="productionandalmost-tomcat-start,zfinonembryonix-tomcat-start,mutant-tomcat-start,happy-tomcat-start"   description="Starts tomcat if zfin on embryonix"/>


    <target name="tomcat-debug-start"   description="Starts tomcat in debug mode">
        <exec executable="${tomcat-script-mutant}">
            <arg value="debug-start"/>
        </exec>
    </target>


    <target name="tomcat-debug-stop"   description="Stops tomcat in debug mode">
        <exec executable="${tomcat-script-mutant}">
            <arg value="debug-stop"/>
        </exec>
    </target>


    <target name="tomcat-restart" depends="tomcat-stop,tomcat-start"  description="Restarts tomcat for the appropriate machine"/>
    <target name="tomcat-debug-restart" depends="tomcat-debug-stop,tomcat-debug-start"  description="Restarts tomcat in debug mode"/>
    <target name="restart" depends="tomcat-restart"  description="Restarts tomcat for the appropriate environment"/>
    <target name="debug-restart" depends="tomcat-debug-restart"  description="Restarts tomcat in debug mode" />

    <!-- an alias to create-mutant-instance with a more explanatory name -->
    <target name="deploy-catalina-base" depends="create-mutant-instance"  description="Creates a tomcat"/>

    <target name="create-mutant-instance" depends="create-tomcat-dirs"
            description="Target to create a Tomcat tree for a given mutant">
        <!--        Copy the conf files-->
        <copy todir="${tomcat-conf}">
            <fileset dir="${template-dir}/conf">
                <exclude name="Catalina/**"/>
            </fileset>
            <filterset>
                <filter token="TARGETROOT" value="${TARGETROOT}"/>
                <filter token="DBNAME" value="${DBNAME}"/>
                <filter token="SERVER-SHUTDOWN-PORT" value="${SHUTDOWNPORT}"/>
                <filter token="Non-SECUREPORT" value="${NON_SECUREPORT}"/>
                <filter token="SECUREPORT" value="${SECUREPORT}"/>
                <filter token="DOMAIN-NAME" value="${DOMAIN_NAME}"/>
            </filterset>
        </copy>
        <!--        Copy the  context files-->
        <copy todir="${domain-conf}">
            <fileset dir="${template-dir}/conf/Catalina/mutant"/>
            <filterset>
                <filter token="TARGETROOT" value="${TARGETROOT}"/>
                <filter token="DBNAME" value="${DBNAME}"/>
                <filter token="SERVER-SHUTDOWN-PORT" value="${SHUTDOWNPORT}"/>
                <filter token="Non-SECUREPORT" value="${NON_SECUREPORT}"/>
                <filter token="SECUREPORT" value="${SECUREPORT}"/>
                <filter token="SQLHOSTSHOST" value="${SQLHOSTS_HOST}"/>
                <filter token="INFORMIXSERVER" value="${INFORMIXSERVER}"/>
                <filter token="INFORMIXPORT" value="${INFORMIX_PORT}"/>
                <filter token="DOMAIN-NAME" value="${DOMAIN_NAME}"/>
                <filter token="GBROWSE_DB" value="${GBROWSE_DB}"/>
                <filter token="GBROWSE_DB_HOST" value="${GBROWSE_DB_HOST}"/>
            </filterset>
        </copy>
        <antcall target="set-catalina-base-perms"/>
    </target>

    <target name="set-catalina-base-perms"  if="isinformix"  description="Sets permissions for tomcat">
        <echo message="chmod a+rX for ${CATALINA_BASE}"/>
        <chmod perm="a+rX" type="both" verbose="true">
            <fileset dir="${CATALINA_BASE}"/>
        </chmod>

        <echo message="chmod a+rwX for ${CATALINA_BASE}/work"/>
        <chmod perm="a+rwX" type="both" verbose="true">
            <fileset dir="${CATALINA_BASE}/work"/>
        </chmod>
        <echo message="***********************************************************************"/>
        <echo message=" As yourself, please do: "/>
        <echo message="    sudo chown -R zfishweb ${CATALINA_BASE}/logs "/>
        <echo message="    sudo -u zfishweb touch ${CATALINA_BASE}/logs/catalina.out "/>
        <echo message="************************************************************************"/>
    </target>

    <target name="create-tomcat-dirs" description="Creates tomcat directories">
        <mkdir dir="${CATALINA_BASE}"/>
        <mkdir dir="${CATALINA_BASE}/conf"/>
        <mkdir dir="${CATALINA_BASE}/conf/Catalina"/>
        <mkdir dir="${domain-conf}"/>
        <mkdir dir="${CATALINA_BASE}/logs"/>
        <mkdir dir="${CATALINA_BASE}/webapps"/>
        <mkdir dir="${CATALINA_BASE}/work"/>
        <mkdir dir="${CATALINA_BASE}/temp"/>
    </target>

    <macrodef name="jsp-compile" description="Compiles jsp files using jspc">
        <sequential>
            <delete dir="${pre.jsp-compile}" includes="**/*"/>
            <mkdir dir="${pre.jsp-compile}"/>
            <taskdef classname="org.apache.jasper.JspC" name="jasper2">
                <classpath id="jspc.classpath">
                    <path refid="classpath"/>
                    <pathelement location="${pre-web-inf}"/>
                    <fileset dir="${CATALINA_HOME}/bin">
                        <include name="*.jar"/>
                    </fileset>
                    <fileset dir="${CATALINA_HOME}/server/lib">
                        <include name="*.jar"/>
                    </fileset>
                    <fileset dir="${CATALINA_HOME}/common/lib">
                        <include name="*.jar"/>
                    </fileset>
                </classpath>
            </taskdef>
            <jasper2 validateXml="false"
                     uriroot="${pre-home.target}"
                     outputDir="${pre.jsp-compile}"
                     classpath="${jspc.classpath}"
                     failOnError="false"
                     verbose="0"
                     listErrors="true"
                     compile="false"
                     compilerSourceVM="1.6"
                     compilerTargetVM="1.6"
                    />
            <javac srcdir="${pre.jsp-compile}"
                   destdir="${pre.jsp-compile}"
                   classpathref="jspc.classpath"
                   fork="true"
                   includeAntRuntime="no"
                   memoryMaximumSize="256m"
                   debug="true"
                   target="1.6"/>
            <echo message=":JSP COMPILE SUCCESSFUL:"/>
        </sequential>
    </macrodef>


    <target name="has-tomcat-symlink">
        <echo message="Checking tomcat symlink between ${tomcat-work}/org and ${jsp-compile}/org.  "/>
        <fail message=":FAIL TOMCAT JSP-COMPILE SYMLINK NOT FOUND:  Try running 'ant create-tomcat-symlink'." unless="has.tomcat.symlink"/>
        <echo message="Link exists"/>
    </target>

    <target name="create-tomcat-symlink">
        <symlink link="${tomcat-work}/org" action="single" overwrite="true" failonerror="fail" resource="${jsp-compile}/org"/>
    </target>

</project>
