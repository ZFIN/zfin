<?xml version="1.0" encoding="UTF-8"?>
<project name="properties" basedir=".">

<!--required to build GwtConversionTest because of different encodings-->
<!-- Supports test for non-ASCII characters (case 6544) and is used for compiling. -->
    <property name="encoding" value="UTF-8"/>
<!--    <property name="encoding" value="ISO-8859-1"/>-->

<!-- The destination directory for all the compiled classes. -->
    <!-- home targets -->
    <property name="home.target" value="${TARGETROOT}/home"/>
    <property name="pre-home.target" value="${TARGETROOT}/pre-home"/>
    <property name="post-home.target" value="${TARGETROOT}/post-home"/>
    <property name="archive-home.target" value="${TARGETROOT}/archive${today.DSTAMP}-home"/>

    <!-- static-version file targets -->
    <property name="static-java-version.file" value="${home.target}/${java-static-version.file.name}"/>
    <property name="pre.static-java-version.file" value="${pre-home.target}/${java-static-version.file.name}"/>
    <property name="post.static-java-version.file" value="${post-home.target}/${java-static-version.file.name}"/>
    <property name="archive.static-java-version.file" value="${archive-home.target}/${java-static-version.file.name}"/>

    <!-- jsp-version file targets -->
    <property name="jsp-version.file" value="${home.target}/WEB-INF/jsp/dev-tools/${jsp-version.file.name}"/>
    <property name="pre.jsp-version.file" value="${pre-home.target}/WEB-INF/jsp/dev-tools/${jsp-version.file.name}"/>
    <property name="post.jsp-version.file" value="${post-home.target}/WEB-INF/jsp/dev-tools/${jsp-version.file.name}"/>
    <property name="archive.jsp-version.file" value="${archive-home.target}/WEB-INF/jsp/dev-tools/${jsp-version.file.name}"/>

    <!-- gwt targets -->
    <property name="gwt.target" value="${home.target}/gwt"/>
    <property name="gwt.pre-target" value="${pre-home.target}/gwt"/>
    <property name="gwt.post-target" value="${post-home.target}/gwt"/>
    <property name="gwt.archive-target" value="${archive-home.target}/gwt"/>

    <!-- web-inf targets -->
    <property name="web-inf.target" value="${home.target}/WEB-INF"/>
    <property name="pre-web-inf" value="${pre-home.target}/WEB-INF"/>
    <property name="post-web-inf" value="${post-home.target}/WEB-INF"/>
    <property name="archive-web-inf" value="${archive-home.target}/WEB-INF"/>

    <property name="tomcat-temp" value="${CATALINA_BASE}/temp"/>
    <property name="tomcat-work" value="${CATALINA_BASE}/work/Catalina/${DOMAIN_NAME}/_"/>
    <property name="pre.jsp-compile" value="${pre-web-inf}/classes/jsp-compile"/>
    <property name="jsp-compile" value="${web-inf.target}/classes/jsp-compile"/>

    <!-- The destination directory for tagunit web root -->
    <property name="tagunit-root.dir" value="${TAGUNIT_HOME}"/>

    <!--source root-->
    <property name="home" value="${basedir}/home"/>
    <property name="home.webinf" value="${home}/WEB-INF"/>
    <property name="home.css" value="${home}/css"/>
    <property name="home.images" value="${home}/images"/>
    <property name="home.javascript" value="${home}/javascript"/>

    <!--test properties-->
    <property name="reports.dir" value="${basedir}/reports"/>
    <property name="test.reports.dir" value="${reports.dir}/tests"/>

    <property name="unitTestFile" value="unit-results"/>
    <property name="dbTestFile" value="db-results"/>
    <property name="controllerTestFile" value="controller-results"/>
    <property name="blastTestFile" value="blast-results"/>
    <property name="smokeTestFile" value="smoke-results"/>
    <property name="serviceTestFile" value="service-results"/>

    <property name="smokeFailureMessage"
              value="Failed internal smoke test.  See ${smokeTestFile}.txt for more information.  Please confirm that the web client is running properly."/>
    <property name="serviceFailureMessage"
              value="Failed to connect to external services.  See ${serviceTestFile}.txt for more information.  Please try connecting again, later."/>

    <!-- extended classpath for unit tests and other commands. -->
    <path id="extended.classpath">
        <path refid="classpath"/>
        <fileset dir="${lib}">
            <include name="*.jar"/>
            <include name="*.zip"/>
        </fileset>
        <fileset dir="${gwt.lib}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${jwebunit.lib}">
            <include name="*.jar"/>
        </fileset>
        <!--<fileset dir="${CATALINA_HOME}/common/lib">-->
            <!--<include name="ifxjdbc.jar"/>-->
        <!--</fileset>-->
    </path>

    <path id="log4j">
	<pathelement location="${basedir}/test"/>
    </path>

    <!-- where all of the static xml data files are -->
    <property name="conf.dir" value="${basedir}/conf"/>

    <!-- directory of the hibernate configuration files. -->
    <property name="hibernate.conf.dir" value="${basedir}/source/org/zfin"/>

    <!-- JVM args for all forked processes relating to unit tests -->
    <property name="junit.jvmargs" value="-Xmx128m"/>
    <property name="tab" value="&#x0009;"/>

    <property name="target.dir" value="${basedir}"/>

    <!-- war file name-->
    <property name="zfin.war" value="${basedir}/zfin.war"/>

    <!-- Classpath definitions -->
    <path id="classpath">
        <pathelement location="${classbin.dir}"/>
        <pathelement location="${servlet.jar}"/>
        <fileset dir="${web.lib}">
            <include name="*.jar"/>
        </fileset>
    </path>


    <!-- Tomcat related environment variables -->
    <property name="tomcat-conf" value="${CATALINA_BASE}/conf"/>
    <property name="tomcat-lib" value="${CATALINA_BASE}/lib"/>
    <property name="tomcat-bin" value="${CATALINA_BASE}/bin"/>
    <property name="domain-conf" value="${CATALINA_BASE}/conf/Catalina/${DOMAIN_NAME}"/>

    <property name="template-dir" value="lib/Java/tomcat"/>
    <property name="host-dir" value="${template-dir}/conf/Catalina"/>
    <property name="domain-host-dir" value="${CATALINA_BASE}/conf/Catalina"/>

    <condition property="isinformix">
        <equals arg1="${USER}" arg2="informix"/>
    </condition>

    <condition property="isalmost">
        <equals arg1="${INSTANCE}" arg2="almost"/>
    </condition>

    <condition property="is-happy-zfin-org">
        <equals arg1="${INSTANCE}" arg2="happy"/>
    </condition>

    <condition property="is-trunk-zfin-org">
        <equals arg1="${INSTANCE}" arg2="trunk"/>
    </condition>

    <condition property="is-test-zfin-org">
        <equals arg1="${INSTANCE}" arg2="test"/>
    </condition>


    <condition property="iszfinonembryonix">
        <and>
            <equals arg1="${DBNAME}" arg2="zfindb"/>
            <equals arg1="${INFORMIX_SERVER}" arg2="wanda"/>
            <equals arg1="${USER}" arg2="informix"/>
        </and>
    </condition>

    <condition property="iszfinonkinetix">
        <and>
            <equals arg1="${DBNAME}" arg2="zfindb"/>
            <equals arg1="${INFORMIX_SERVER}" arg2="whitebread"/>
            <equals arg1="${USER}" arg2="informix"/>
        </and>
    </condition>

    <condition property="isalmostorproduction">
        <or>
            <equals arg1="${isalmost}" arg2="true"/>
            <equals arg1="${iszfinonkinetix}" arg2="true"/>
        </or>
    </condition>

    <condition property="isalmosthappytrunktest">
        <or>
            <equals arg1="${isalmost}" arg2="true"/>
            <equals arg1="${is-happy-zfin-org}" arg2="true"/>
            <equals arg1="${is-trunk-zfin-org}" arg2="true"/>
            <equals arg1="${is-test-zfin-org}" arg2="true"/>
        </or>
    </condition>

    <condition property="isproduction">
        <equals arg1="${DBNAME}" arg2="zfindb"/>
    </condition>

    <condition property="notproduction">
        <not>
            <equals arg1="${DBNAME}" arg2="zfindb"/>
        </not>
    </condition>

    <condition property="ismutant">
        <not>
            <equals arg1="${USER}" arg2="informix"/>
        </not>
    </condition>




    <target name="dumpMachine" description="Dump machine type.">
        <echo message="INSTANCE:             ${INSTANCE}"/>
        <echo message="USER:                 ${USER}"/>
        <echo message="DBNAME:               ${DBNAME}"/>
        <echo message="INFORMIX_SERVER:      ${INFORMIX_SERVER}"/>
        <echo message="isinformix:           ${isinformix}"/>
        <echo message="isalmost:             ${isalmost}"/>
        <echo message="iszfinonkinetix:        ${iszfinonkinetix}"/>
        <echo message="isalmostorproduction: ${isalmostorproduction}"/>
        <echo message="isproduction:         ${isproduction}"/>
        <echo message="notproduction:        ${notproduction}"/>
        <echo message="ismutant:             ${ismutant}"/>
    </target>

    <!-- javadoc diectory -->
    <property name="zfin-javadoc" value="home/util/javadoc/zfin"/>

    <condition property="has.pre-directories">
        <and>
            <available file="${pre-web-inf}"/>
            <available file="${gwt.pre-target}"/>
        </and>
    </condition>

    <condition property="has.web-inf">
        <available file="${web-inf.dir}"/>
    </condition>

    <condition property="has.post-directories">
        <and>
            <available file="${post-web-inf}"/>
            <available file="${gwt.post-target}"/>
        </and>
    </condition>

    <condition property="has.tomcat.symlink">
        <available type="dir" file="${tomcat-work}/org"/>
    </condition>

    <condition property="has.download.symlink">
        <available type="dir" file="${home.target}/data-transfer"/>
    </condition>

</project>
