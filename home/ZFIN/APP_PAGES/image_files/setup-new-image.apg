<!-- FILE: SETUP-NEW-IMAGE.-->

<!-- 
ANYWAY, this file just does some important setup stuff to be done before the a data entry form for a new IMAGE is DISPLAYED. Specifically, it checks to see if we are entering the new-image form for the first time -- if so, it creates a new IMAGE record. Then it goes on to extract all of the IMAGE attributes from the record (either the brand new one, or the one passed in as temp_oid), and then exits to pass control back to new-chromo.html.
-->

<!-- If no temp_oid passed in, just make it null -->
<?MIVAR COND="$(NXST,$temp_oid)" NAME=$temp_oid>NULL<?/MIVAR>

<!-- IF THIS IS THE FIRST TIME INTO THIS PAGE, MAKE NEW TEMP ENTRY -->
<?MIBLOCK COND="$(AND,$(EC,$temp_oid,NULL),$(XST,$upload_image))">
<?MISQL SQL="execute function get_id('IMAGE');"><?/MISQL>
<?MIVAR NAME=$temp_oid>$1<?/MIVAR>

<?MISQL SQL="insert into image (zdb_id, image, status, entry_time,owner) values ('$temp_oid', FILETOBLOB('$upload_image', 'client'), 'temporary', current,'$ZDB_ident');"><?/MISQL>


<!-- Now first create a thumbnail for the new image using image alchemy call via miexec. That way we will have a thumbnail image to upload along with the original in the following step. -->
<?MIVAR NAME=$mythumb>/tmp/$temp_oid.gif<?/MIVAR>
<?MISQL SQL="execute function sysexec('make_thumbnail', '$upload_image $mythumb -g -Yb32 -+ ');"><?/MISQL>
<?MIVAR NAME=$void>$1<?/MIVAR>

<?MISQL SQL="update image set thumbnail=FILETOBLOB('$mythumb', 'server') where zdb_id='$temp_oid';"><?/MISQL>
<?MISQL SQL="execute function sysexec('rm', '$mythumb');"><?/MISQL>

<!-- Now if there was a return_rec ID passed in, this means this new record was initiated in the
course of filling out some other record -- we will need to go back there when we're done, so
stick the return_rec ID into the temp record as well.
-->
<?MISQL COND="$(XST,$return_rec)" SQL="update image set return_rec='$return_rec' where zdb_id='$temp_oid';"><?/MISQL>

<?/MIBLOCK> <!-- ends case where its first time into page -->

<?MIVAR COND="$(AND,$(EC,$temp_oid,NULL),$(NXST,$upload_image))">
<h1>ERROR! No input image passed in!</h1>
<?/MIVAR>


<!-- OK, NOW GET CURRENT VALUES FROM THE IMAGE ENTRY, PUTTING THEM
      INTO THE FORM -->
<!-- Note: some values, like 'stock' can be passed in, and should not be overwritten -->

<?MISQL SQL="select stage, stage_pct, stock, specimen, image_type, orientation, comments, image, representative, flag, resolution from image where zdb_id='$temp_oid';"><?/MISQL>
<?MIVAR NAME=$stage>$1<?/MIVAR>
<?MIVAR NAME=$stage_pct>$2<?/MIVAR>
<?MIVAR COND="$(NXST,$stock)" NAME=$stock>$3<?/MIVAR>
<?MIVAR NAME=$specimen>$4<?/MIVAR>
<?MIVAR NAME=$image_type>$5<?/MIVAR>
<?MIVAR NAME=$orientation>$6<?/MIVAR>
<?MIVAR NAME=$comments>$7<?/MIVAR>
<?MIVAR NAME=$image>$8<?/MIVAR>
<?MIVAR NAME=$representative>$9<?/MIVAR>
<?MIVAR COND="$(NXST,$flag)" NAME=$flag>$10<?/MIVAR>
<?MIVAR NAME=$resolution>$11<?/MIVAR>

<?MIVAR COND="$(EC,$resolution,NULL)" NAME=$resolution>dev_stage<?/MIVAR>

<!-- Now if stock specified, grab name,abbrev,and allele -->
<?MISQL COND="$(NC,$stock,NULL)" SQL="select name,abbrev from fish where zdb_id='$stock';"><?/MISQL>
<?MIVAR NAME=$fish_name>$1<?/MIVAR>
<?MIVAR NAME=$fish_abbrev>$2<?/MIVAR>

<!-- Now it should return back to new-image.html to toss up the entry form. -->
