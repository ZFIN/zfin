<?MICOMMENT>

FILE:     xpatcurreset.apg
PREFIX:   xpcurreset_

Reset the cookies and infrastructure tables for pub curation.


<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>
<?/MIERROR>

<?MIBLOCK COND="$(EC,$AUTHORIZED,root)">

  <script type="text/javascript" language="javascript">
  
    
    <?MICOMMENT>
       Do housecleaning whenever the user visits a new pub.
       
       1. reset cookies
       2. clean table expression_pattern_infrastructure
       3. insert records for the structure list
    <?/MICOMMENT>
    <?MIVAR COND=$(OR,$(NXST,$pubcur_c_pubCuration),$(NC,$OID,$pubcur_c_pubCuration))>

      setCookie('pubCuration','$OID','pubcur_c_')
      setCookie('figure_only','','pubcur_c_')
      setCookie('gene_only','','pubcur_c_')
      setCookie('fish_only','','pubcur_c_')
      <?MIVAR COND=$(NXST,$pubcur_c_auto_on)>
        setCookie('auto_on','on','pubcur_c_')
      <?/MIVAR>

         
      setCookie('environment','','xpcur_c_')
      setCookie('condition','','xpcur_c_')
      setCookie('experiment','','xpcur_c_')
      setCookie('figure','','xpcur_c_')
      setCookie('image','','xpcur_c_')
      setCookie('panel','','xpcur_c_')
      setCookie('structure','','xpcur_c_')
      setCookie('anatitem_add_csv','','xpcur_c_')
      setCookie('anatitem_remove_csv','','xpcur_c_')
      setCookie('figure_only','','xpcur_c_')
      setCookie('tod','','xpcur_c_')
      setCookie('show_all','false','xpcur_c_')

      setCookie('permission','','xpcur_c_')
      setCookie('has_permission','<?MISQL SQL="select pub_can_show_images from publication where zdb_id = '$OID';">$1<?/MISQL>','xpcur_c_');
      replaceLocation("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-curation.apg&OID=$OID");

      <?MICOMMENT> Keep the table clean. Delete all entries for this pub that were not entered today. <?/MICOMMENT>
      <?MISQL SQL="SELECT xpatinf_zdb_id FROM expression_pattern_infrastructure WHERE xpatinf_curator_zdb_id = '$ZDB_ident' and xpatinf_date != TODAY;">
        <?MIVAR NAME=xpatinf_zdb_id>$1<?/MIVAR>
        <?MISQL SQL="delete from zdb_active_data where zactvd_zdb_id = '$xpatinf_zdb_id';"><?/MISQL>
      <?/MISQL>

      <?MICOMMENT> Generate the list <?/MICOMMENT>
      <?MISQL SQL="  
          SELECT distinct xpatres_anat_item_zdb_id, xpatres_expression_found
          FROM expression_experiment, expression_result
          WHERE xpatex_source_zdb_id = '$OID'
            AND xpatex_zdb_id = xpatres_xpatex_zdb_id
            AND NOT EXISTS
               (
                 select *
                 from expression_pattern_infrastructure
                 where xpatinf_pub_zdb_id = '$OID'
                   and xpatinf_anatitem_zdb_id = xpatres_anat_item_zdb_id
                   and xpatinf_expressed = xpatres_expression_found
               );">
            
          <?MICOMMENT> ==| Get next ZDB-ID |== <?/MICOMMENT>
          <?MISQL SQL="execute function get_id('XPATINF');">$(SETVAR,$xpatinf_zdb_id,$1)<?/MISQL>
     
          <?MICOMMENT> ==| Add New XPATINF |== <?/MICOMMENT>  
          <?MISQL SQL="INSERT INTO zdb_active_data(zactvd_zdb_id) VALUES('$xpatinf_zdb_id');"><?/MISQL>   
          
          <?MISQL SQL="    
              INSERT INTO expression_pattern_infrastructure (
                  xpatinf_zdb_id,
                  xpatinf_curator_zdb_id,
                  xpatinf_pub_zdb_id,
                  xpatinf_anatitem_zdb_id,
                  xpatinf_expressed,
                  xpatinf_date )
              VALUES (
                  '$xpatinf_zdb_id',
                  '$ZDB_ident', 
                  '$OID', 
                  '$1',
                  '$2',
                  TODAY);">
          <?/MISQL>
            
      <?/MISQL>
    
    <?/MIVAR>

    <?MIVAR COND=$(AND,$(XST,$xpcur_c_show_all),$(EC,$xpcur_c_show_all,t))>
      setCookie('environment','show','xpcur_c_')
      setCookie('condition','show','xpcur_c_')
      setCookie('experiment','show','xpcur_c_')
      setCookie('figure','show','xpcur_c_')
      setCookie('image','show','xpcur_c_')
      setCookie('panel','show','xpcur_c_')
      setCookie('structure','show','xpcur_c_')
      setCookie('tod','show','xpcur_c_')
      setCookie('show_all','true','xpcur_c_')
      replaceLocation("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-curation.apg&OID=$OID");          
    <?/MIVAR>    

    <?MIVAR COND=$(AND,$(XST,$xpcur_c_show_all),$(EC,$xpcur_c_show_all,f))>
      setCookie('environment','','xpcur_c_')
      setCookie('condition','','xpcur_c_')
      setCookie('experiment','','xpcur_c_')
      setCookie('figure','','xpcur_c_')
      setCookie('image','','xpcur_c_')
      setCookie('panel','','xpcur_c_')
      setCookie('structure','','xpcur_c_')
      setCookie('tod','','xpcur_c_')
      setCookie('show_all','false','xpcur_c_')
      replaceLocation("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-curation.apg&OID=$OID");          
    <?/MIVAR> 
  

  </SCRIPT>

<?/MIBLOCK> <?MICOMMENT> end authorize <?/MICOMMENT>