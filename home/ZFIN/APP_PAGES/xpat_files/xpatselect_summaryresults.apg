<?MICOMMENT>

FILE:     xpatselect_summaryresults.apg
PREFIX:   xpsumres_

INPUT VARS:
   xpsumres_resultTable		temp table with figure & gene information
   xpsumres_baseUrl		string to use as a base for the detailedresults link
   xpsumres_matchedText		text to highlight in matching text column  [only exists when there is matching text]
   xpsumres_matchedTextSearchType	'contains' / 'begins' / 'equals' for matchedText [ditto]

OUTPUT VARS:
   xpsumres_geneCount		used by xpatselect to fill xpatsel_nResults   

<?/MICOMMENT>

<?MICOMMENT> *** get gene count *** <?/MICOMMENT>

<?MISQL SQL="select count(unique xpat_gene_zdb_id)::Integer from $xpsumres_resultTable;">
  <?MIVAR NAME="xpsumres_geneCount">$1<?/MIVAR>
<?/MISQL>

<?MICOMMENT> *** check to see if we need a matching text column *** <?/MICOMMENT>

<?MIVAR NAME="$xpsumres_displayMatchingColumn">f<?/MIVAR>
<?MISQL SQL="select first 1 xpat_matching_text from $xpsumres_resultTable where xpat_matching_text is not null;">
  <?MIVAR NAME="$xpsumres_displayMatchingColumn">t<?/MIVAR>
<?/MISQL>

<div style="position: absolute; top: 115px; right: 5px; "> <?MICOMMENT> ** this seems wrong, but I'm having trouble doing it better ** <?/MICOMMENT>
  <a href="#modify">Modify Search</a><br>
  <!-- Insert a form with one button. Label button Your Input Welcome -->
  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';"> $1 <?/MISQL>
</div>

<br>

<?MICOMMENT>$xpsumres_resultTable is $xpatselect_temp_match with the following def:
 
    create temp table $xpatselect_temp_match (
      xpat_fig_zdb_id 		varchar(50),
      xpat_gene_zdb_id          varchar(50),
      xpat_xpatex_zdb_id	varchar(50),
      xpat_matching_text 	varchar(255),
      xpat_matching_precedence	varchar(80),
      xpat_matching_signif	integer

   we found that one gene could have several match with different matching
   significance, matching text. Yet each gene would be used in multiple xpat experiment 
   and each experiment generates multiple figures. 
   It would be a lots of work to re-engineer this table with less redundance. I tried but
   had to give up with limited time for the bug. So I am limiting the modification to 
   this file and introducing a second temp table. 
<?/MICOMMENT>

<table class="searchresults"> <!-- open summary results table -->
  <caption class="searchresults">  
    <?MIVAR>
      Expression Pattern Search Results <br> <small>($xpsumres_geneCount genes with expression)</small>
    <?/MIVAR>
  </caption>
  <thead class="searchresults">
  <tr>
    <th class="searchresults">Gene</th>
    <th>Expression Data <small>(<a href="javascript:start_note();">current status</a>)</small></th>
    <th>Stage Range</th>
    <?MIBLOCK COND="$(EC,$xpsumres_displayMatchingColumn,t)">
      <th>Matching Text</th>
    <?/MIBLOCK>
  </tr>
  </thead>
  <tbody class="searchresults">


  <?MICOMMENT> *** zebra striping variables *** <?/MICOMMENT>

  <?MIVAR NAME="xpsumres_recordIndex">0<?/MIVAR>

  <?MISQL WINSTART=$BEGIN WINSIZE=$WINSIZE SQL="
     select distinct mrkr_zdb_id, mrkr_abbrev,
       	    get_mrkr_abbrev_html_link(mrkr_zdb_id), 
            mrkr_abbrev_order,xpat_matching_signif
       from $xpsumres_resultTable
            join marker on mrkr_zdb_id = xpat_gene_zdb_id
     order by xpat_matching_signif, mrkr_abbrev_order;">
    <?MIVAR NAME="xpsumres_geneZdbId">$1<?/MIVAR>
    <?MIVAR NAME="xpsumres_geneAbbrev">$2<?/MIVAR>
    <?MIVAR NAME="xpsumres_geneAbbrevLink">$3<?/MIVAR>  
    
      <?MISQL SQL=" select distinct xpat_fig_zdb_id
                    from $xpsumres_resultTable
                    where xpat_gene_zdb_id = '$xpsumres_geneZdbId'">
        <?MIVAR NAME="xpsumres_fig_zdb_id">$1<?/MIVAR>
      <?/MISQL>     
      <?MIVAR NAME="xpsumres_figCount">$MI_ROWCOUNT<?/MIVAR>

      <?MIBLOCK COND="$(=, $xpsumres_figCount, 1)">
      
      <?/MIBLOCK>   

    <?MISQL SQL="
	select distinct publication.zdb_id, publication.pub_mini_ref
	from $xpsumres_resultTable
             join figure on xpat_fig_zdb_id = fig_zdb_id
             join publication on fig_source_zdb_id = publication.zdb_id
	where xpat_gene_zdb_id = '$xpsumres_geneZdbId'
        ;">
        <?MIVAR NAME="xpsumres_pub_zdb_id">$1<?/MIVAR>
        <?MIVAR NAME="xpsumres_pubMiniRef">$2<?/MIVAR>

    <?/MISQL>
    <?MIVAR NAME="xpsumres_pubCount">$MI_ROWCOUNT<?/MIVAR>

    
    <?MIVAR NAME="xpsumres_recordIndex">$(+,$xpsumres_recordIndex,1)<?/MIVAR>
 
    <tr <?MIBLOCK COND="$(EC,1,$(MOD,$xpsumres_recordIndex,2))">class="odd"<?/MIBLOCK> > 

      <?MICOMMENT> *** gene column *** <?/MICOMMENT>
      <td>
           <?MIVAR>$xpsumres_geneAbbrevLink<?/MIVAR>
      </td>

      <?MICOMMENT> *** figcount/pubcount data link column *** <?/MICOMMENT>     
      <td nowrap> 
          <?MICOMMENT>**NOTE**this is gonna take some thought, I really want these to be real links, that you can open in a tab,
                   not just javascripts to force submits.  That means that we might need to pass the whole url in with this and
                   just add the gene part of it...<?/MICOMMENT>
       
          <?MICOMMENT> When it's just one pub, use the pub mini ref instead of saying that there's only one.  For multiple thisse
                    "pubs" (pub / probe combos) it wll still just say one pub.  This is probably correct, even though it doesn't
                     necessarily follow the scheme of pretending that they're each a different pub. <?/MICOMMENT>

          <?MIBLOCK COND="$(EC,$xpsumres_pubCount,1)">
            <?MIVAR NAME="$xpsumres_figsFrom"><A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$xpsumres_pub_zdb_id>$xpsumres_pubMiniRef</A><?/MIVAR>
          <?MIELSE>
            <?MIVAR NAME="$xpsumres_figsFrom">$xpsumres_pubCount publications<?/MIVAR>
          <?/MIBLOCK>


          <?MICOMMENT> *** We want to let the users know if there are images, so we get 
                           run this hopefully quick query, populate the tag variable,
                           if it exists, it gets written out.  After that test, the variable
                           gets gets set back to null for the next go-around.              **** 
          <?/MICOMMENT>

          <?MISQL SQL="
		select count(*)::Integer
		  from $xpsumres_resultTable
		 where xpat_gene_zdb_id = '$xpsumres_geneZdbId'
		   and exists (
			select 't'
			  from image
			 where img_fig_zdb_id = xpat_fig_zdb_id);">
         
       	     <?MIVAR COND="$(!=,$1,0)" NAME="$xpsumres_cameraTag"><img src="/images/camera_icon.gif" border=0 alt="with image(s)"><?/MIVAR>
         <?/MISQL> 

         <?MIBLOCK COND="$(>,$xpsumres_figCount,1)">          
           <?MIVAR>
            <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect.apg&query_results=true&xpatsel_geneZdbId=$xpsumres_geneZdbId&gene_name=$xpsumres_geneAbbrev&searchtype=equals&$xpsumres_baseUrl">
              $xpsumres_figCount figures</a>
            from $xpsumres_figsFrom $(IF,$(XST,$xpsumres_cameraTag),$xpsumres_cameraTag) $(UNSETVAR,$xpsumres_cameraTag)            
           <?/MIVAR>
	 <?MIELSE>
	   <?MISQL SQL="select fig_label from figure where fig_zdb_id = '$xpsumres_fig_zdb_id';">
	      <?MIVAR NAME=xpsumres_fig_label>$1<?/MIVAR>
           <?/MISQL>
	   <?MIVAR>
	     <a href='/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-fxfigureview.apg&OID=$xpsumres_fig_zdb_id'>$xpsumres_fig_label</a> from $xpsumres_figsFrom $(IF,$(XST,$xpsumres_cameraTag),$xpsumres_cameraTag) $(UNSETVAR,$xpsumres_cameraTag)
           <?/MIVAR>
	 <?/MIBLOCK>
       </td>

       <?MICOMMENT> *** stage range column *** <?/MICOMMENT>
        <td>
          <?MISQL SQL="
            select WebExplode(object, 'fxgensr_gene_zdb_id=$xpsumres_geneZdbId&fxgensr_resultTable=$xpsumres_resultTable')
  	    from webpages
	    where id = 'aa-fxgenestgrng.apg';">$1<?/MISQL>
        </td>

      <?MICOMMENT> *** matching text column *** <?/MICOMMENT>
      <?MIBLOCK COND="$(EC,$xpsumres_displayMatchingColumn,t)">
        <td>
          <?MISQL SQL="select first 1 xpat_matching_precedence, xpat_matching_text 
                       from $xpsumres_resultTable
                      where xpat_gene_zdb_id = '$xpsumres_geneZdbId';">	
		<?MIVAR NAME=xpsumres_matching_qualification>$1<?/MIVAR>
		<?MIVAR NAME=xpsumres_matching_output>$2<?/MIVAR>
	   <?/MISQL>

          <?MIVAR NAME=$xpsumres_start_pos>$(POSITION,$(LOWER,$xpsumres_matching_output),$(LOWER,$xpsumres_matchedText))<?/MIVAR>
	  <?MIVAR NAME=$xpsumres_str_length>$(STRLEN,$xpsumres_matchedText)<?/MIVAR>
	  
           <?MICOMMENT> *** restore single apostrophe matching text column *** <?/MICOMMENT>
          <?MIVAR NAME=$xpsumres_matchedText COND="$(XST,$xpsumres_matchedText)" DELIMIT="''" REPLACE="'">$xpsumres_matchedText<?/MIVAR>

	  <?MICOMMENT> currently, we only handle one matching text case,  <?/MICOMMENT>
          <?MIBLOCK COND="$(>,$xpsumres_start_pos,0)"> 
	    <?MIVAR>$xpsumres_matching_qualification: $(SUBSTR,$xpsumres_matching_output,1,$(-,$xpsumres_start_pos,1))<b>$xpsumres_matchedText</b>$(SUBSTR,$xpsumres_matching_output,$(+,$xpsumres_start_pos,$xpsumres_str_length))
	    <?/MIVAR>
          <?MIELSE>
  	    <?MIVAR>$xpsumres_matching_qualification: $xpsumres_matching_output  <?/MIVAR>
          <?/MIBLOCK>
      
        </td>
       <?/MIBLOCK>
      </tr>
 
  <?/MISQL>
  

  </tbody>
</table> <!-- close summary results table -->

