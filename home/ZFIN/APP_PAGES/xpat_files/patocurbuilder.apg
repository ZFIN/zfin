<?MICOMMENT>

FILE:     patocuration_builder.apg
PREFIX:   patobldr_


<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>

<?/MIERROR> 

<?MIBLOCK COND="$(XST,$OID)">

<style type="text/css">
.searchresults th { font-weight: bold; text-align: left;}
.searchresults thead tr {background: #ccc;}
.searchresults tbody tr:hover {background: #cff;} 
.highlight { background: #cff; }
</style>

<link href="/phenote/css/control.css" type="text/css" rel="stylesheet">
<!-- Ajax stuff (prototype library and friends)-->
 
<script src="/phenote/javascript/ajax-lib/prototype.js" type="text/javascript"></script>
<script src="/phenote/javascript/ajax-lib/effects.js"   type="text/javascript"></script>
<script src="/phenote/javascript/ajax-lib/dragdrop.js"  type="text/javascript"></script>
<script src="/phenote/javascript/ajax-lib/controls.js"  type="text/javascript"></script>


<?MICOMMENT> ** get session variables from database ** <?/MICOMMENT>

<?MIVAR NAME="$cs_field">patobldr_curation_box_class<?/MIVAR>
<?MIVAR NAME="$cs_default">unlimited-curation-box<?/MIVAR>
<?MISQL SQL="select WebExplode(object,'&cs_person=$ZDB_ident&cs_data=$OID') 
             from webPages where ID='aa-curator_session.apg';">
  <?MIVAR NAME="$patobldr_curation_box_class">$(TRIM,$1)<?/MIVAR>
<?/MISQL>

<?MIVAR NAME="$cs_field">patobldr_subterm_ontology<?/MIVAR>
<?MIVAR NAME="$cs_default">AO<?/MIVAR>
<?MISQL SQL="select WebExplode(object,'&cs_person=$ZDB_ident&cs_data=$OID') 
             from webPages where ID='aa-curator_session.apg';">
  <?MIVAR NAME="$patobldr_subterm_ontology">$(TRIM,$1)<?/MIVAR>
<?/MISQL>

<?MIVAR NAME="$cs_field">patobldr_superterm_ontology<?/MIVAR>
<?MIVAR NAME="$cs_default">AO<?/MIVAR>
<?MISQL SQL="select WebExplode(object,'&cs_person=$ZDB_ident&cs_data=$OID') 
             from webPages where ID='aa-curator_session.apg';">
  <?MIVAR NAME="$patobldr_superterm_ontology">$(TRIM,$1)<?/MIVAR>
<?/MISQL>

<?MIVAR NAME="$cs_field">patobldr_tag<?/MIVAR>
<?MIVAR NAME="$cs_default">abnormal<?/MIVAR>
<?MISQL SQL="select WebExplode(object,'&cs_person=$ZDB_ident&cs_data=$OID') 
             from webPages where ID='aa-curator_session.apg';">
  <?MIVAR NAME="$patobldr_tag_cs">$(TRIM,$1)<?/MIVAR>
<?/MISQL>



<?MICOMMENT> ** FIXME ** apato_infrastructure needs to have all of the phenotypes already
                associated with the pub, but eventually, they need to go away.  Right now,
                every time this loads, it's going to make sure that happens.  Probably with
                a cookie it could get double checked once per session.  

                Update, Feb 2008 - this hasn't turned out to cause much slowdown yet *** <?/MICOMMENT>

  <?MISQL SQL="select distinct apato_subterm_zdb_id, apato_superterm_zdb_id, 
                               apato_quality_zdb_id, apato_tag
                 from atomic_phenotype
                   join apato_figure on apatofig_apato_zdb_id = apato_zdb_id
                   join figure on apatofig_fig_zdb_id = fig_zdb_id
                 where fig_source_zdb_id = '$OID'
                   and apato_subterm_zdb_id is null
                   and not exists (select 'x' 
                                     from apato_infrastructure
                                     where api_superterm_zdb_id = apato_superterm_zdb_id
                                       and api_quality_zdb_id = apato_quality_zdb_id
                                       and api_tag = apato_tag
                                       and api_pub_zdb_id = apato_pub_zdb_id)
              union
               select distinct apato_subterm_zdb_id, apato_superterm_zdb_id, 
                               apato_quality_zdb_id, apato_tag
                 from atomic_phenotype
                   join apato_figure on apatofig_apato_zdb_id = apato_zdb_id
                   join figure on apatofig_fig_zdb_id = fig_zdb_id
                 where fig_source_zdb_id = '$OID'
                   and apato_subterm_zdb_id is not null
                   and not exists (select 'x' 
                                     from apato_infrastructure
                                     where api_subterm_zdb_id = apato_subterm_zdb_id
                                       and api_superterm_zdb_id = apato_superterm_zdb_id
                                       and api_quality_zdb_id = apato_quality_zdb_id
                                       and api_tag = apato_tag
                                       and api_pub_zdb_id = apato_pub_zdb_id);">
  
   <?MIVAR NAME="$patobldr_pile_subterm_zdb_id">$1<?/MIVAR>
   <?MIVAR NAME="$patobldr_pile_superterm_zdb_id">$2<?/MIVAR>
   <?MIVAR NAME="$patobldr_pile_quality_zdb_id">$3<?/MIVAR>
   <?MIVAR NAME="$patobldr_pile_tag">$4<?/MIVAR>
   <?MICOMMENT> ** Deal with NULL subterms ** <?/MICOMMENT>
   <?MIBLOCK COND="$(EC,$patobldr_pile_subterm_zdb_id,NULL)">
     <?MIVAR NAME="$patobldr_pile_entity_columns">api_superterm_zdb_id<?/MIVAR>
     <?MIVAR NAME="$patobldr_pile_entity_values">$patobldr_pile_superterm_zdb_id<?/MIVAR>
   <?MIELSE>
     <?MIVAR NAME="$patobldr_pile_entity_columns">api_subterm_zdb_id, api_superterm_zdb_id <?/MIVAR>
     <?MIVAR NAME="$patobldr_pile_entity_values">$patobldr_pile_subterm_zdb_id', '$patobldr_pile_superterm_zdb_id<?/MIVAR>
   <?/MIBLOCK>
   <?MISQL SQL="execute function get_id('API');"><?MIVAR NAME="$patobldr_pile_api_zdb_id">$1<?/MIVAR><?/MISQL>
   <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values ('$patobldr_pile_api_zdb_id');"><?/MISQL>
 <?MISQL SQL="insert into apato_infrastructure ( api_zdb_id, $patobldr_pile_entity_columns,
                                   api_quality_zdb_id,
                                   api_tag, api_pub_zdb_id, api_curator_zdb_id, api_date )
                 values  ('$patobldr_pile_api_zdb_id', '$patobldr_pile_entity_values', '$patobldr_pile_quality_zdb_id',
                          '$patobldr_pile_tag', '$OID', '$ZDB_ident',  current);">
<?/MISQL>
      
<?/MISQL>


      





<?MICOMMENT> ** Populate a javascript hash table with phenotype "keys" ** <?/MICOMMENT>

<script type="text/javascript">

patoCuration.distinctPhenotypes = {
  <?MISQL SQL="select distinct api_subterm_zdb_id, api_superterm_zdb_id, api_quality_zdb_id, api_tag,
                      get_obj_name(api_subterm_zdb_id), get_obj_name(api_superterm_zdb_id), term_name, 
                      api_zdb_id
                 from apato_infrastructure
                      join term on api_quality_zdb_id = term_zdb_id
                 where api_pub_zdb_id = '$OID';">
    <?MIBLOCK COND="$(>,$MI_CURRENTROW,1)">,<?/MIBLOCK>
                                   "$1$2$3$4": {{state      : "",
                                                 subterm   : "$5",
                                                 superterm   : "$6",
                                                 quality    : "$7",
                                                 quality_id : "$3",
                                                 tag        : "$4",
                                                 api_zdb_id : "$8",
                                                 toString   : function() {{ return this.subterm 
                                                                                 + " " + this.superterm 
                                                                                 + " " + this.quality 
                                                                                 + " " + this.tag
                                                                                 + " state:" + this.state }},
                                                 setState   : function(newState) {{ this.state = newState; }}                   
                                               }}
  <?/MISQL>
                                  };

</script>

<script type="text/javascript" src="/javascript/control.modal.js"></script>
<script type="text/javascript">
// used as part of control.modal.js.  
// Needs to be out here because functions weird if within MIVAR apg calls.
function addcontrol(referencId){
new Control.Modal(referencId,{
                // hover: true,
                // position: 'relative',
                opacity: 0.3,
                //offsetLeft: 20,
                //offsetTop: -200,
                width: 400,
                height: 600,
                iframe: true,
        });
}

</script>

<h3>Phenotype: </h3></a>

<?MIVAR>
<form name="patobldrupdatephenos" id="patobldrUpdatePhenosForm" action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->" method="post">

  <input type="hidden" name="MIval" value="aa-curation.apg">
  <input type="hidden" name="OID" value="<?MIVAR>$OID<?/MIVAR>">

  <input type="hidden" name="pubcur_c_pato_update" value="update">

  <input type="hidden" name="patoup_updatephenos" value="1">

  <input type="hidden" id="patobldrSelectedMutantString" name="patoup_updatephenos_selectedmutants">
  <input type="hidden" id="patobldrSelectedMutantStringCount" name="patoup_updatephenos_selectedmutants_count">

  <input type="hidden" id="patobldrAddPhenotypesString" name="patoup_updatephenos_add">
  <input type="hidden" id="patobldrAddPhenotypesStringCount" name="patoup_updatephenos_add_count">

  <input type="hidden" id="patobldrRemovePhenotypesString" name="patoup_updatephenos_remove">
  <input type="hidden" id="patobldrRemovePhenotypesStringCount" name="patoup_updatephenos_remove_count">

  <input type="submit" value="Update Phenotype for Mutant(s)"
         id="updatePhenoButton" 
         onClick="patoCuration.updatePhenotypes();">


  <fieldset style="border: 1px solid black; padding: .3em; margin: .3em auto; width: 96%;">
    <legend>selected<legend>
  <span id="patobldrSelectedMutants"></span>
  </fieldset>  

</form>

<?/MIVAR>

<?MICOMMENT> *** FIXME *** this should get a different css class than searchresults *** <?/MICOMMENT>

<?MIVAR>

<span style="float: right; margin-right: 2em;">

<span class="curation-box-control-text"> size: </span>

<a href="javascript:;" class="curation-box-control-text"
   onClick="document.getElementById('patobldr-phenotypes').className = 'small-curation-box';
            storeSession('$ZDB_ident','$OID','patobldr_curation_box_class','small-curation-box');">
small
</a>
<a href="javascript:;" class="curation-box-control-text"
   onClick="document.getElementById('patobldr-phenotypes').className = 'medium-curation-box';
            storeSession('$ZDB_ident','$OID','patobldr_curation_box_class','medium-curation-box');">
medium
</a>
<a href="javascript:;" class="curation-box-control-text"
   onClick="document.getElementById('patobldr-phenotypes').className = 'large-curation-box';
            storeSession('$ZDB_ident','$OID','patobldr_curation_box_class','large-curation-box');">

large
</a>
<a href="javascript:;"
   class="curation-box-control-text"
   onClick="document.getElementById('patobldr-phenotypes').className = 'unlimited-curation-box';
            storeSession('$ZDB_ident','$OID','patobldr_curation_box_class','unlimited-curation-box');">
fitted
</a>
</span><br>

<?/MIVAR>


<?MIVAR>
<div id="patobldr-phenotypes" class="$patobldr_curation_box_class">
<?/MIVAR>


<table class="searchresults">
  <thead>
    <tr>
      <th style="width: 1.5em;" title="no change for this phenotype">&Phi;</th>
      <th style="width: 1.6em; color: red;" title="remove this phenotype">&otimes;</th>
      <th style="width: 1.5em; color: green;" title="add this phenotype">+</th>
      <th>Entity</th>
      <th>Quality</th>
      <th>Tags</th>
      <th>Remove</th>
    </tr>
  </thead>
  <tbody>

  <?MICOMMENT>
  Constraints:
GO BP by itself - yes (query 3)
AO by itself - yes (query 1)
GO CC is part of AO - yes (query 2)
AP part of AO - yes (query 4)

GO CC part of AO - NO
GP BP part of AO or GO - NO

I.e., GO is never part of entity B.
  <?/MICOMMENT>
    <?MISQL SQL="
    select
distinct api_zdb_id,
api_subterm_zdb_id,
api_superterm_zdb_id,
api_quality_zdb_id,
api_tag,
get_obj_name(api_subterm_zdb_id),
get_obj_name(api_superterm_zdb_id),
term_name,
lower(get_obj_name(api_superterm_zdb_id)) as entity_name_order ,
get_ontology_id(api_subterm_zdb_id) as term1,
get_ontology_id(api_superterm_zdb_id) as term2,
term_ont_id
from apato_infrastructure
join term on api_quality_zdb_id = term_zdb_id
where api_pub_zdb_id = '$OID'
and
(
   
   (
      substr(get_ontology_id(api_superterm_zdb_id),0,4)='ZFA:'
   )
   or
   (
      substr(get_ontology_id(api_superterm_zdb_id),0,4)!='ZFA:'  -- go term
      and
      (
         api_subterm_zdb_id is null 
         or 
         substr ( get_ontology_id(api_subterm_zdb_id),0,4)='ZFA:'
      )
   )
) 
order by 9
                 ;">
      <?MIVAR NAME="patobldr_api_zdb_id">$1<?/MIVAR>
      <?MIVAR NAME="patobldr_subterm_zdb_id">$2<?/MIVAR>
      <?MIVAR NAME="patobldr_superterm_zdb_id">$3<?/MIVAR>
      <?MIVAR NAME="patobldr_quality_zdb_id">$4<?/MIVAR>
      <?MIVAR NAME="patobldr_tag">$5<?/MIVAR>
      <?MIVAR NAME="patobldr_subterm_name_html">$6<?/MIVAR>
      <?MIVAR NAME="patobldr_superterm_name_html">$7<?/MIVAR>
      <?MIVAR NAME="patobldr_superterm_name">$patobldr_superterm_name_html<?/MIVAR>
      <?MIVAR NAME="patobldr_quality_name">$8<?/MIVAR>
      <?MIVAR NAME="patobldr_radio_id">$2$3$4$5<?/MIVAR>
      <?MIVAR NAME="patobldr_subterm_obo_id">$10<?/MIVAR>
      <?MIVAR NAME="patobldr_superterm_obo_id">$11<?/MIVAR>
      <?MIVAR NAME="patobldr_quality_obo_id">$12<?/MIVAR>


      <?MIVAR NAME="patobldr_subterm_ontology">ZF<?/MIVAR>
<?MIBLOCK COND="$(>,$(POSITION,$patobldr_subterm_zdb_id,GOTERM),0)">

     <?MIVAR NAME=patobldr_subterm_ontology>GO<?/MIVAR>
     <?/MIBLOCK> 

      <?MIVAR NAME="patobldr_superterm_ontology">ZF<?/MIVAR>

      <?MICOMMENT> ** if subterm is "unspecified" - make it orange ** <?/MICOMMENT>

      <?MIVAR COND="$(POSITION,$patobldr_superterm_name_html,unspecified,1)"
              NAME="$patobldr_superterm_name_html">
        <span style="color: orange;">$patobldr_superterm_name_html</span>
      <?/MIVAR>


      <tr <?MIBLOCK COND="$(EC,1,$(MOD,$MI_CURRENTROW,2))">class="odd"<?/MIBLOCK>>

        <form name="patobldrpanelstructures">
        <td> <input type="radio" name="$patobldr_api_zdb_id" id="$(CONCAT,$patobldr_radio_id,ignore)" value="ignore"
              onChange="if (this.checked == true) { patoCuration.distinctPhenotypes['$patobldr_radio_id'].setState('ignore');}" > </td>
        <td> <input type="radio" name="$patobldr_api_zdb_id" id="$(CONCAT,$patobldr_radio_id,remove)" value="remove"
             onChange="if (this.checked == true) { patoCuration.distinctPhenotypes['$patobldr_radio_id'].setState('remove'); }"> </td>
        <td> <input type="radio" name="$patobldr_api_zdb_id" id="$(CONCAT,$patobldr_radio_id,add)"    value="add"
             onChange="if (this.checked == true) { patoCuration.distinctPhenotypes['$patobldr_radio_id'].setState('add');
                       deselectDefault(); }"> </td>
        <td onclick="rotateRadio('$patobldr_radio_id');">

        <?MIVAR name="javascriptSetTerms">		    javascript:setQuality('$patobldr_quality_obo_id','$(REPLACE,$patobldr_quality_name,"'","\'")');setSuperTerm('$patobldr_superterm_obo_id','$(REPLACE,$patobldr_superterm_name,"'","\'")','$patobldr_superterm_ontology');setSubTerm('$patobldr_subterm_obo_id','$(REPLACE,$patobldr_subterm_name_html,"'","\'")','$patobldr_subterm_ontology');setTag('$patobldr_tag')<?/MIVAR>
            <?MIVAR>
             <span onclick="event.cancelBubble= true;">
             <a id="$(CONCAT,patobldr_api_zdb_id,_b$MI_CURRENTROW)" href="#patopile" onclick="$javascriptSetTerms;getTermInfo('$patobldr_superterm_obo_id','$(REPLACE,$patobldr_superterm_name,"'","\'")','superterm')" onmouseover=addcontrol("$(CONCAT,patobldr_api_zdb_id,_b$MI_CURRENTROW)") >$patobldr_superterm_name_html</a>
             </span>
            <?MICOMMENT>
            $patobldr_superterm_name_html
            <?/MICOMMENT>
<?/MIVAR>
<?MIBLOCK COND="$(NE,$patobldr_subterm_name_html,NULL)">
            :<?MIVAR>
             <span onclick="event.cancelBubble= true;">
               <a id="$patobldr_api_zdb_id$MI_CURRENTROW" href="#patopile" onclick="$javascriptSetTerms;getTermInfo('$patobldr_subterm_obo_id','$(REPLACE,$patobldr_subterm_name_html,"'","\'")','subterm')" onmouseover=addcontrol("$patobldr_api_zdb_id$MI_CURRENTROW")>$patobldr_subterm_name_html</a>
             </span>
            <?MICOMMENT>
          $patobldr_subterm_name_html 
            <?/MICOMMENT>
<?/MIVAR>
<?/MIBLOCK>
             <?MIBLOCK COND="$(XST,$patosum_apato_zdb_id)">
             <div id="$patosum_apato_zdb_id"></div>
              <?/MIBLOCK>
        </td>
        <td onclick="rotateRadio('$patobldr_radio_id');">
        <span onclick="event.cancelBubble= true;">
        <a href="#patopile" onclick="$javascriptSetTerms;getTermInfo('$patobldr_quality_obo_id','$patobldr_quality_name','quality')">
        	$patobldr_quality_name
        	</a>
        	</span>
        </td>
        <td onclick="rotateRadio('$patobldr_radio_id');">$patobldr_tag</td>
        <td onclick="rotateRadio('$patobldr_radio_id');">
          <input type="button" value=" X " onClick="deleteZDB('$patobldr_api_zdb_id','patopile');">
        </td>
        </form>
      </tr>

    <?/MISQL>
  </tbody>
</table>
</div>
<br>
<input type="button" onclick="document.getElementById('updatePhenoButton').click();" 
       value="Update Phenotype for Mutant(s)">

  <script type="text/javascript"> 
  

	phenoteState.setTermInfoUrl('/phenote/Phenote/'); 
	
        function setTag(tagName){
		   tagElement = document.getElementById('patobldrTag');
	       for(i=0; i < tagElement.length; i++){
	    	     if(tagElement[i].value == tagName){
		     	   tagElement.selectedIndex = i;
		     }
	       }
        }
        
        function setQuality(termID, termName){
	   inputElement = document.getElementById('patobldrQuality');
	   inputElement.value = termName;
    	   qualityFieldID = document.getElementById('quality-field-id');
	   qualityFieldID.innerHTML = termID;
        }
        
        function setSuperTerm(termID, termName, ontology){
	clearErrorMessages();
	inputElement = document.getElementById('patobldrSupertermName');
	       inputElement.value = termName;
    	   qualityFieldID = document.getElementById('superterm-field-id');
	       qualityFieldID.innerHTML = termID;

	       supertermOntology = document.getElementById('patobldrSupertermOntology');
	       selectionBoxOntologyName = 'AO';
	       if(ontology =='GO')
		     selectionBoxOntologyName = 'GO';
	         for(i=0; i < supertermOntology.length; i++){
	    	     if(supertermOntology[i].value == selectionBoxOntologyName){
		     	   supertermOntology.selectedIndex = i;
		     }
	      }
        }
        
	function setSubTerm(termID, termName, ontology){
	   inputElement = document.getElementById('patobldrSubtermName');
       if(termID == 'NULL'){
	       inputElement.value = '';
           return;
       }
	   inputElement.value = termName;
    	   qualityFieldID = document.getElementById('subterm-field-id');
	   qualityFieldID.innerHTML = termID;

	   subtermOntology = document.getElementById('patobldrSubtermOntology');
	   selectionBoxOntologyName = 'AO';
	   if(ontology =='GO')
		selectionBoxOntologyName = 'GO';
	   for(i=0; i < subtermOntology.length; i++){
	        if(subtermOntology[i].value == selectionBoxOntologyName){
	 	   subtermOntology.selectedIndex = i;
	        }
	   }
	}

	function getTermInfo(id, name, term){
		 if(name == null || name.length == 0){
		    // display empty terminfo section
		    document.getElementById('termInfo').innerHTML = '';
		    return;
		 }

		//window.alert(name);
		//window.alert(id);
		 if(term == 'quality'){
		    field = document.getElementById('patobldrQuality');
		    qualityFieldID = document.getElementById('quality-field-id');
 		    if(id == null || id.length == 0)
			id = qualityFieldID.innerHTML;
		    //window.alert(id);
		 }
		 if(term == 'superterm'){
		    field = document.getElementById('superterm_name');
		    supertermFieldID = document.getElementById('superterm-field-id');
		    
 		    if(id == null || id.length == 0)
			id = supertermFieldID.innerHTML;
		 }
		 if(term == 'subterm'){
		    field = document.getElementById('subterm_name');
		    subtermFieldID = document.getElementById('subterm-field-id');
 		    if(id == null || id.length == 0)
			id = subtermFieldID.innerHTML;
		 }
		//window.alert(id);

		// if no id available do nothing as no term info can be retrieved.
		if(id.length == 0)
			return;
		phenoteState.setActiveField(field);
		ontology = getOntologyName(id);
		//window.alert(id);
		//window.alert(name);
		phenoteState.updateTermInfo(new Term(id, name, ontology));
	}

	// this should go into phenote.
	// phenote knows from the term id what ontology to look into.
	function getOntologyName(termID){
		 if(termID == null)
		 	   return null;
		 if(termID.indexOf('PATO') > -1)
			return 'quality';
                 if(termID.indexOf('GO') > -1)
                        return 'GO';
                 if(termID.indexOf('ZFA') > -1)
                        return 'ZF';
		 return null;

	}

	function useTermInfoField(term){
		 clearErrorMessages();
 	     ontologyName = phenoteState.getCurrentTermInfoTerm().ontology;
		 if(term == 'quality'){
		    field = document.getElementById('patobldrQuality');

		    // update the invisible ID and ontology
           if(ontologyName !='quality'){
       	     	document.getElementById('faulty-quality-term').style.display = 'inline';
             	return;
           }
    	   qualityFieldID = document.getElementById('quality-field-id');
		   qualityFieldID.innerHTML = phenoteState.getCurrentTermInfoTerm().termId;
		 }
		 if(term == 'superterm'){
		 	//window.alert('OO: '+ ontologyName)
		    field = document.getElementById('patobldrSupertermName');
   		    ontology = document.getElementById('patobldrSupertermOntology');
  	            if(ontologyName =='quality'){
            	    document.getElementById('faulty-superterm').style.display = 'inline';
  	            	return;
  	            }
		    for(i=0; i < ontology.length; i++){
   	   	      selectionBoxOntologyName = 'AO';
		       if(ontologyName =='GO')
			  	 selectionBoxOntologyName = 'GO';
		       if(ontology[i].value == selectionBoxOntologyName){
			  	 ontology.selectedIndex = i;
		       }
		    }
		    // update the invisible ID and ontology
		    supertermFieldID = document.getElementById('superterm-field-id');
		    supertermFieldID.innerHTML = phenoteState.getCurrentTermInfoTerm().termId;
		 }
		 if(term == 'subterm'){
		 	//window.alert('O: '+ phenoteState.getCurrentTermInfoTerm().ontology)
		    field = document.getElementById('patobldrSubtermName');
   		    ontology = document.getElementById('patobldrSubtermOntology');
  	        if(ontologyName =='quality'){
               	document.getElementById('faulty-superterm').style.display = 'inline';
  	           	return;
  	        }
		    for(i=0; i < ontology.length; i++){
   	   	      selectionBoxOntologyName = 'AO';
		       if(ontologyName =='GO')
			  	 selectionBoxOntologyName = 'GO';
		       if(ontology[i].value == selectionBoxOntologyName){
			  	 ontology.selectedIndex = i;
		       }
		    // update the invisible IDs and ontology
		    subtermFieldID = document.getElementById('subterm-field-id');
		    subtermFieldID.innerHTML = phenoteState.getCurrentTermInfoTerm().termId;
		    }

   		 }
   	         // if no terminfo is available do nothing
   	         ontologyName = phenoteState.getCurrentTermInfoTerm().ontology;
		 if(ontologyName == null)
		   return;
  		 
   	         phenoteState.setActiveField(field);
		 phenoteState.useTermInfo();

	}
	
	function updateTermInfo(field, termType){
		 //window.alert(field);
		 activeField = phenoteState.getActiveField();
		if(activeField == null || activeField.value == null){
			getTermInfo('',field.value, termType);
			return;
		}
			
		//window.alert(activeField.value);
		//window.alert(field.value);
		id = '';
		// if the field focud came through auto complete use the new id
		if(activeField == field){
			id = phenoteState.getCurrentTermInfoTerm().termId;
			if(termType == 'quality'){
			   qualityFieldID = document.getElementById('quality-field-id');
			   qualityFieldID.innerHTML = id;
			}
			if(termType == 'subterm'){
			   subtermFieldID = document.getElementById('subterm-field-id');
			   subtermFieldID.innerHTML = id;
			}
			if(termType == 'superterm'){
			   supertermFieldID = document.getElementById('superterm-field-id');
			   supertermFieldID.innerHTML = id;
			}

		}
		getTermInfo(id, field.value,  termType);
	}
	
	function resetTerms(){
		 document.getElementById('patobldrSubtermName').value = '';
		 document.getElementById('patobldrSupertermName').value = '';
		 document.getElementById('patobldrQuality').value = '';
		 clearErrorMessages();
		 document.getElementById('termInfo').innerHTML = '';
	}

	function clearErrorMessages(){
		 document.getElementById('faulty-quality-term').style.display = 'none';
		 document.getElementById('faulty-superterm').style.display = 'none';
		 document.getElementById('faulty-two-go-terms').style.display = 'none';
		 document.getElementById('error-on-add').style.display = 'none';
	}
	</script>

<br>
<?MICOMMENT> *** this css will need to be done a bit better *** <?/MICOMMENT>



<script type="text/javascript">
  function setEntityOntology(selectedOntology, autoCompleter) {
    if (selectedOntology == 'AO') {
      ontologyName = 'ZF';
    } else if (selectedOntology == 'GO') {
      ontologyName = 'GO';
    }

    autoCompleter.options.defaultParams = "ontologyName=" + ontologyName;


  }

</script>
<style>
.indent2 {margin-left:100px;}
</style>
<style>
.indent3 {margin-left:70px;}
</style>
<style>
.address {
  margin-top: 1em;
  padding-top: 1em;
  border-top: thin dotted }
</style>
<script>

function checkAnatomy() {

     var superTerm= document.getElementById('patobldrSupertermName');
     var superTermValue=superTerm.value;
     if (superTermValue==""){
	document.getElementById('no-superterm-defined').style.display = 'inline'; 
        return false;
     }
     document.getElementById('no-superterm-defined').style.display = 'none'
     var quality= document.getElementById('patobldrQuality');
     var qualityVal=quality.value;
     if (qualityVal==""){
	document.getElementById('no-quality-defined').style.display = 'inline';
        return false;
     }
     
     if(document.getElementById('patobldrSupertermOntology').values == 'GO' &&
        document.getElementById('patobldrSubtermOntology').values  == 'GO'){
     	document.getElementById('faulty-two-go-terms').style.display = 'inline';
     	return false;
     }
     	
     return true;
}

function switchTerms() {
     var subTerm= document.getElementById('patobldrSubtermName');
     var subTermValue=subTerm.value;
     var superTerm= document.getElementById('patobldrSupertermName');
     var superTermValue=superTerm.value;
     var subTermOnt=document.getElementById('patobldrSubtermOntology');
     var subTermOntology=subTermOnt.value;
     var superTermOnt=document.getElementById('patobldrSupertermOntology');
     var superTermOntology=superTermOnt.value;
     document.getElementById('patobldrSubtermName').value=superTermValue;
     document.getElementById('patobldrSubtermOntology').value=superTermOntology;
     document.getElementById('patobldrSupertermName').value=subTermValue;
      document.getElementById('patobldrSupertermOntology').value=subTermOntology;
     subtermSpan = document.getElementById('subterm-field-id').innerHTML;
     supertermSpan = document.getElementById('superterm-field-id').innerHTML;
     document.getElementById('subterm-field-id').innerHTML = supertermSpan;
     document.getElementById('superterm-field-id').innerHTML = subtermSpan;
     clearErrorMessages();
}



</script>
<tr>
    <td colspan=6><HR></td>
  </tr>
</table>


<table>
<tr>
<td valign="top">

<form name="patobldraddtopile" action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->#patopile" method="post">
  
    <input type="hidden" name="MIval" value="aa-curation.apg">
    <input type="hidden" name="OID" value="<?MIVAR>$OID<?/MIVAR>">
    <input type="hidden" name="pubcur_c_pato_update" value="update">
    <input type="hidden" name="patoup_addtopile" value="1">


<?MIVAR>

<a name="patopile"></a>

<table>
<tr>
<td width=100 align=left><b>Superterm</b>
<td><b>:</b></td>
<td align=right width=150><b>Subterm</b>
</table>
<table border="0" cellpadding="5" cellspacing="3">
<tbody><tr><td align="center">

<table border="0" cellpadding="0" cellspacing="0" height="90"><tbody><tr><td align="center" bgcolor="#000099">
<table border="0" cellpadding="0" cellspacing="1">
<tbody><tr><td></td></tr></tbody></table>
</td></tr></tbody></table>
 
<td align="top"> 
          <select name="patoup_subterm_ontology" id="patobldrSubtermOntology" 
                  onChange="setEntityOntology(this.options[this.selectedIndex].value, subtermAutoCompleter);
                            storeSession('$ZDB_ident','$OID',
                                         'patobldr_subterm_ontology',
                                          this.options[this.selectedIndex].value);">

		 <?MIBLOCK COND="$(AND,$(XST,$patoup_addtopile_error),$(>,$(STRLEN,$patoup_addtopile_error),0),$(XST,$patobldr_subterm_ontology))">
                    <option value="<?MIVAR>$patoup_subterm_ontology<?/MIVAR>" selected="true"><?MIVAR>$patoup_subterm_ontology<?/MIVAR></option>
                    <?MIBLOCK COND="$(EC,$patoup_subterm_ontology,AO)">
                       <option value="GO">GO</option>
                    <?MIELSE>
                       <option value="AO">AO</option>
                    <?/MIBLOCK>
                 <?MIELSE>
                    <option value="AO" 
                    <?MIBLOCK COND="$(EC,$patobldr_subterm_ontology,AO)">selected="true"<?/MIBLOCK>  >AO</option> 
                    <option value="GO"
                    <?MIBLOCK COND="$(EC,$patobldr_subterm_ontology,GO)">selected="true"<?/MIBLOCK>  >GO</option>
                 <?/MIBLOCK>
          </select>
          <input type="text" size="46" name="patoup_subterm_name" id="patobldrSubtermName" autocomplete="off"
	  	onchange="phenoteState.setActiveField(this)"
                onkeypress="document.getElementById('patobldrSubtermOntology').onchange();"
		 <?MIBLOCK COND="$(AND,$(XST,$patoup_addtopile_error),$(>,$(STRLEN,$patoup_addtopile_error),0),$(XST,$patoup_subterm_name))">
                 <?MIVAR>value="$(REPLACE,$patoup_subterm_name,"''","'")"<?/MIVAR>
                 <?/MIBLOCK>
                 onfocus="updateTermInfo(this,'subterm')">
                 <span id="subterm-field-id" style="display: none;"></span>
		&nbsp;
                 <input type="button" value="&larr;" onclick="useTermInfoField('subterm')" />

          <span id="patobldrSubtermAutoCompleterIndicator" style="display: none; color: red;">working...</span>

          <div style="overflow: auto; height: 400px; width: 300px;" class="auto_complete" id="subterm_auto_complete"></div>
<p>
<p>
<span class="indent2"><b><i>within the</i></b></span>
<span class="indent3">
     <input
        type="button"
        value="Swap Terms &uarr;&darr;"
        name="switch_term"
        onClick="switchTerms()"
      >
</span>
</td>
</tbody></table>

<table>
<tr>
<td></td>
<td>
<select name="patoup_superterm_ontology" id="patobldrSupertermOntology" 
                  onChange="setEntityOntology(this.options[this.selectedIndex].value, supertermAutoCompleter);
                            storeSession('$ZDB_ident','$OID',
                                         'patobldr_superterm_ontology',
                                          this.options[this.selectedIndex].value);">
		 <?MIBLOCK COND="$(AND,$(XST,$patoup_addtopile_error),$(>,$(STRLEN,$patoup_addtopile_error),0),$(XST,$patobldr_superterm_ontology))">
                    <option value="<?MIVAR>$patoup_superterm_ontology<?/MIVAR>" selected="true"><?MIVAR>$patoup_superterm_ontology<?/MIVAR></option>
                    <?MIBLOCK COND="$(EC,$patoup_superterm_ontology,AO)">
                       <option value="GO">GO</option>
                    <?MIELSE>
                       <option value="AO">AO</option>
                    <?/MIBLOCK>
                 <?MIELSE>
                    <option value="AO" 
                    <?MIBLOCK COND="$(EC,$patobldr_superterm_ontology,AO)">selected="true"<?/MIBLOCK>  >AO</option> 
                    <option value="GO"
                    <?MIBLOCK COND="$(EC,$patobldr_superterm_ontology,GO)">selected="true"<?/MIBLOCK>  >GO</option>
                 <?/MIBLOCK>
          </select>
</td>

<td>          <input type="text" size="48" name="patoup_superterm_name" id="patobldrSupertermName" autocomplete="off"
		 onchange="phenoteState.setActiveField(this)"
                 onkeypress="document.getElementById('patobldrSupertermOntology').onchange();"
		 <?MIBLOCK COND="$(AND,$(XST,$patoup_addtopile_error),$(>,$(STRLEN,$patoup_addtopile_error),0),$(XST,$patoup_superterm_name))">
                 <?MIVAR>value="$(REPLACE,$patoup_superterm_name,"''","'")"<?/MIVAR>
                 <?/MIBLOCK>
                 onfocus="updateTermInfo(this,'superterm')">
                 <span id="superterm-field-id" style="display: none;"></span>
					&nbsp;
                 <input type="button" value="&larr;" onclick="useTermInfoField('superterm')" />

                 
          <span id="patobldrSupertermAutoCompleterIndicator" style="display: none; color: red;">working...</span>
          <div style="overflow: auto; height: 400px; width: 300px;" class="auto_complete" id="superterm_auto_complete"></div>
</td></tr>

</table>
<div class="address"></div>
Quality:

         <input type="text" size="48" name="patoup_quality_name" id="patobldrQuality" autocomplete="off"
		 <?MIBLOCK COND="$(AND,$(XST,$patoup_addtopile_error),$(>,$(STRLEN,$patoup_addtopile_error),0),$(XST,$patoup_quality_name))">
                 <?MIVAR>value="$(REPLACE,$patoup_quality_name,"''","'")"<?/MIVAR>
                 <?/MIBLOCK>
                 onfocus="updateTermInfo(this,'quality')">
                 <span id="quality-field-id" style="display: none;"></span>
                 		&nbsp;
		 <input type="button" value="&larr;" onclick="useTermInfoField('quality')" />
		 
         <span id="patobldrQualityAutoCompleterIndicator" style="display: none; color: red;">working...</span>
         <div style="overflow: auto; height: 400px; width: 300px;" class="auto_complete" id="pato_auto_complete"></div>
<br>
<br>
Tag:
  &nbsp;&nbsp;&nbsp;&nbsp;       <select name="patoup_tag" id="patobldrTag"
                onChange="storeSession('$ZDB_ident','$OID',
                                        'patobldr_tag',
                                         this.options[this.selectedIndex].value);">

           <?MICOMMENT> ** KLUDGE: This should come from the database, but for now
                           we're only offering a limited set, once everything but
                           normal and abnormal go away, we can go back to using 
                           the db **<?/MICOMMENT>
           <option $(IF,$(EC,$patobldr_tag_cs,abnormal),selected="true")>abnormal</option>
	   <option $(IF,$(EC,$patobldr_tag_cs,normal),selected="true")>normal</option>
         </select>
	<span class="indent2">
        <input type="submit" value="Add" onClick="return checkAnatomy()" >
        <input type="button" value="Reset" onClick="resetTerms()" >
        </span>
<br>
<br><div class="error" id="error-on-add">
   <?MIBLOCK COND="$(XST,$patoup_addtopile_error)">
     <?MIVAR>$(REPLACE,$patoup_addtopile_error,"''","'")<?/MIVAR>
   <?/MIBLOCK>
     </div>
<br><div style="display:none" class="error" id="no-superterm-defined">You must enter a valid superterm in the lower box.</div>
<div style="display:none" class="error" id="no-quality-defined">You must enter a quality term.</div> 
<div style="display:none" class="error" id="faulty-quality-term">You can only enter terms form the quality ontology.</div>
<div style="display:none" class="error" id="faulty-superterm">You cannot add a quality term.</div>
<div style="display:none" class="error" id="faulty-two-go-terms">You cannot add a post-composed term from two GO terms .</div>

        <!-- this is set by ncbo-term-info.js but its unclear what its for is this the datamodel???? -->

        <input type="hidden" name="termInfoTermId">
        <input type="hidden" name="termInfoTermName">
        <!--what input field haas the user most recently moused over terms -->
        <!-- ENTITY or QUALITY, set by ncbo-term-info.js -->
        <input type="hidden" name="activeField">

  <br>

   <script type="text/javascript">

     var subtermAutoCompleter = new Ajax.Autocompleter( 'patobldrSubtermName', 'subterm_auto_complete', '/phenote/Phenote/',{parameters:'ontologyName=GO&field=ENTITY',paramName: "userInput", indicator: 'patobldrSubtermAutoCompleterIndicator', minChars: 3});
     var supertermAutoCompleter = new Ajax.Autocompleter( 'patobldrSupertermName', 'superterm_auto_complete', '/phenote/Phenote/',{parameters:'ontologyName=ZF&field=ENTITY',paramName: "userInput", indicator: 'patobldrSupertermAutoCompleterIndicator', minChars: 3});
     var patoAutoCompleter = new Ajax.Autocompleter( 'patobldrQuality', 'pato_auto_complete', '/phenote/Phenote/',{parameters:'ontologyName=quality&field=QUALITY',paramName: "userInput", indicator: 'patobldrQualityAutoCompleterIndicator', minChars: 3});


   </script>

   <?/MIVAR>
   <?MICOMMENT>
   
   {parameters: {ontologyName: "quality",
                 field:"QUALITY"},
    paramName: "userInput"}

   <?/MICOMMENT>

  </td>
  <td>
  </td>
<td>
  <div style="width:400px; overflow: auto; height: 400px;" id="termInfo"></div>
  </td>
  </tr>
  </table>


</form>

<?MICOMMENT> ** Update javascript components - this could be in some kind 
                of onload thing, but down here is ok for now ** <?/MICOMMENT>
<script type="text/javascript">
patoCuration.updateMutants();
patoCuration.updatePhenotypes();
</script>

<?MIELSE>
  <P>
  ERROR -- something bad happened -- no OID passed in!
<?/MIBLOCK>
