<?MICOMMENT>

FILE:     xpatcurpanel.apg
PREFIX:   xpcurpnl_

This page manages the display of FX curation results.

A simple form submits data to create new combinations of
Experiment / Figure / Stage. Each new record is assigned the
Unspecified anatomy_item by default.

Each unique combination of Experiment-Figure-Stage (EFS) is 
displayed as a table row. Structures for the EFS are displayed 
as a comma separated list.

INPUT VARS:

  REQUIRED:
    $OID :: publication zdb-id for the experiment
    $AUTHORIZED :: this is a subroutine. the authorization must occur in the calling page.
    $xpcur_G_fig_attrib_csv :: csv list of figures for the OID
    
  OPTIONAL:  
    none
      
OUTPUT VARS:

OUTPUT:
  A table of expression results related to the publication OID.

EFFECTS  
   Submit form data for insert of an EFS.
      xpcur_G_panel_add :: flag for new record
      xpcur_G_panel_image :: image zdb
      xpcur_G_panel_add_designation :: optional text
      xpcur_G_panel_xpatex :: experiment zdb
      xpcur_G_panel_add_start_stg :: stage zdb
      xpcur_G_panel_add_end_stg :: stage zdb
      xpcur_G_panel_add_anatitem :: anatomy zdb
      xpcur_G_panel_add_expressed :: boolean (t/f)

<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>
<?/MIERROR>

<?MIBLOCK COND="$(EC,$AUTHORIZED,root)">

 <style type="text/css"><!--
    .tbl {
       width: 100%;
       border: 0px;
       border-collapse: collapse;
       font-family: arial, sans-serif;
    }
    --></style>

  
<script language="javascript">

     function sendToPato(URL, linkid) {
	document.getElementById(linkid).innerHTML = "<small>updating...</small>";
        var xmlHttpReq = false;
        var self = this;
        // Mozilla/Safari
        if (window.XMLHttpRequest) {
           self.xmlHttpReq = new XMLHttpRequest();
        }
        // IE
        else if (window.ActiveXObject) {
           self.xmlHttpReq = new ActiveXObject("Microsoft.XMLHTTP");
        }
        self.xmlHttpReq.open('GET', URL, true);
        self.xmlHttpReq.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        self.xmlHttpReq.onreadystatechange = function() {
           if (self.xmlHttpReq.readyState == 4) {
	      document.getElementById(linkid).innerHTML = "<small>pushed</small>";
           }
        }
          self.xmlHttpReq.send('');
    }




    <?MIVAR NAME=xpcurpnlOB>[<?/MIVAR>
    <?MIVAR NAME=xpcurpnlCB>]<?/MIVAR>
    
    var xpcurpnlArray = new Array();
    var xpcurpnl_array1 = new Array();
    var xpcurpnl_stage_hours_start = 0.0;
    var xpcurpnl_stage_hours_end = 0.0;
    
    <?MIVAR NAME=xpcurpnl_index>0<?/MIVAR>
    <?MISQL SQL="
        select distinct fig_label, fig_zdb_id, xpatex_zdb_id, s1.stg_zdb_id, s2.stg_zdb_id, s1.stg_abbrev, s2.stg_abbrev,
               zero_pad(fig_label), mrkr_abbrev_order, geno_nickname, s1.stg_hours_start, s2.stg_hours_end
        from figure, expression_pattern_figure, expression_result, stage as s1, stage as s2, 
             expression_experiment, marker, genotype_experiment, genotype
        where fig_source_zdb_id = '$OID'
          and xpatex_source_zdb_id = '$OID'
          and xpatfig_fig_zdb_id = fig_zdb_id
          and xpatfig_xpatres_zdb_id = xpatres_zdb_id
          and xpatres_xpatex_zdb_id = xpatex_zdb_id 
          and xpatex_gene_zdb_id = mrkr_zdb_id
          and xpatres_start_stg_zdb_id = s1.stg_zdb_id
          and xpatres_end_stg_zdb_id = s2.stg_zdb_id
          and xpatex_genox_zdb_id = genox_zdb_id
          and genox_geno_zdb_id = geno_zdb_id
          and fig_zdb_id in ('$pubcur_G_fig_attrib_csv')
          $(IF,$(AND,$(XST,$xpcur_c_figure_only),$(NE,$xpcur_c_figure_only,)),and fig_zdb_id = '$xpcur_c_figure_only')
          $(IF,$(AND,$(XST,$xpcur_c_gene_only),$(NE,$xpcur_c_gene_only,)),and xpatex_gene_zdb_id = '$xpcur_c_gene_only')
          $(IF,$(AND,$(XST,$xpcur_c_fish_only),$(NE,$xpcur_c_fish_only,)),and geno_zdb_id = '$xpcur_c_fish_only')
        order by 8,9,10,11;">
        
        <?MIVAR NAME=xpcurpnl_figexp_name>xpcurpnl_figexp_$xpcurpnl_index<?/MIVAR>
          
        var $xpcurpnl_figexp_name = new Array();
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,0)$xpcurpnlCB = '$1';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,1)$xpcurpnlCB = '$2,$3,$4,$5';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,2)$xpcurpnlCB = '$(REPLACE,$2$3$4$5,"-","")';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,4)$xpcurpnlCB = '$6';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,5)$xpcurpnlCB = '$7';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,6)$xpcurpnlCB = '$2';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,7)$xpcurpnlCB = '$3';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,8)$xpcurpnlCB = '$4';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,9)$xpcurpnlCB = '$5';
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,10)$xpcurpnlCB = $11;
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,11)$xpcurpnlCB = $12;

        <?MISQL SQL="select WebExplode(object,'xpcurexpssdisp_xpatex_zdb_id=$3') from webPages where ID='aa-xpatcurexpssdisplayname.apg';"><?/MISQL>
        $xpcurpnl_figexp_name$xpcurpnlOB$(+,0,3)$xpcurpnlCB = '$(REPLACE,$xpcurexpssdisp_xpatex_display_name,"&nbsp;"," ")';
        
        xpcurpnlArray$xpcurpnlOB$xpcurpnl_index$xpcurpnlCB = $xpcurpnl_figexp_name ;
        <?MIVAR NAME=xpcurpnl_index>$(+,$xpcurpnl_index,1)<?/MIVAR>
    <?/MISQL>
 
    var xpcurpnl_Stages = new Array();
    
    <?MISQL SQL="
        select stg_zdb_id, stg_hours_start
        from stage
        order by stg_hours_start;">
        
        <?MIVAR NAME=xpcurpnl_stg_array>xpcurpnl_stg_$MI_CURRENTROW<?/MIVAR>
          
        var $xpcurpnl_stg_array = new Array();
        $xpcurpnl_stg_array$xpcurpnlOB$(+,0,0)$xpcurpnlCB = '$1';
        $xpcurpnl_stg_array$xpcurpnlOB$(+,0,1)$xpcurpnlCB = $2;
 
        xpcurpnl_Stages$xpcurpnlOB$(-,$MI_CURRENTROW,1)$xpcurpnlCB = $xpcurpnl_stg_array ;
    <?/MISQL>

  function set_expression_form(xpcurpnl_id_minus)
  {
    var xpcurpnl_form_fig = document.xpcur_G_panel_add.xpcur_G_panel_fig_zdb_id ;
    var xpcurpnl_form_xpat = document.xpcur_G_panel_add.xpcur_G_panel_add_xpatex ;
    var xpcurpnl_form_stg_start = document.xpcur_G_panel_add.xpcur_G_panel_add_start_stg ;
    var xpcurpnl_form_stg_end = document.xpcur_G_panel_add.xpcur_G_panel_add_end_stg ;
    
    for(i=0; i<xpcurpnlArray.length; i++) {
      xpcurpnl_array1 = xpcurpnlArray[i];
      
      if (xpcurpnl_array1[2] == xpcurpnl_id_minus)
      {
        for(j=0; j<xpcurpnl_form_fig.length; j++)
        {
          if (xpcurpnl_form_fig[j].value == xpcurpnl_array1[6])
          {
            xpcurpnl_form_fig.selectedIndex = j;
          }
        }
        for(k=0; k<xpcurpnl_form_xpat.length; k++)
        {
          if (xpcurpnl_form_xpat[k].value == xpcurpnl_array1[7])
          {
            xpcurpnl_form_xpat.selectedIndex = k;
          }
        }
        for(m=0; m<xpcurpnl_form_stg_start.length; m++)
        {
          if (xpcurpnl_form_stg_start[m].value == xpcurpnl_array1[8])
          {
            xpcurpnl_form_stg_start.selectedIndex = m;
          }
        }
        for(n=0; n<xpcurpnl_form_stg_end.length; n++)
        {
          if (xpcurpnl_form_stg_end[n].value == xpcurpnl_array1[9])
          {
            xpcurpnl_form_stg_end.selectedIndex = n;
          }                    
        }
      }
    }
  }
  

  function set_selected_expression()
  {    
    var expression_checkbox = document.forms['xpcur_exp'].elements ;

    stage_hours_start = 0.0;
    <?MISQL SQL="
      select max(stg_hours_end)
      from stage;">
              
      stage_hours_end = $1 ;
    <?/MISQL>  
    
    var expression_display = "";
    var expression_ids = "";
    var xpcurpnl_num_checked = 0;
    var exp_id;
    var checked_exp = new Array();
    var c_checked_expression = "";
    
      
    for(i=0; i<xpcurpnlArray.length; i++) {
      xpcurpnl_array1 = xpcurpnlArray[i];
      expid = xpcurpnl_array1[2];
      
      for (j=0; j<expression_checkbox.length; j++) {
    
        if(expression_checkbox[j].name == expid && expression_checkbox[j].checked == true) 
        {
          checked_exp[xpcurpnl_num_checked] = xpcurpnl_array1;
          xpcurpnl_num_checked++;
          c_checked_expression = expid+"|"+c_checked_expression ;
          
        
          if (expression_display == "") {
              expression_display = xpcurpnl_array1[0]+' '+xpcurpnl_array1[3]+' '+xpcurpnl_array1[4];
              expression_ids = xpcurpnl_array1[1]+'|';
          }
          else {
              expression_display = expression_display+'\n'+xpcurpnl_array1[0]+' '+xpcurpnl_array1[3]+' '+xpcurpnl_array1[4];
              expression_ids = expression_ids +xpcurpnl_array1[1]+'|';
          }
          
          if ( xpcurpnl_array1[4] != xpcurpnl_array1[5] )
          {
              expression_display = expression_display+', '+xpcurpnl_array1[5];
          
          }

        }          
      } //j loop
    } // i loop
    
    <?MIVAR>
    storeSession('$ZDB_ident','$OID','xpcur_c_checked_expression',c_checked_expression);
    <?/MIVAR>
    setExpressionStage() ;

    <?MIBLOCK COND=$(AND,$(XST,$xpcur_c_structure),$(EC,$xpcur_c_structure,show))>
      var expression_selected = document.panel_structures.xpcurstr_expression ;
      var expression_fig_xpat_stg = document.panel_structures.xpcurstr_fig_xpat_stg ;
      var expression_count = window.document.hidden_panel.xpcur_G_exp_count ;
    
      expression_selected.value = expression_display;
      expression_fig_xpat_stg.value = expression_ids;
      expression_count.value = xpcurpnl_num_checked;

      reset_structures_for_panel(checked_exp,xpcurpnl_num_checked); 
      
      setAOStage() ;
    <?/MIBLOCK>

  }
  
  function setExpressionStage()
  {
        var stage_id;
        var stage_array = new Array();
        var expression_stg_start_select = document.xpcur_G_panel_add.xpcur_G_panel_add_start_stg ;
        var expression_stg_end_select = document.xpcur_G_panel_add.xpcur_G_panel_add_end_stg ;
      
        if (stage_hours_start > 0)
        {
          for (i=0; i<xpcurpnl_Stages.length; i++)
          {
            stage_array = xpcurpnl_Stages[i];
           
            if ( stage_hours_start == stage_array[1] )
            {
              stage_id = stage_array[0];
            }
          }     
        }

        for (i=0; i<expression_stg_start_select.length; i++)
        {
          if (expression_stg_start_select[i].value == stage_id)
          {
            expression_stg_start_select.selectedIndex = i ;
          }
        }  

        for (i=0; i<expression_stg_end_select.length; i++)
        {
          if (expression_stg_end_select[i].value == stage_id)
          {
            expression_stg_end_select.selectedIndex = i ;
          }
        }  
  
  }
  
  <?MICOMMENT>
    Cookie: c_checked_expression keeps track of clicked checkboxes even if
    the page reloads. 
  
    Format: checkbox_1|checkbox_2|checkbox_3|
  
    Function: rememberCheckedExpression() reads cookie c_checked_expression
    and clicks the checkboxes.
  <?/MICOMMENT>

    <?MISQL SQL="
        select cs_field_name_value 
        from curator_session 
        where cs_data_zdb_id = '$OID' 
          and cs_field_name = 'xpcur_c_checked_expression';">
    <?/MISQL>
        <?MIVAR NAME=xpcur_c_checked_expression>$1<?/MIVAR>
      
  function rememberCheckedExpression ()
  {
    var expression_elements = document.forms['xpcur_exp'].elements ;
    
    var checkedMemory = "<?MIVAR>$xpcur_c_checked_expression<?/MIVAR>";
    var expId = "";

    var pos2 = checkedMemory.indexOf('|');
    var pos = 0;
    
    while ( pos2 > -1 ) 
    {
      expId = checkedMemory.substr(pos,pos2-pos);

      for (jj=0; jj<expression_elements.length; jj++) 
      {    
        if(expression_elements[jj].name == expId) 
        {      
          expression_elements[jj].click();
        }
      }
      pos = checkedMemory.indexOf('|',pos+1)+1;
      pos2= checkedMemory.indexOf('|',pos);
      
    }    
    
  }
  

    <?MISQL SQL="
        select cs_field_name_value 
        from curator_session 
        where cs_data_zdb_id = '$OID' 
          and cs_field_name = 'xpcur_c_structure';">
    <?/MISQL>
        <?MIVAR NAME=xpcur_c_structure>$1<?/MIVAR>


    function setAOStage ()
    {
    
      if ('<?MIVAR>$xpcur_c_structure<?/MIVAR>' != 'hide')
      {
        var stage_id;
        var stage_array = new Array();
        var expression_stg_select = document.xpcur_G_panel_add.xpcur_G_panel_add_start_stg ;
        var AO_stg_select = document.structure2.stage_id ;
      
        if (stage_hours_start > 0)
        {
          for (i=0; i<xpcurpnl_Stages.length; i++)
          {
            stage_array = xpcurpnl_Stages[i];
           
            if ( stage_hours_start == stage_array[1] )
            {
              stage_id = stage_array[0];
            }
          }     
        }
      
        else
        {       
          for (i=0; i<expression_stg_select.length; i++)
          {
            if (expression_stg_select[i].selected == true)
            {
              stage_id = expression_stg_select[i].value ;
            }
          }
        } //else
        
        for (i=0; i<AO_stg_select.length; i++)
        {
          if (AO_stg_select[i].value == stage_id)
          {
            AO_stg_select.selectedIndex = i ;
          }
        }
          
      } //getCookie
    } //function
    
</script>



<?MIVAR NAME=xpcurpnl_row_color><?/MIVAR> 
<?MIVAR NAME=xpcurpnl_prev_fish><?/MIVAR>
<?MIVAR NAME=xpcurpnl_prev_gene><?/MIVAR>
<?MIVAR NAME=xpcurpnl_prev_fig><?/MIVAR>
    
<table class="tbl" width=100% cellspacing=0 cellpadding=3>
  <tr bgcolor=#CCCCCC>
    <td>Select</td>
    <td>Figure</td>
    <td>Experiment</td>
    <td>Stage Range</td>
    <td width=25%>Expressed in</td>
    <td>Delete</td>
    <td>Push</td>
  </tr>  

<form name="xpcur_exp">
<?MISQL SQL="
    select distinct fig_zdb_id, fig_label, 
                    xpatres_start_stg_zdb_id, 
                    xpatres_end_stg_zdb_id, 
                    xpatres_xpatex_zdb_id, 
                    mrkr_abbrev_order, 
                    stg_hours_start, 
                    geno_nickname, 
                    xpatex_gene_zdb_id, 
                    geno_zdb_id,
                    xpatassay_display_order,
                    zero_pad(exp_name),
                    exp_zdb_id,
                    genox_zdb_id
    from figure, expression_pattern_figure, expression_result, expression_experiment, marker, stage, genotype_experiment, genotype, expression_pattern_assay, experiment
      where fig_source_zdb_id = '$OID'
      and xpatfig_fig_zdb_id = fig_zdb_id
      and xpatfig_xpatres_zdb_id = xpatres_zdb_id
      and xpatres_xpatex_zdb_id = xpatex_zdb_id 
      and xpatex_gene_zdb_id = mrkr_zdb_id
      and xpatres_start_stg_zdb_id = stg_zdb_id
      and xpatex_genox_zdb_id = genox_zdb_id
      and genox_geno_zdb_id = geno_zdb_id
      and fig_zdb_id in ('$pubcur_G_fig_attrib_csv')
      and xpatex_assay_name = xpatassay_name
      and genox_exp_zdb_id = exp_zdb_id
      $(IF,$(AND,$(XST,$xpcur_c_gene_only),$(NE,$xpcur_c_gene_only,)),and mrkr_zdb_id = '$xpcur_c_gene_only')
      $(IF,$(AND,$(XST,$xpcur_c_fish_only),$(NE,$xpcur_c_fish_only,)),and geno_zdb_id = '$xpcur_c_fish_only')
    order by fig_label, mrkr_abbrev_order, geno_nickname, xpatassay_display_order, 12, stg_hours_start;">

      <?MIVAR NAME=xpcurpnl_fig_zdb_id>$1<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_fig_label>$2<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_start_stg_zdb_id>$3<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_end_stg_zdb_id>$4<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_xpatex_zdb_id>$5<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_delete>panel,$1,$5,$3,$4<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_fish>$9<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_gene>$8<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_exp_zdb_id>$13<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_geno_zdb_id>$10<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_genox_zdb_id>$14<?/MIVAR>      

      <?MICOMMENT> The panel ID format is Fig,xpatex,sstg,estg. <?/MICOMMENT>
      <?MIVAR NAME=xpcurpnl_id>$xpcurpnl_fig_zdb_id$xpcurpnl_xpatex_zdb_id$xpcurpnl_start_stg_zdb_id$xpcurpnl_end_stg_zdb_id<?/MIVAR>
      <?MIVAR NAME=xpcurpnl_id_minus>$(REPLACE,$xpcurpnl_id,"-","")<?/MIVAR>
      
      
    <?MIBLOCK COND=$(NC,$9,$xpcurpnl_prev_fish)>
        <?MIVAR NAME=xpcurpnl_row_color>$(IF,$(EC,$xpcurpnl_row_color,<!--|HIGHLIGHT_COLOR|-->),#FFFFFF,<!--|HIGHLIGHT_COLOR|-->)<?/MIVAR>     
    <?MIELSE COND=$(NC,$8,$xpcurpnl_prev_gene)>
        <?MIVAR NAME=xpcurpnl_row_color>$(IF,$(EC,$xpcurpnl_row_color,<!--|HIGHLIGHT_COLOR|-->),#FFFFFF,<!--|HIGHLIGHT_COLOR|-->)<?/MIVAR>     
    <?MIELSE COND=$(NC,$xpcurpnl_fig_zdb_id,$xpcurpnl_prev_fig)>
        <?MIVAR NAME=xpcurpnl_row_color>$(IF,$(EC,$xpcurpnl_row_color,<!--|HIGHLIGHT_COLOR|-->),#FFFFFF,<!--|HIGHLIGHT_COLOR|-->)<?/MIVAR>      
    <?/MIBLOCK>
     
    <tr bgcolor='$xpcurpnl_row_color' onmouseover="this.style.background='$pubcur_G_active_row_color';" onmouseout="this.style.background='$xpcurpnl_row_color';">
      <?MISQL SQL="
        select start.stg_abbrev ||' '|| start.stg_name_ext, 
               end.stg_abbrev ||' '|| end.stg_name_ext, 
               case anatitem_name
                 when 'unspecified' then '<font color=orange>unspecified</font>'
                 else anatitem_name
               end,
               xpatres_expression_found, 
               anatitem_name_order
        from expression_pattern_figure, expression_result, anatomy_item, stage as start, stage as end       
        where xpatfig_fig_zdb_id = '$xpcurpnl_fig_zdb_id'
          and xpatfig_xpatres_zdb_id = xpatres_zdb_id
          and xpatres_start_stg_zdb_id = '$xpcurpnl_start_stg_zdb_id'
          and xpatres_end_stg_zdb_id = '$xpcurpnl_end_stg_zdb_id'
          and xpatres_start_stg_zdb_id = start.stg_zdb_id
          and xpatres_end_stg_zdb_id = end.stg_zdb_id
          and xpatres_anat_item_zdb_id = anatitem_zdb_id
          and xpatres_xpatex_zdb_id = '$xpcurpnl_xpatex_zdb_id'
        order by anatitem_name_order
        ;">
   
        <?MIVAR NAME=xpcurpnl_start_stg>$1<?/MIVAR>
        <?MIVAR NAME=xpcurpnl_end_stg>$2<?/MIVAR>
        <?MIVAR NAME=xpcurpnl_anatitem_name>$3<?/MIVAR>
        <?MIVAR NAME=xpcurpnl_expression_found>$(IF,$(EC,$4,f),<font color=red>&#40not&#41</font>) <?/MIVAR>
      
        <?MIBLOCK COND="$(=,$MI_CURRENTROW,1)">     
          <?MISQL SQL="select WebExplode(object,'xpcurexpssdisp_xpatex_zdb_id=$xpcurpnl_xpatex_zdb_id') from webPages where ID='aa-xpatcurexpssdisplayname.apg';"><?/MISQL>
          <?MIVAR NAME=xpcurpnl_xpatex_display_name>$xpcurexpssdisp_xpatex_display_name<?/MIVAR>
          <?MIVAR>
            <td valign=top><input name="$xpcurpnl_id_minus" type=checkbox onClick="if(this.checked==true){set_expression_form('$xpcurpnl_id_minus');}set_selected_expression();"></td>
            <td valign=top onClick="document.xpcur_exp.$xpcurpnl_id_minus.click();" >$xpcurpnl_fig_label</td>
            <td valign=top onClick="document.xpcur_exp.$xpcurpnl_id_minus.click();" >
              $xpcurpnl_xpatex_display_name
            </td>    
            <td valign=top onClick="document.xpcur_exp.$xpcurpnl_id_minus.click();" >$xpcurpnl_start_stg $(IF,$(NE,$xpcurpnl_start_stg,$xpcurpnl_end_stg),- <br>$xpcurpnl_end_stg)</td>
            <td valign=top onClick="document.xpcur_exp.$xpcurpnl_id_minus.click();" >$xpcurpnl_expression_found$xpcurpnl_anatitem_name
          <?/MIVAR>
        <?MIELSE>  
          <?MIVAR>, $xpcurpnl_expression_found$xpcurpnl_anatitem_name<?/MIVAR>  
        <?/MIBLOCK> <?MICOMMENT> MI_CURRENTROW = 1 <?/MICOMMENT>
  
      <?/MISQL>
      
      <td valign=top>
        <?MIVAR><input name="delete" type=button value=" X " onClick="deleteZDB('$xpcurpnl_delete','panel')"><?/MIVAR>

      </td>           
      <td>
 
        <?MICOMMENT> ** only show the push option for things that aren't already in pato ** <?/MICOMMENT>       

        <?MIVAR COND="$(XST,$xpcurpnl_pato_exists)">$(UNSETVAR,$xpcurpnl_pato_exists)<?/MIVAR>
	<?MISQL SQL="select first 1 'x' 
                     from atomic_phenotype
                          join apato_figure on apato_zdb_id = apatofig_apato_zdb_id
                     where apatofig_fig_zdb_id = '$xpcurpnl_fig_zdb_id'
                       and apato_genox_zdb_id = '$xpcurpnl_genox_zdb_id'
                       and apato_start_stg_zdb_id = '$xpcurpnl_start_stg_zdb_id'
                       and apato_end_stg_zdb_id = '$xpcurpnl_end_stg_zdb_id';">
           <?MIVAR NAME="$xpcurpnl_pato_exists">1<?/MIVAR>
           <small>in pato</small>
        <?/MISQL>
        
	<?MIBLOCK COND="$(NXST,$xpcurpnl_pato_exists)">

           <?MICOMMENT> ** I need unique ids, but they don't have to mean anything, so I'm using a count
                           rather than concatenating all of the ids ** <?/MICOMMENT>
           <?MIVAR COND="$(NXST,$xpcurpnl_sendToPatoLinkCount)" NAME="$xpcurpnl_sendToPatoLinkCount">0<?/MIVAR> 
   	   <?MIVAR NAME="$xpcurpnl_sendToPatoLinkCount">$(+,$xpcurpnl_sendToPatoLinkCount,1)<?/MIVAR>
           <?MIVAR><span id="$(CONCAT,sendtopato,$xpcurpnl_sendToPatoLinkCount)"><a href="javascript:;" style="color: blue;" onclick="sendToPato('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-patoupdate_addmutant.apg&OID=$OID&puaddmu_add_mutant=1&puaddmu_fig_zdb_id=$xpcurpnl_fig_zdb_id&puaddmu_geno_zdb_id=$xpcurpnl_geno_zdb_id&puaddmu_exp_zdb_id=$xpcurpnl_exp_zdb_id&puaddmu_start_stg_zdb_id=$xpcurpnl_start_stg_zdb_id&puaddmu_end_stg_zdb_id=$xpcurpnl_end_stg_zdb_id', '$(CONCAT,sendtopato,$xpcurpnl_sendToPatoLinkCount)');"><small>to pato</small></a></span><?/MIVAR>

	<?/MIBLOCK>

      </td>
    </tr>

    <?MIVAR NAME=xpcurpnl_prev_fish>$xpcurpnl_fish<?/MIVAR>
    <?MIVAR NAME=xpcurpnl_prev_gene>$xpcurpnl_gene<?/MIVAR>
    <?MIVAR NAME=xpcurpnl_prev_fig>$xpcurpnl_fig_zdb_id<?/MIVAR>
    
<?/MISQL>
</form>
<?MICOMMENT> ==| Enter a New Panel |== <?/MICOMMENT>
  <tr>
    <td colspan=6>
      <hr>
    </td>
  </tr>
<form action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->#panel" method=post name="xpcur_G_panel_add">
    <INPUT TYPE=HIDDEN NAME=MIval VALUE="aa-curation.apg"> 
    <INPUT TYPE=HIDDEN NAME=OID VALUE="<?MIVAR>$OID<?/MIVAR>"> 
    <INPUT TYPE=HIDDEN NAME=xpcur_c_xpatcuration_update VALUE="update">
  <tr>
    <td colspan=2>
      <input name="xpcur_G_panel_add" type=submit value="Add">

        <select name="xpcur_G_panel_fig_zdb_id">
          <?MISQL SQL="
            select fig_zdb_id, fig_label
	    from figure
	    where fig_zdb_id in ('$pubcur_G_fig_attrib_csv')
            order by fig_label;">
            <option value=$1
                    $(IF,$(AND,$(XST,$xpcur_G_panel_fig_zdb_id),$(EC,$xpcur_G_panel_fig_zdb_id,$1)),SELECTED)>$2</option>
          <?/MISQL>
      </select>
    </td>
    <td>
        <select name="xpcur_G_panel_add_xpatex" MULTIPLE SIZE=5>
          <?MISQL SQL="
            select xpatex_zdb_id, mrkr_abbrev_order, geno_nickname, xpatassay_display_order, zero_pad(exp_name)
	    from expression_experiment, marker, genotype_experiment, genotype, expression_pattern_assay, experiment
	    where xpatex_source_zdb_id = '$OID'
	      and xpatex_gene_zdb_id = mrkr_zdb_id
	      and xpatex_genox_zdb_id = genox_zdb_id
	      and genox_geno_zdb_id = geno_zdb_id
	      and xpatex_assay_name = xpatassay_name
              and genox_exp_zdb_id = exp_zdb_id
              $(IF,$(AND,$(XST,$xpcur_c_gene_only),$(NE,$xpcur_c_gene_only,)),and mrkr_zdb_id = '$xpcur_c_gene_only')
              $(IF,$(AND,$(XST,$xpcur_c_fish_only),$(NE,$xpcur_c_fish_only,)),and geno_zdb_id = '$xpcur_c_fish_only')
            order by mrkr_abbrev_order, geno_nickname, xpatassay_display_order, zero_pad(exp_name);">
            <?MIVAR NAME=xpcurpnl_xpatex_zdb_id>$1<?/MIVAR>  
            <?MISQL SQL="select WebExplode(object,'xpcurexpssdisp_xpatex_zdb_id=$xpcurpnl_xpatex_zdb_id') from webPages where ID='aa-xpatcurexpssdisplayname.apg';"><?/MISQL>
            <?MIVAR NAME=xpcurpnl_xpatex_display_name>$xpcurexpssdisp_xpatex_display_name<?/MIVAR>
            <option value=$xpcurpnl_xpatex_zdb_id
                    $(IF,$(AND,$(XST,$xpcurpan_xpatex_selected),$(!=,0,$(POSITION,$xpcurpan_xpatex_selected,$xpcurpnl_xpatex_zdb_id))),SELECTED)>$xpcurpnl_xpatex_display_name</option>
          <?/MISQL>
      </select></td>
    <td colspan=3> 
        Start: <select name="xpcur_G_panel_add_start_stg" onChange="setEndStage('xpcur_G_panel_add','xpcur_G_panel_add_start_stg','xpcur_G_panel_add_end_stg');setAOStage();">
          <?MISQL SQL="
            select stg_zdb_id, stg_abbrev, stg_name_ext
	      from stage
	     where stg_name <> 'Unknown' 
            order by stg_hours_start;">
            <option value="$1" $(IF,$(AND,$(XST,$xpcur_G_panel_add_start_stg),$(EC,$xpcur_G_panel_add_start_stg,$1)),SELECTED)>$2 $3</option>
          <?/MISQL>
      </select>
      <br>
      End: <select name="xpcur_G_panel_add_end_stg">
          <?MISQL SQL="
            select stg_zdb_id, stg_abbrev, stg_name_ext
	      from stage
	     where stg_name <> 'Unknown' 
            order by stg_hours_end;">
            <option value="$1" $(IF,$(AND,$(XST,$xpcur_G_panel_add_end_stg),$(EC,$xpcur_G_panel_add_end_stg,$1)),SELECTED)>$2 $3</option>
          <?/MISQL>
      </select>
    </td>
  </tr>
</form> 
  
</table>

<?/MIBLOCK> <?MICOMMENT> end authorize <?/MICOMMENT>
