<?MICOMMENT>

FILE:     xpatcurupdate.apg
PREFIX:   xpcurup_

This file only performs the database updates/inserts for xpatcuration.apg. 

    There is a distinct update section for each object in xpatcuration.apg.
    A gateway condition is defined for each update or insert section. The
    gateway is a variable or series of variables that are required to enter
    data into the database.


INPUT VARS:

  REQUIRED:
    $OID :: publication zdb-id for the experiment
    $AUTHORIZED :: this is a subroutine. the authorization must occur in the calling page.

  OPTIONAL:  
  Environment
      xpcur_G_exp_update :: exist/not-exists, indicates an environment update action
      xpcur_G_exp_zdb_id :: environment ZDB-ID 
      xpcur_G_exp_name :: non-null environment name specific to publication $OID
      xpcur_G_environment_add :: flag for new environment
      xpcur_G_exp_add_name :: new non-null environment name 
  
  Condition
      xpcur_G_cond_add :: flag for a new condition
      xpcur_G_cond_add_exp :: non-null experiment ZDB-ID
      xpcur_G_cond_add_cond_type :: non-null condition data type ZDB 
      xpcur_G_cond_add_value :: text
      xpcur_G_cond_add_unit :: text - constrained vocabulary
      xpcur_G_cond_add_comments :: text
      
  Figure
      xpcur_G_fig_update :: flag for updating a figure
      xpcur_G_fig_zdb_id :: figure ZDB-ID
      xpcur_G_fig_label :: non-null text
      xpcur_G_fig_caption :: text
      xpcur_G_fig_comments :: optional text
      xpcur_G_fig_add :: flag for updates
      xpcur_G_fig_add_label :: non-null text
      xpcur_G_fig_add_caption :: non-null text
      xpcur_G_fig_add_comments :: optional text
  
  Image
      xpcur_G_image_OID :: zdb-id
      xpcur_G_image_fig :: figure zdb
      xpcur_G_image_label :: optional text
      xpcurup_width :: integer, value of thumbnail width (from upload.cgi)
      xpcurup_height :: integer, value of thumbnail height (from upload.cgi)
      xpcurup_suffix :: image suffix (from upload.cgi)
  
  Experiment
      xpcur_G_xpatex :: update or add; switch to execute update code or add new record code.
      xpcur_G_xpatex_zdb_id :: xpatex_zdb_id of record being updated
      xpcur_G_xpatex_gene :: marker_zdb_id for a gene
      xpcur_G_xpatex_fish :: fish_zdb_id
      xpcur_G_xpatex_exp :: environment zdb_id
      xpcur_G_xpatex_assay :: assay name
      xpcur_G_xpatex_genbank :: genbank accession number
  
  Expression
      xpcur_G_panel_add :: flag for new record
      xpcur_G_panel_image :: image zdb
      xpcur_G_panel_add_designation :: optional text
      xpcur_G_panel_xpatex :: experiment zdb
      xpcur_G_panel_add_start_stg :: stage zdb
      xpcur_G_panel_add_end_stg :: stage zdb
      xpcur_G_panel_add_anatitem :: anatomy zdb
      xpcur_G_panel_add_expressed :: boolean (t/f)
  
  Structure
      xpcur_G_fig_xpat_stg :: non-null, text, combines values (figure zdb, xpat zdb, sstage zdb, estage zdb)
      "xpatres_zdb_id" radio (add/remove)
      xpcur_G_structure_add :: flag for new record
      xpcur_G_structure_add_id :: anatomy zdb
      xpcur_G_structure_add_expressed :: boolean (t/f)
      xpcur_G_structure_add_xpatex :: xpat zdb
      xpcur_G_structure_add_start_stg :: stg zdb
      xpcur_G_structure_add_end_stg :: stg zdb
  
  Atrribution
      xpcur_G_mrkr_attrib :: mrkr abbrev 
      xpcur_G_fish_attrib :: fish abbrev 
      
  Update
      xpcurup_old_value :: value to be changed
      xpcurup_new_value :: value that replaces old value
      
COOKIES:
  xpcur_c_xpatcuration_update :: gate variable; set to update for an update to occur.
      

OUTPUT VARS:
  None.

OUTPUT:
  None

EFFECTS  
  Inserts records into any table associated with an expression_experiment. All data records
  are attributed in record_attribution either via trigger or specifically in this page. 
  
  Set cookie xpatcuration_update to 'no'.
  
  Set figure_only when a new figure is inserted.


<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>
<?/MIERROR>

<?MIBLOCK COND="$(EC,$AUTHORIZED,root)">


  <?MICOMMENT> ============================================================
                 Form Variables that should be persistant after the form
                 is submitted are added to xpatcurup_form_variables. 
               ============================================================
  <?/MICOMMENT>   

  
  <?MICOMMENT> ============================================================
                 Equality check $(EC,$var,text only) not working.
                 Comparison check between two variables does work.
               ============================================================
  <?/MICOMMENT>   
  <?MIVAR Name=xpcurup_textOnly>text only<?/MIVAR>
      <?MIVAR COND=$(NXST,$gPSLitem_goterm_zdb_id) NAME=gPSLitem_goterm_zdb_id><?/MIVAR>

  <?MICOMMENT> ================| Experiment |================ <?/MICOMMENT>
      <?MIVAR COND=$(NXST,$xpcur_G_xpatex_gene) NAME=xpcur_G_xpatex_gene><?/MIVAR>
      <?MIVAR COND=$(NXST,$xpcur_G_xpatex_antibody) NAME=xpcur_G_xpatex_antibody><?/MIVAR>
  <?MIBLOCK COND=$(XST,$xpcur_G_xpatex)>
  
    <?MICOMMENT>
      required: xpcur_G_xpatex_add_gene, xpcur_G_xpatex_add_fish, xpcur_G_xpatex_add_assay, xpcur_G_xpatex_add_exp
      optional: xpcur_G_xpatex_genbank
      
      unique constraint on {gene/fish/assay/exp}
<?/MICOMMENT>
    <?MIBLOCK COND=$(OR,$(XST,$xpcur_G_xpatex_gene),$(XST,$xpcur_G_xpatex_antibody))>
      <?MIVAR COND=$(NXST,$xpcur_G_xpatex_genbank) NAME=xpcur_G_xpatex_genbank><?/MIVAR>
      <?MIVAR COND=$(NXST,$xpcur_G_xpatex_assay) NAME=xpcur_G_xpatex_assay><?/MIVAR>
      <?MIVAR COND=$(NXST,$xpcur_G_xpatex_fish) NAME=xpcur_G_xpatex_fish><?/MIVAR>
      <?MIVAR COND=$(NXST,$xpcur_G_xpatex_exp) NAME=xpcur_G_xpatex_exp><?/MIVAR>

<?MICOMMENT>begin condition for checking if ab-gene relation is valid<?/MICOMMENT>
<?MIBLOCK COND="$(AND,$(NE,$xpcur_G_xpatex_gene,),$(NE,$xpcur_G_xpatex_antibody,))">

         <?MISQL SQL="select count(*)
                      from marker_relationship, record_attribution
                      where mrel_mrkr_2_zdb_id='$xpcur_G_xpatex_antibody'
                      and mrel_mrkr_1_zdb_id='$xpcur_G_xpatex_gene'">
                     <?MIVAR NAME=$related_gene>$1<?/MIVAR>
          <?/MISQL>
<?MIELSE>
                     <?MIVAR NAME=$related_gene>5<?/MIVAR>
<?/MIBLOCK>
         <?MIBLOCK COND="$(=,0,$related_gene)">
            <SCRIPT>
             alert('This gene and antibody are not related. Please pick the correct antibody or create the relationship');
            </SCRIPT>
        <?MIELSE> 




   
      <?MISQL SQL="
        select count(*) :: integer
        from expression_experiment, genotype_experiment
        where $(IF,$(EC,$xpcur_G_xpatex_gene,),
              xpatex_gene_zdb_id is null,
              xpatex_gene_zdb_id = '$xpcur_G_xpatex_gene')
          and xpatex_assay_name = '$xpcur_G_xpatex_assay'
          and xpatex_genox_zdb_id = genox_zdb_id
          and genox_geno_zdb_id = '$xpcur_G_xpatex_fish'
          and genox_exp_zdb_id = '$xpcur_G_xpatex_exp'
          and $(IF,$(EC,$xpcur_G_xpatex_antibody,),
              xpatex_atb_zdb_id is null,
              xpatex_atb_zdb_id = '$xpcur_G_xpatex_antibody')
          and xpatex_source_zdb_id = '$OID'
          and $(IF,$(EC,$xpcur_G_xpatex_genbank,),
              xpatex_dblink_zdb_id is null,
              xpatex_dblink_zdb_id = '$xpcur_G_xpatex_genbank')
        ;">
      <?/MISQL>
    
      <?MIBLOCK COND=$(EC,$1,0)>

        <?MICOMMENT> 
          The genbank number must be linked to the gene. The link can be direct
          or inderect. A direct link is where the linked_recid = gene_zdb_id. 
          An inderect link is when the linked_recid = probe_zdb_id and the 
          probe_zdb_id is related to gene_zdb_id through marker relationship.
        <?/MICOMMENT>
  
        <?MIBLOCK COND=$(EC,$xpcur_G_xpatex_genbank,)>
          <?MIVAR NAME=xpcur_G_xpatex_genbank><?/MIVAR>
          <?MIVAR NAME=xpcurup_xpatex_probe><?/MIVAR>
        <?MIELSE>
          <?MISQL SQL="select dblink_linked_recid from db_link where dblink_zdb_id = '$xpcur_G_xpatex_genbank';"><?/MISQL>

          <?MIBLOCK COND=$(NC,$1,$xpcur_G_xpatex_gene)>        
            <?MISQL SQL="
                select dblink_linked_recid 
                  from db_link, marker_relationship 
                 where dblink_zdb_id = '$xpcur_G_xpatex_genbank'
                   and dblink_linked_recid = mrel_mrkr_2_zdb_id
                   and mrel_mrkr_1_zdb_id = '$xpcur_G_xpatex_gene';">
               <?MIVAR NAME=xpcurup_xpatex_probe>$1<?/MIVAR>
            <?/MISQL>   
          <?MIELSE>
            <?MIVAR NAME=xpcurup_xpatex_probe><?/MIVAR>
          <?/MIBLOCK>
        <?/MIBLOCK>
    
        <?MIBLOCK COND="$(XST,$xpcurup_xpatex_probe)">
          <?MICOMMENT> Gene and Probe must be related through marker_relationship <?/MICOMMENT>
          
          <?MICOMMENT> ==| Check existence of Feature Environment |== <?/MICOMMENT>
          <?MISQL SQL="
            select genox_zdb_id
            from genotype_experiment 
            where genox_geno_zdb_id = '$xpcur_G_xpatex_fish'
              and genox_exp_zdb_id = '$xpcur_G_xpatex_exp';">
            <?MIVAR NAME=xpcurup_genox_zdb_id>$1<?/MIVAR>
          <?/MISQL>
    
          <?MIBLOCK COND="$(NXST,$xpcurup_genox_zdb_id)">  
            <?MICOMMENT> ==| Get next ZDB-ID |== <?/MICOMMENT>
            <?MISQL SQL="execute function get_id('GENOX');">$(SETVAR,$xpcurup_genox_zdb_id,$1)<?/MISQL>
      
            <?MICOMMENT> ==| Add New FEATENV |== <?/MICOMMENT>  
            <?MISQL SQL="INSERT INTO zdb_active_data(zactvd_zdb_id) VALUES('$xpcurup_genox_zdb_id');"><?/MISQL>    
     
            <?MICOMMENT> ==| CREATE FEATENV RECORD |== <?/MICOMMENT>  
            <?MISQL SQL="
                INSERT INTO genotype_experiment(
                   genox_zdb_id,
                   genox_geno_zdb_id,
                   genox_exp_zdb_id)
                VALUES(
                   '$xpcurup_genox_zdb_id',
                   '$xpcur_G_xpatex_fish',
                   '$xpcur_G_xpatex_exp');">
            <?/MISQL>
 
            <?MISQL COND="$(XST,$xpcur_G_xpatex_fish)" SQL="
              execute procedure regen_genofig_genotype('$xpcur_G_xpatex_fish');">
            <?/MISQL>  
 
            <?MISQL SQL="
              select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=genox_zdb_id&recweb_new_value=$xpcurup_genox_zdb_id&recweb_comments=create+new+record') 
              from webPages where ID='aa-record_web_update.apg';">
            <?/MISQL>
    
          <?/MIBLOCK>

          <?MIBLOCK COND=$(EC,$xpcur_G_xpatex,add)>         
            <?MICOMMENT> ==| Get next ZDB-ID |== <?/MICOMMENT>
            <?MISQL SQL="execute function get_id('XPAT');">$(SETVAR,$xpcurup_xpat_zdb,$1)<?/MISQL>
    
            <?MICOMMENT> ==| Add New XPATEX |== <?/MICOMMENT>  
            <?MISQL SQL="INSERT INTO zdb_active_data(zactvd_zdb_id) VALUES('$xpcurup_xpat_zdb');"><?/MISQL>
  
            <?MIBLOCK COND="$(NC,$xpcurup_xpatex_probe,)">
              <?MISQL SQL="
                INSERT into expression_experiment(
                   xpatex_zdb_id,
                   xpatex_source_zdb_id,
                   xpatex_assay_name,
                   xpatex_gene_zdb_id,
                   xpatex_atb_zdb_id,
                   xpatex_probe_feature_zdb_id,
                   xpatex_genox_zdb_id,
                   xpatex_dblink_zdb_id)
                VALUES (
                   '$xpcurup_xpat_zdb',
                   '$OID',
                   '$xpcur_G_xpatex_assay',
                    $(IF,$(EC,$xpcur_G_xpatex_gene,),NULL,'$xpcur_G_xpatex_gene'),
                    $(IF,$(EC,$xpcur_G_xpatex_antibody,),NULL,'$xpcur_G_xpatex_antibody'),
                   '$xpcurup_xpatex_probe',
                   '$xpcurup_genox_zdb_id',
                   '$xpcur_G_xpatex_genbank');">
              <?/MISQL> 
            <?MIELSE>
              <?MISQL SQL="
                INSERT into expression_experiment(
                   xpatex_zdb_id,
                   xpatex_source_zdb_id,
                   xpatex_assay_name,
                   xpatex_gene_zdb_id,
                   xpatex_atb_zdb_id,
                   xpatex_genox_zdb_id,
                   xpatex_dblink_zdb_id)
                VALUES (
                   '$xpcurup_xpat_zdb',
                   '$OID',
                   '$xpcur_G_xpatex_assay',
                    $(IF,$(EC,$xpcur_G_xpatex_gene,),NULL,'$xpcur_G_xpatex_gene'),
                    $(IF,$(EC,$xpcur_G_xpatex_antibody,),NULL,'$xpcur_G_xpatex_antibody'),
                   '$xpcurup_genox_zdb_id',
                   $(IF,$(EC,$xpcur_G_xpatex_genbank,),NULL,'$xpcur_G_xpatex_genbank') );">
              <?/MISQL>       
              
              <?MISQL SQL="
                select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expression_experiment&recweb_new_value=$xpcurup_xpat_zdb&recweb_comments=create+new+record') 
                from webPages where ID='aa-record_web_update.apg';">
              <?/MISQL>              
            <?/MIBLOCK>
     
            <?MICOMMENT>  
                ===================================================
                  Search for record attribution of genbank record
                  and publication. If no record found, enter 
                  record attribution.
                ===================================================
            <?/MICOMMENT>

            <?MIBLOCK COND=$(NE,$xpcur_G_xpatex_genbank,)>      
              <?MISQL SQL="
                select count(*)::integer
                from record_attribution 
                where recattrib_data_zdb_id = '$xpcur_G_xpatex_genbank'
                and recattrib_source_zdb_id = '$OID'
                ;">
              <?/MISQL>

              <?MISQL COND=$(EC,$1,0) SQL="
                insert into record_attribution(recattrib_data_zdb_id, recattrib_source_zdb_id)
                values ('$xpcur_G_xpatex_genbank','$OID')
                ;">
              <?/MISQL>
            <?/MIBLOCK>

          <?MIELSE COND=$(EC,$xpcur_G_xpatex,update)>
               <SCRIPT> 
               var msg="Are you sure you want to update?";
               if (confirm(msg))
                {
                 <?MIVAR NAME=old_genbank><?/MIVAR>
                 <?MISQL SQL="
              select dblink_zdb_id
              from db_link, expression_experiment, record_attribution
              where xpatex_zdb_id = '$xpcur_G_xpatex_zdb_id'
                and xpatex_probe_feature_zdb_id = dblink_linked_recid
                and dblink_zdb_id = recattrib_data_zdb_id
                and recattrib_source_zdb_id = '$OID'
              ;">
              <?MIVAR NAME=old_genbank>$1<?/MIVAR>
            <?/MISQL>

            <?MIBLOCK COND=$(NC,$old_genbank,$xpcur_G_xpatex_genbank)>
              <?MISQL SQL="
                delete from record_attribution 
                where recattrib_data_zdb_id = '$old_genbank'
                and recattrib_source_zdb_id = '$OID'
                ;">
              <?/MISQL>
 
            <?/MIBLOCK>
            
              <?MIVAR NAME=xpcurup_old_value><?/MIVAR>
            <?MISQL SQL="
              select xpatex_gene_zdb_id,
                     xpatex_probe_feature_zdb_id,
                     xpatex_genox_zdb_id,
                     xpatex_dblink_zdb_id,
                     xpatex_assay_name,
                     xpatex_atb_zdb_id
              from expression_experiment
              where xpatex_zdb_id = '$xpcur_G_xpatex_zdb_id';">
              <?MIVAR NAME=xpcurup_old_value>$1,$2,$3,$4,$5,$6<?/MIVAR>
            <?/MISQL>
 
            <?MISQL SQL="
              UPDATE expression_experiment
                 set xpatex_assay_name = '$xpcur_G_xpatex_assay',
                     xpatex_gene_zdb_id = $(IF,$(EC,$xpcur_G_xpatex_gene,),NULL,'$xpcur_G_xpatex_gene'),
                     xpatex_probe_feature_zdb_id = $(IF,$(EC,$xpcurup_xpatex_probe,),NULL,'$xpcurup_xpatex_probe'),
                     xpatex_dblink_zdb_id = $(IF,$(EC,$xpcur_G_xpatex_genbank,),NULL,'$xpcur_G_xpatex_genbank'),
                     xpatex_genox_zdb_id = '$xpcurup_genox_zdb_id',
                     xpatex_atb_zdb_id = $(IF,$(EC,$xpcur_G_xpatex_antibody,),NULL,'$xpcur_G_xpatex_antibody')
               where xpatex_zdb_id = '$xpcur_G_xpatex_zdb_id'
               ;">
            <?/MISQL> 
            
            <?MIVAR NAME=$xpcurup_new_value>$xpcur_G_xpatex_gene,$xpcurup_xpatex_probe,$xpcurup_genox_zdb_id,$xpcur_G_xpatex_genbank,$xpcur_G_xpatex_assay,$xpcur_G_xpatex_antibody<?/MIVAR>
            
            <?MISQL SQL="
              select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expression_experiment&recweb_new_value=$xpcurup_new_value&recweb_old_value=$xpcurup_old_value&recweb_comments=create+new+record') 
              from webPages where ID='aa-record_web_update.apg';">
            <?/MISQL>            
           }
           </SCRIPT>
<?MIVAR NAME=$xpcur_G_xpatex_gene><?/MIVAR>        
          <?/MIBLOCK>  <?MICOMMENT> END $xpcur_G_xpatex = add <?/MICOMMENT>


          <?MIBLOCK COND="$(AND,$(XST,$xpcur_c_auto_on),$(EC,$xpcur_c_auto_on,on))">
            <?MIVAR NAME=xpcur_c_gene_only>$xpcur_G_xpatex_gene<?/MIVAR>
            <?MIVAR>
              <SCRIPT>
                <?MIVAR NAME=pubcur_onload>$pubcur_onload storeSession('$ZDB_ident','$OID','xpcur_c_checked_expression',c_checked_expression);<?/MIVAR>
              </SCRIPT> 
            <?/MIVAR>
          <?/MIBLOCK>
        <?MIELSE> 
          <?MICOMMENT> ============================================================
                          Gene and Probe not related through marker relationship
                       ============================================================
          <?/MICOMMENT>
          <?MISQL SQL="select gene.mrkr_abbrev, probe.mrkr_abbrev, dblink_acc_num
                       from marker as gene, marker as probe, db_link
                       where gene.mrkr_zdb_id = '$xpcur_G_xpatex_gene'
                         and probe.mrkr_zdb_id = dblink_linked_recid
                         and dblink_zdb_id = '$xpcur_G_xpatex_genbank';">
               <?MIVAR NAME=upcurup_UP_gene_abbrev>$1<?/MIVAR>
               <?MIVAR NAME=upcurup_UP_probe_abbrev>$2<?/MIVAR>
              <?MIVAR NAME=upcurup_UP_probe_acc_num>$3<?/MIVAR>
          <?/MISQL>
          <?MIVAR>
            <SCRIPT>
              alert('Required: Gene linked to Accession number.\n\nAccession number $upcurup_UP_probe_acc_num is linked to marker $upcurup_UP_probe_abbrev. \n\n"$upcurup_UP_probe_abbrev" and "$upcurup_UP_gene_abbrev" do not have a relationship in the database. \n\n Create this relationship on the gene page.');
            </SCRIPT>    
          <?/MIVAR>
        <?/MIBLOCK>   <?MICOMMENT> END $(XST,$xpcurup_xpatex_probe) <?/MICOMMENT>

      <?MIELSE>
        <SCRIPT>
          alert('The combination of: Publication, Gene, Fish, Env, Assay duplicates a record in the database.\n\nPlease check your data and renter.');
        </SCRIPT>  
      <?/MIBLOCK>  <?MICOMMENT> end $1 = 0 <?/MICOMMENT>
    
    <?MIELSE>
  why here?
      <SCRIPT>
        alert('Either a gene or an antibody is required.\n\nPlease check your data and renter.');
      </SCRIPT>        
    <?/MIBLOCK> <?MICOMMENT> 
                    END
                         $(AND,$(XST,$xpcur_G_xpatex_gene),$(XST,$xpcur_G_xpatex_fish),
                         $(XST,$xpcur_G_xpatex_assay),$(XST,$xpcur_G_xpatex_exp))
                <?/MICOMMENT>
  <?/MIBLOCK><?MICOMMENT>end rekated gene<?/MICOMMENT>  
  <?/MIBLOCK> <?MICOMMENT> END COND=$(XST,$xpcur_G_xpatex)> <?/MICOMMENT>
  


  <?MICOMMENT> ================| Environment |================ <?/MICOMMENT>
  <?MIBLOCK COND=$(XST,$xpcur_G_environment_add)>
  
    <?MIVAR NAME=xpcur_G_exp_add_name>$(REPLACE,$xpcur_G_exp_add_name,"'","''")<?/MIVAR>
  
  <?MISQL SQL="
      select count(*) 
      from experiment 
      where exp_name = '$xpcur_G_exp_add_name'
        and exp_source_zdb_id = '$OID';"><?/MISQL>
  
    <?MIBLOCK COND=$(=,$1,0)>
      <?MICOMMENT> ==| Get next ZDB-ID |== <?/MICOMMENT>
      <?MISQL SQL="execute function get_id('EXP');">$(SETVAR,$xpcurup_exp_zdb_id,$1)<?/MISQL>
    
      <?MICOMMENT> ==| Add New ZDB-ID |== <?/MICOMMENT>  
      <?MISQL SQL="INSERT INTO zdb_active_data(zactvd_zdb_id) VALUES('$xpcurup_exp_zdb_id');"><?/MISQL>
    
      <?MISQL SQL="
          INSERT into experiment(exp_zdb_id, exp_name, exp_source_zdb_id)
          VALUES ('$xpcurup_exp_zdb_id','$xpcur_G_exp_add_name','$OID');">
      <?/MISQL> 

      <?MISQL SQL="
        select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=exp_zdb_id&recweb_new_value=$xpcurup_exp_zdb_id&recweb_comments=create+new+record') 
        from webPages where ID='aa-record_web_update.apg';">
      <?/MISQL>
    <?MIELSE>
      <SCRIPT>
        alert("Environment '<?MIVAR>$xpcur_G_exp_add_name<?/MIVAR>' exists for this publication.");      
      </SCRIPT>
    <?/MIBLOCK>             
  <?/MIBLOCK>

  <?MIBLOCK COND=$(AND,$(XST,$xpcur_G_update_exp_zdb_id),$(XST,$xpcur_G_exp_name))>
    <?MIVAR NAME=xpcur_G_exp_name>$(REPLACE,$xpcur_G_exp_name,"'","''")<?/MIVAR>

    <?MISQL SQL="
        select exp_name
        from experiment
        where exp_zdb_id = '$xpcur_G_update_exp_zdb_id';">
        <?MIVAR NAME=xpcurup_old_value>$(URLENCODE,$1)<?/MIVAR>
    <?/MISQL>
  
    <?MISQL SQL="
        Update experiment
        set exp_name = '$xpcur_G_exp_name'
        where exp_zdb_id = '$xpcur_G_update_exp_zdb_id'
        ;">
    <?/MISQL> 

    <?MIVAR NAME=xpcurup_new_value>$(URLENCODE,$xpcur_G_exp_name)<?/MIVAR>
    <?MISQL SQL="
      select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=exp_name&recweb_new_value=$xpcurup_new_value&recweb_old_value=$xpcurup_old_value&recweb_comments=update+name') 
      from webPages where ID='aa-record_web_update.apg';">
    <?/MISQL>      
  <?/MIBLOCK>

  

  <?MICOMMENT> ================| Condition |================ <?/MICOMMENT>
  <?MIBLOCK COND=$(XST,$xpcur_G_cond_add)>
    <?MIVAR COND=$(NXST,$xpcur_G_cond_add_comments) NAME=xpcur_G_cond_add_comments><?/MIVAR>
    <?MIVAR COND=$(NXST,$xpcur_G_cond_add_value) NAME=xpcur_G_cond_add_value><?/MIVAR>
  
    <?MICOMMENT> ==| Get next ZDB-ID |== <?/MICOMMENT>
    <?MISQL SQL="execute function get_id('EXPCOND');">$(SETVAR,$xpcurup_expcond_zdb_id,$1)<?/MISQL>
    
    <?MICOMMENT> ==| Add New ZDB-ID |== <?/MICOMMENT>  
    <?MISQL SQL="INSERT INTO zdb_active_data(zactvd_zdb_id) VALUES('$xpcurup_expcond_zdb_id');"><?/MISQL>
    
    <?MIVAR NAME=xpcur_G_expcond_insert_columns>
            expcond_zdb_id,
            expcond_exp_zdb_id,
            expcond_cdt_zdb_id,
            expcond_expunit_zdb_id
    <?/MIVAR>
    
    <?MIVAR NAME=xpcur_G_expcond_insert_values>
            '$xpcurup_expcond_zdb_id',
            '$xpcur_G_cond_add_exp',
            '$xpcur_G_cond_add_cond_type',
            '$xpcur_G_cond_add_unit'
    <?/MIVAR>


    <?MICOMMENT> *** ONLY insert non null comments.   <?/MICOMMENT>    

    <?MIBLOCK COND=$(AND,$(XST,$xpcur_G_cond_add_comments),$(NC,$xpcur_G_cond_add_comments,))>
        
        <?MIVAR NAME=xpcur_G_expcond_insert_columns>$xpcur_G_expcond_insert_columns , expcond_comments<?/MIVAR>
        
        <?MIVAR NAME=xpcur_G_expcond_insert_values>$xpcur_G_expcond_insert_values ,'$xpcur_G_cond_add_comments'<?/MIVAR>
        
    <?/MIBLOCK>

    <?MICOMMENT> *** ONLY insert non null values.   <?/MICOMMENT>    

    <?MIBLOCK COND=$(AND,$(XST,$xpcur_G_cond_add_value),$(NC,$xpcur_G_cond_add_value,))>
        
        <?MIVAR NAME=xpcur_G_expcond_insert_columns>$xpcur_G_expcond_insert_columns , expcond_value<?/MIVAR>
        
        <?MIVAR NAME=xpcur_G_expcond_insert_values>$xpcur_G_expcond_insert_values ,'$xpcur_G_cond_add_value'<?/MIVAR>
        
    <?/MIBLOCK>


    <?MIVAR COND=$(XST,$xpcur_G_cond_add_attribute)>
        <?MIVAR NAME=xpcur_G_expcond_insert_columns>$xpcur_G_expcond_insert_columns, expcond_mrkr_zdb_id<?/MIVAR>
        <?MIVAR NAME=xpcur_G_expcond_insert_values>$xpcur_G_expcond_insert_values, '$xpcur_G_cond_add_attribute'<?/MIVAR>
    <?/MIVAR>
    <?MISQL SQL="
        INSERT into experiment_condition($xpcur_G_expcond_insert_columns)
        VALUES ($xpcur_G_expcond_insert_values)
        ;">
    <?/MISQL> 

    <?MISQL SQL="
      select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expcond_zdb_id&recweb_new_value=$xpcurup_expcond_zdb_id&recweb_comments=create+new+record') 
      from webPages where ID='aa-record_web_update.apg';">
    <?/MISQL>
      
    <?MISQL SQL="insert into record_attribution(recattrib_data_zdb_id, recattrib_source_zdb_id)
                 values('$xpcurup_expcond_zdb_id','$OID');">
    <?/MISQL>
    
  <?/MIBLOCK>


  <?MIBLOCK COND=$(AND,$(XST,$xpcur_G_expcond_zdb_id),$(XST,$xpcur_G_expcond_comments))>

    <?MISQL SQL="
        select expcond_comments
        from experiment_condition
        where expcond_zdb_id = '$xpcur_G_expcond_zdb_id';">
        <?MIVAR NAME=xpcurup_old_value>$(URLENCODE,$1)<?/MIVAR>
    <?/MISQL>
    <?MISQL SQL="
        update experiment_condition
        set expcond_comments = '$xpcur_G_expcond_comments'
        where expcond_zdb_id = '$xpcur_G_expcond_zdb_id'
        ;">
    <?/MISQL> 

    <?MIVAR NAME=xpcurup_new_value>$(URLENCODE,$xpcur_G_expcond_comments)<?/MIVAR>
    <?MISQL SQL="
      select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expcond_comments&recweb_new_value=$xpcurup_new_value&recweb_old_value=$xpcurup_old_value&recweb_comments=update') 
      from webPages where ID='aa-record_web_update.apg';">
    <?/MISQL>       
  <?/MIBLOCK>

  <?MICOMMENT>
  *** COPY existing conditions to another environemnt 
  <?/MICOMMENT>
  <?MIBLOCK COND=$(AND,$(XST,$xpcur_G_cond_copy_env_zdb),$(XST,$xpcur_G_cond_copy_conditions))>
        
    <?MIVAR NAME=$xpcur_G_cond_add_exp>$xpcur_G_cond_copy_env_zdb<?/MIVAR>

    <?MIVAR NAME=i>0<?/MIVAR>
    <?MIBLOCK WHILE=$(NE,$(INDEX,$i,$xpcur_G_cond_copy_conditions),)>    	

        <?MIVAR NAME=xpcurup_copy_cond_id>$(INDEX,$i,$xpcur_G_cond_copy_conditions)<?/MIVAR>
        
        <?MISQL SQL="select expcond_cdt_zdb_id,
                            expcond_value,
                            expcond_expunit_zdb_id,
                            expcond_comments,
                            expcond_mrkr_zdb_id
                     from experiment_condition
                     where expcond_zdb_id = '$xpcurup_copy_cond_id';">           
            <?MIVAR NAME=$xpcur_G_cond_add_cond_type>$1<?/MIVAR>
            <?MIVAR NAME=$xpcur_G_cond_add_value>$2<?/MIVAR>
            <?MIVAR NAME=$xpcur_G_cond_add_unit>$3<?/MIVAR>
            <?MIVAR NAME=$xpcur_G_cond_add_comments>$4<?/MIVAR> 
            <?MIVAR NAME=$xpcur_G_cond_add_attribute COND=$(AND,$(NE,$5,NULL),$(NE,$5,))>$5<?/MIVAR>

            <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-xpatcurupdatecondition.apg';">$1<?/MISQL>            
        <?/MISQL>

        <?MIVAR NAME=i>$(+,$i,1)<?/MIVAR>
    <?/MIBLOCK>	    
  <?/MIBLOCK>

  
  <?MICOMMENT> ================| Figure |================ <?/MICOMMENT>
    <?MISQL SQL="
        select cs_field_name_value 
        from curator_session 
        where cs_data_zdb_id = '$OID' 
          and cs_person_zdb_id = '$ZDB_ident'
          and cs_field_name = 'xpcur_c_has_permission';">
        <?MIVAR NAME=xpcur_c_has_permission>$1<?/MIVAR>
    <?/MISQL>
    
  <?MIBLOCK COND=$(XST,$xpcur_G_fig_add_label)>  

    <?MIVAR COND=$(NXST,$xpcur_G_fig_add_comments) NAME=xpcur_G_fig_add_comments><?/MIVAR>
    <?MIVAR NAME=xpcur_G_fig_add_caption COND=$(NXST,$xpcur_G_fig_add_caption)><?/MIVAR>
    <?MIVAR NAME=xpcur_G_fig_add_caption DELIMIT="'" REPLACE="''">$xpcur_G_fig_add_caption<?/MIVAR>

    <?MIBLOCK COND=$(AND,$(EC,$xpcur_G_fig_add_label,$xpcurup_textOnly),$(NC,$xpcur_G_fig_add_caption,$xpcur_G_TO_fig_text))>

      <?MIVAR COND=$(NE,$xpcur_G_fig_add_caption,) NAME=xpcurup_alert>Text only figure caption set to Standard text.<?/MIVAR>
      <?MIVAR NAME=xpcur_G_fig_add_caption>$xpcur_G_TO_fig_text<?/MIVAR>

    <?/MIBLOCK>    
    <?MIBLOCK COND=$(AND,$(EC,$xpcur_c_has_permission,f),$(NC,$xpcur_G_fig_add_label,$xpcurup_textOnly),$(NC,$xpcur_G_fig_add_caption,$xpcur_G_light_fig_text))>

      <?MIVAR COND=$(NE,$xpcur_G_fig_add_caption,) NAME=xpcurup_alert>Warning! No Legend Permission. Please change the publication permissions before entering figure legends.<?/MIVAR>
      <?MIVAR NAME=xpcur_G_fig_add_caption>$xpcur_G_light_fig_text<?/MIVAR>

    <?/MIBLOCK>
    
      <?MICOMMENT> ==| Get next ZDB-ID |== <?/MICOMMENT>
      <?MISQL SQL="execute function get_id('FIG');">$(SETVAR,$xpcurup_fig_zdb_id,$1)<?/MISQL>
    
      <?MICOMMENT> ==| Add New ZDB-ID |== <?/MICOMMENT>  
      <?MISQL SQL="INSERT INTO zdb_active_data(zactvd_zdb_id) VALUES('$xpcurup_fig_zdb_id');"><?/MISQL>
    
      <?MISQL SQL="
        INSERT into figure(
            fig_zdb_id,
            fig_caption,
            fig_label,
            fig_comments,
            fig_source_zdb_id)
        VALUES (
            '$xpcurup_fig_zdb_id',
            '$xpcur_G_fig_add_caption',
            '$xpcur_G_fig_add_label',
            '$xpcur_G_fig_add_comments',
            '$OID');">
      <?/MISQL> 

      <?MISQL SQL="
        select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=fig_zdb_id&recweb_new_value=$xpcurup_fig_zdb_id&recweb_comments=create+new+record') 
        from webPages where ID='aa-record_web_update.apg';">
      <?/MISQL>
    
      <?MIVAR NAME=xpcur_c_figure_only>$xpcurup_fig_zdb_id<?/MIVAR>
       
      <?MIVAR NAME=pubcur_onload>$pubcur_onload storeSession('$ZDB_ident','$OID','xpcur_c_figure_only','$xpcurup_fig_zdb_id');<?/MIVAR>
    
  <?/MIBLOCK>
  
  <?MIBLOCK COND=$(XST,$xpcur_G_fig_label)>
  
    <?MIVAR COND=$(NXST,$xpcur_G_fig_comments) NAME=xpcur_G_fig_comments><?/MIVAR>
    <?MIVAR NAME=xpcur_G_fig_caption COND=$(NXST,$xpcur_G_fig_caption)><?/MIVAR>
    <?MIBLOCK COND=$(AND,$(EC,$xpcur_G_fig_label,$xpcurup_textOnly),$(NC,$xpcur_G_fig_caption,$xpcur_G_TO_fig_text))>

      <?MIVAR COND=$(NE,$xpcur_G_fig_caption,) NAME=xpcurup_alert>Text only figure caption set to Standard text.<?/MIVAR>
      <?MIVAR NAME=xpcur_G_fig_caption>$xpcur_G_TO_fig_text<?/MIVAR>

    <?/MIBLOCK>    

    <?MIBLOCK COND=$(AND,$(EC,$xpcur_c_has_permission,f),$(NC,$xpcur_G_fig_label,$xpcurup_textOnly),$(NE,$xpcur_G_fig_caption,$xpcur_G_light_fig_text))>

      <?MIVAR COND=$(NE,$xpcur_G_fig_caption,) NAME=xpcurup_alert>Warning! No Legend Permission. Please change the publication permissions before entering figure legends.<?/MIVAR>      
      <?MIVAR NAME=xpcur_G_fig_caption>$xpcur_G_light_fig_text<?/MIVAR>

    <?/MIBLOCK>    

    <?MISQL SQL="
        select fig_label, fig_caption, fig_comments
        from figure
        where fig_zdb_id = '$xpcur_G_fig_zdb_id';">
        <?MIVAR NAME=xpcurup_old_value>$(URLENCODE,$xpcur_G_fig_zdb_id<BR>$1<BR>$2<BR>$3)<?/MIVAR>
    <?/MISQL>

    <?MISQL SQL="
        Update figure
        Set fig_caption = '$xpcur_G_fig_caption',
            fig_comments = '$xpcur_G_fig_comments',
            fig_label = '$xpcur_G_fig_label'
        where fig_zdb_id = '$xpcur_G_fig_zdb_id'
        ;">
    <?/MISQL> 
    
    <?MIVAR NAME=xpcurup_new_value>$(URLENCODE,$xpcur_G_fig_zdb_id<BR>$xpcur_G_fig_label<BR>$xpcur_G_fig_caption<BR>$xpcur_G_fig_comments)<?/MIVAR>
    
   
    <?MIVAR NAME=xpcurup_url_amp>$(URLENCODE,&)<?/MIVAR> 
    <?MIVAR NAME=xpcurup_replace_amp>$(URLENCODE,&amp;)<?/MIVAR> 

    <?MIVAR NAME=xpcurup_old_value>$(REPLACE,$xpcurup_old_value,$xpcurup_url_amp,$xpcurup_replace_amp)<?/MIVAR>
    
    <?/MIVAR>
    
    <?MISQL SQL="
      select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=figure&recweb_new_value=$xpcurup_new_value&recweb_old_value=$xpcurup_old_value&recweb_comments=update') 
      from webPages where ID='aa-record_web_update.apg';">
    <?/MISQL>  
  <?/MIBLOCK>  


  <?MICOMMENT> ================| Image |================ <?/MICOMMENT>
  <?MIBLOCK COND=$(AND,$(EC,$xpcur_c_has_permission,f),$(XST,$xpcur_G_image_OID))>
      <?MIVAR>$(UNSETVAR,$xpcur_G_image_OID)<?/MIVAR>
      <?MIVAR NAME=xpcurup_alert>Warning! No Image Permission. Please change the publication permissions before adding images.<?/MIVAR>
  <?/MIBLOCK>

  <?MIBLOCK COND=$(XST,$xpcur_G_image_OID)>
    <?MIVAR NAME=xpcur_G_image_label COND=$(NXST,$xpcur_G_image_label)><?/MIVAR>
    
    <?MICOMMENT> Enforce Unique combination of Figure Label & Image Label <?/MICOMMENT>
    <?MISQL SQL="
        select count(*) 
        from image
        where img_label = '$xpcur_G_image_label'
          and img_fig_zdb_id = '$xpcur_G_image_fig';">
    <?/MISQL>
        
    <?MIBLOCK COND=$(=,$1,0)>
  
      <?MIBLOCK COND=$(XST,$xpcurup_width)>
      
        <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values ('$xpcur_G_image_OID');"><?/MISQL>
        <?MISQL SQL="
          INSERT INTO image(
              img_zdb_id,
              img_image,
              img_label,
              img_fig_zdb_id,
              img_width,
              img_height,
              img_thumbnail,
              img_view,
              img_direction,
              img_form,
              img_preparation,
              img_owner_zdb_id)
          VALUES (
              '$xpcur_G_image_OID',
              '$xpcur_G_image_OID$xpcurup_suffix',
              '$xpcur_G_image_label',
              '$xpcur_G_image_fig',
              '$xpcurup_width',
              '$xpcurup_height',
              '$xpcur_G_image_OID' || '_thumb$xpcurup_suffix',
              'not specified',
              'not specified',
              'not specified',
              'not specified',
              '$ZDB_ident'
              );">
        <?/MISQL>
        <?MISQL SQL="
          select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=img_zdb_id&recweb_new_value=$xpcur_G_image_OID&recweb_comments=create+new+record') 
          from webPages where ID='aa-record_web_update.apg';">
        <?/MISQL>
      
        <?MISQL SQL="insert INTO RECORD_ATTRIBUTION (recattrib_data_zdb_id, recattrib_source_zdb_id)
                     VALUES ('$xpcur_G_image_OID','$OID');">
        <?/MISQL>
      
      <?MIELSE>

        <?MISQL SQL="
          select img_label, img_fig_zdb_id
          from image
          where img_zdb_id = '$xpcur_G_image_OID';">
          <?MIVAR NAME=xpcurup_old_value>$(URLENCODE,$xpcur_G_image_OID<BR>$1<BR>$2)<?/MIVAR>
        <?/MISQL>
        <?MISQL SQL="
          Update image
          Set img_label = '$xpcur_G_image_label',
              img_fig_zdb_id = '$xpcur_G_image_fig'
          where img_zdb_id = '$xpcur_G_image_OID'
          ;">
        <?/MISQL>  

        <?MIVAR NAME=xpcurup_new_value>$(URLENCODE,$xpcur_G_image_OID<BR>$xpcur_G_image_label<BR>$xpcur_G_image_fig)<?/MIVAR>
        <?MISQL SQL="
          select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=image&recweb_new_value=$xpcurup_new_value&recweb_old_value=$xpcurup_old_value&recweb_comments=update') 
          from webPages where ID='aa-record_web_update.apg';">
        <?/MISQL>  
      <?/MIBLOCK>
    <?MIELSE>
      <?MISQL SQL="select fig_label from figure where fig_zdb_id = '$xpcur_G_image_fig';"><?/MISQL>
   
      <SCRIPT>
        <?MIVAR>
        alert("Each image for a figure must have a unique name. Image name '$xpcur_G_image_label' exists for Figure '$1'. \n\n Please enter a unique name.")
        <?/MIVAR>
      </SCRIPT>

    <?/MIBLOCK>
  <?/MIBLOCK> <?MICOMMENT> end XST $xpcur_G_image_OID <?/MICOMMENT>



  <?MICOMMENT> ================| Panel |================ <?/MICOMMENT>
  <?MIBLOCK COND=$(XST,$xpcur_G_panel_add)>
    
      <?MICOMMENT> 
        ================================================================
        Connect Experiment and Panel - Create an expression_result 
        record.
        ================================================================
      <?/MICOMMENT>
      <?MISQL SQL="
          select anatitem_zdb_id, 't'
          from anatomy_item
          where anatitem_name = 'unspecified';">
          <?MIVAR NAME=xpcurup_panel_add_anatitem>$1<?/MIVAR>
         <?MIVAR NAME=xpcurup_panel_add_expressed>$2<?/MIVAR>
      <?/MISQL>
    
      <?MIBLOCK INDEX=$xpcurUP_panel_xpatex FOREACH=$xpcur_G_panel_add_xpatex>
      
        <?MIBLOCK COND=$(NXST,$xpcurpan_xpatex_selected)>
            <?MIVAR NAME=xpcurpan_xpatex_selected>$xpcurUP_panel_xpatex<?/MIVAR>
        <?MIELSE>    
            <?MIVAR NAME=xpcurpan_xpatex_selected>$xpcurpan_xpatex_selected,$xpcurUP_panel_xpatex<?/MIVAR>
        <?/MIBLOCK>
    
      <?MISQL SQL="select WebExplode(object,'gPSLitem_xpatex_zdb_id=$xpcurUP_panel_xpatex&gPSLitem_anatitem_zdb_id=$xpcurup_panel_add_anatitem&gPSLitem_expressed=$xpcurup_panel_add_expressed&gPSLitem_stg_start_zdb_id=$xpcur_G_panel_add_start_stg&gPSLitem_stg_end_zdb_id=$xpcur_G_panel_add_end_stg') from webPages where ID='aa-getPubStructureListItem.apg';">$1<?/MISQL>

      <?MISQL SQL="
         SELECT count(*)
           FROM expression_pattern_figure
          WHERE xpatfig_xpatres_zdb_id = '$gPSLitem_xpatres_zdb_id'
            AND xpatfig_fig_zdb_id = '$xpcur_G_panel_fig_zdb_id';">
      <?/MISQL>
         
      <?MIBLOCK COND=$(NC,$1,1)>     
        <?MISQL SQL="
          insert into expression_pattern_figure
            (
              xpatfig_xpatres_zdb_id,
              xpatfig_fig_zdb_id
            )
          values
            (
              '$gPSLitem_xpatres_zdb_id',
              '$xpcur_G_panel_fig_zdb_id'
            );">
        <?/MISQL>
        
        <?MICOMMENT>Update antibody_stats table <?/MICOMMENT>
	<?MISQL SQL="execute function add_ab_ao_fast_search('$gPSLitem_xpatres_zdb_id');"><?/MISQL> 
        <?MISQL SQL="
          select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expression_pattern_figure&recweb_new_value=$gPSLitem_xpatres_zdb_id,$xpcur_G_panel_fig_zdb_id&recweb_comments=create+new+record') 
          from webPages where ID='aa-record_web_update.apg';">
        <?/MISQL>
      <?MIELSE>

        <SCRIPT>
          <?MIVAR>
          alert("Warning:: Duplicate Record. \n\n Please enter a unique combination of Figure / Experiment / Stage .")
          <?/MIVAR>
        </SCRIPT>
        
      <?/MIBLOCK> 
      
      <?/MIBLOCK> <?MICOMMENT> Multi select expressions<?/MICOMMENT>
  
  <?/MIBLOCK>  



  <?MICOMMENT> ================| Panel_Structure |================ <?/MICOMMENT>
  <?MIBLOCK COND=$(OR,$(AND,$(XST,$xpcur_G_structures_add),$(NE,$xpcur_G_structures_add,)),$(AND,$(XST,$xpcur_G_structures_remove),$(NE,$xpcur_G_structures_remove,)))>
  
    <?MIBLOCK WHILE=$xpcur_G_exp_count>
      <?MIVAR>
        <?MIVAR NAME=xpcurup_pipe_char_at>$(POSITION,$xpcur_G_fig_xpat_stg,|)<?/MIVAR>
        <?MIVAR NAME=xpcurup_figxpat_length>$(-,$xpcurup_pipe_char_at,1)<?/MIVAR>
        <?MIVAR NAME=xpcurup_fig_xpat_stg>$(SUBSTR,$xpcur_G_fig_xpat_stg,1,$xpcurup_figxpat_length)<?/MIVAR>
        <?MIVAR NAME=xpcur_G_fig_xpat_stg>$(SUBSTR,$xpcur_G_fig_xpat_stg,$(+,1,$xpcurup_pipe_char_at))<?/MIVAR>
        
        $(SETVAR,$xpcur_G_exp_count,$(-,$xpcur_G_exp_count,1))
      <?/MIVAR>  
  

    <?MICOMMENT> ============================================================== 
                  Extract figure_zdb_id, xpatex_zdb_id, sstage_zdb_id, and 
                  estage_zdb_id from fig_xpat_stg.
                ==============================================================
    <?/MICOMMENT>        
    <?MIVAR NAME=xpcurup_panel_fig_zdb_id>$(INDEX,0,$xpcurup_fig_xpat_stg)<?/MIVAR>
    <?MIVAR NAME=xpcurup_panel_xpatex_zdb_id>$(INDEX,1,$xpcurup_fig_xpat_stg)<?/MIVAR>
    <?MIVAR NAME=xpcurup_panel_sstage_zdb_id>$(INDEX,2,$xpcurup_fig_xpat_stg)<?/MIVAR>
    <?MIVAR NAME=xpcurup_panel_estage_zdb_id>$(INDEX,3,$xpcurup_fig_xpat_stg)<?/MIVAR>
    
    <?MIVAR COND=$(EC,$debugg,true)>
      <b>$xpcur_G_fig_xpat_stg</b><BR>
      fig_zdb_id = $xpcurup_panel_fig_zdb_id<BR>
      xpatex = $xpcurup_panel_xpatex_zdb_id<BR>
      sstage = $xpcurup_panel_sstage_zdb_id<BR>
      estage = $xpcurup_panel_estage_zdb_id<BR>
    <?/MIVAR>


    <?MICOMMENT> ============================================================== 
                   Create lists of structures to add and remove from the 
                   selected panel.
                 ==============================================================
    <?/MICOMMENT>    
    
    <?MIVAR NAME=xpcur_G_structures_add COND=$(NXST,$xpcur_G_structures_add)><?/MIVAR>
    <?MIVAR NAME=xpcur_G_structures_remove COND=$(NXST,$xpcur_G_structures_remove)><?/MIVAR>
    <?MIVAR NAME=xpcurup_anatitem_add><?/MIVAR>
    <?MIVAR NAME=xpcurup_anatitem_remove><?/MIVAR>
    <?MIVAR NAME=xpcurup_xpatinf_add_csv>$(REPLACE,$xpcur_G_structures_add,"|","','")<?/MIVAR>
    <?MISQL SQL="
      select xpatinf_anatitem_zdb_id, xpatinf_expressed, xpatinf_term_zdb_id
      from expression_pattern_infrastructure
      where xpatinf_zdb_id in ('$xpcurup_xpatinf_add_csv')
      ;">
      <?MIVAR NAME=item DELIMIT="'" REPLACE="''">$1<?/MIVAR>
      <?MIVAR>$(VECAPPEND,$xpcurup_anatitem_add,$item$2$3)<?/MIVAR>
    <?/MISQL>
    <?MIVAR NAME=xpcurup_anatitem_add_csv SEPARATE="','">$xpcurup_anatitem_add<?/MIVAR>
    <?MIVAR NAME=xpcur_c_anatitem_add_csv>$xpcurup_anatitem_add_csv<?/MIVAR>
      <?MIVAR NAME=pubcur_onload>$pubcur_onload storeSession('$ZDB_ident','$OID','pubcur_c_anatitem_add_csv','$(URLENCODE,$xpcur_c_anatitem_add_csv)');<?/MIVAR>


    <?MIVAR NAME=xpcurup_xpatinf_remove_csv DELIMIT="|" REPLACE="','">$xpcur_G_structures_remove<?/MIVAR>
    
    <?MISQL SQL="
      select xpatinf_anatitem_zdb_id, xpatinf_expressed, xpatinf_term_zdb_id
      from expression_pattern_infrastructure
      where xpatinf_zdb_id in ('$xpcurup_xpatinf_remove_csv')
      ;">
      <?MIVAR NAME=item DELIMIT="'" REPLACE="''">$1<?/MIVAR>
      <?MIVAR>$(VECAPPEND,$xpcurup_anatitem_remove,$item$2$3)<?/MIVAR>
    <?/MISQL>
    <?MIVAR NAME=xpcurup_anatitem_remove_csv SEPARATE="','">$xpcurup_anatitem_remove<?/MIVAR>
    <?MIVAR NAME=url_anatitem_remove_csv>$xpcurup_anatitem_remove_csv<?/MIVAR>
    <?MIVAR NAME=url_anatitem_remove_csv DELIMIT="'" REPLACE="">$url_anatitem_remove_csv<?/MIVAR>  

      <?MIVAR NAME=pubcur_onload>$pubcur_onload storeSession('$ZDB_ident','$OID','pubcur_c_anatitem_remove_csv','$(URLENCODE,$url_anatitem_remove_csv)');<?/MIVAR>
    
    <?MICOMMENT> =============================================================== 
                   Create xpatres and xpatfig records  
                 ===============================================================      
    <?/MICOMMENT>  

    <?MIVAR>$(UNSETVAR,$xpcurup_xpatfig_add_list)<?/MIVAR>
    <?MIVAR NAME=xpcurup_xpatfig_add_list><?/MIVAR>
    <?MISQL SQL="
      select xpatinf_anatitem_zdb_id, xpatinf_expressed, xpatinf_term_zdb_id
      from expression_pattern_infrastructure
      where xpatinf_zdb_id in ('$xpcurup_xpatinf_add_csv')
      ;">
      <?MIBLOCK COND="$(EC,$3,NULL)">
        <?MIVAR NAME=goterm><?/MIVAR>
      <?MIELSE>
        <?MIVAR NAME=goterm>$3<?/MIVAR>
      <?/MIBLOCK>
      <?MISQL SQL="select WebExplode(object,'gPSLitem_anatitem_zdb_id=$1&gPSLitem_expressed=$2&gPSLitem_goterm_zdb_id=$goterm&gPSLitem_xpatex_zdb_id=$xpcurup_panel_xpatex_zdb_id&gPSLitem_stg_start_zdb_id=$xpcurup_panel_sstage_zdb_id&gPSLitem_stg_end_zdb_id=$xpcurup_panel_estage_zdb_id') from webPages where ID='aa-getPubStructureListItem.apg';">$1<?/MISQL>
      <?MIVAR>$(VECAPPEND,$xpcurup_xpatfig_add_list,$gPSLitem_xpatres_zdb_id)<?/MIVAR>              
    <?/MISQL>

    <?MIVAR NAME=xpcurup_xpatfig_add_csv SEPARATE="','">$xpcurup_xpatfig_add_list<?/MIVAR>
    
    <?MISQL SQL="
      select xpatres_zdb_id
      from expression_result 
      where xpatres_zdb_id in ('$xpcurup_xpatfig_add_csv')
        and xpatres_zdb_id not in
            (
              select xpatfig_xpatres_zdb_id
              from expression_pattern_figure
              where xpatfig_fig_zdb_id = '$xpcurup_panel_fig_zdb_id'
            );">
     
        <?MIVAR NAME=xpcurup_panel_xpatres_zdb_id>$1<?/MIVAR>
        <?MISQL SQL="
          INSERT into expression_pattern_figure (
            xpatfig_fig_zdb_id,
            xpatfig_xpatres_zdb_id)
          VALUES (
            '$xpcurup_panel_fig_zdb_id',
            '$xpcurup_panel_xpatres_zdb_id');">
        <?/MISQL>         
                <?MICOMMENT>Update antibody_stats table <?/MICOMMENT>
		<?MISQL SQL="execute function add_ab_ao_fast_search('$xpcurup_panel_xpatres_zdb_id');"><?/MISQL> 

        <?MISQL SQL="
          select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expression_pattern_figure&recweb_new_value=$xpcurup_panel_xpatres_zdb_id,$xpcurup_panel_fig_zdb_id&recweb_comments=create+new+record') 
          from webPages where ID='aa-record_web_update.apg';">
        <?/MISQL>        
    <?/MISQL>

    <?MICOMMENT> =============================================================== 
                   Delete removed structures from expression_pattern_figure. 
                 ===============================================================
    <?/MICOMMENT>

    <?MIVAR NAME=xpcurup_old_value><?/MIVAR>
    <?MISQL SQL="
        select xpatfig_xpatres_zdb_id
        from expression_pattern_figure
        where xpatfig_fig_zdb_id = '$xpcurup_panel_fig_zdb_id'
          and exists
            (
              select *
              from expression_result, expression_pattern_infrastructure
              where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                and xpatres_anat_item_zdb_id = xpatinf_anatitem_zdb_id
                and xpatres_expression_found = xpatinf_expressed
                and xpatres_term_zdb_id = xpatinf_term_zdb_id 
                and xpatinf_zdb_id in ('$xpcurup_xpatinf_remove_csv')
                and xpatres_xpatex_zdb_id = '$xpcurup_panel_xpatex_zdb_id'
                and xpatres_start_stg_zdb_id = '$xpcurup_panel_sstage_zdb_id'
                and xpatres_end_stg_zdb_id = '$xpcurup_panel_estage_zdb_id'
            )
        ;">
        
        <?MIBLOCK COND=$(EC,$xpcurup_old_value,)>
            <?MIVAR NAME=xpcurup_old_value>$1<?/MIVAR>
        <?MIELSE>
            <?MIVAR NAME=xpcurup_old_value>$xpcurup_old_value,$1<?/MIVAR>
        <?/MIBLOCK>        
    <?/MISQL>
    
    <?MISQL SQL="
        delete from expression_pattern_figure
        where xpatfig_fig_zdb_id = '$xpcurup_panel_fig_zdb_id'
          and exists
            (
              select *
              from expression_result, expression_pattern_infrastructure
              where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                and xpatres_anat_item_zdb_id = xpatinf_anatitem_zdb_id
                and xpatres_expression_found = xpatinf_expressed
                and xpatres_term_zdb_id=xpatinf_term_zdb_id
                and xpatinf_zdb_id in ('$xpcurup_xpatinf_remove_csv')
                and xpatres_xpatex_zdb_id = '$xpcurup_panel_xpatex_zdb_id'
                and xpatres_start_stg_zdb_id = '$xpcurup_panel_sstage_zdb_id'
                and xpatres_end_stg_zdb_id = '$xpcurup_panel_estage_zdb_id'
                and xpatres_term_zdb_id is not null
                UNION
              select *
              from expression_result, expression_pattern_infrastructure
              where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                and xpatres_anat_item_zdb_id = xpatinf_anatitem_zdb_id
                and xpatres_expression_found = xpatinf_expressed
                and xpatinf_zdb_id in ('$xpcurup_xpatinf_remove_csv')
                and xpatres_xpatex_zdb_id = '$xpcurup_panel_xpatex_zdb_id'
                and xpatres_start_stg_zdb_id = '$xpcurup_panel_sstage_zdb_id'
                and xpatres_end_stg_zdb_id = '$xpcurup_panel_estage_zdb_id'
                and xpatres_term_zdb_id is null
                and xpatinf_term_zdb_id is null
            )
        ;">
    <?/MISQL>
    
    <?MIBLOCK COND=$(NC,$xpcurup_old_value,)>
    
      <?MIVAR NAME=xpcurup_old_value>xpatfig_fig_zdb_id = $xpcurup_panel_fig_zdb_id<BR>xpatfig_xpatres_zdb_id = $xpcurup_old_value<?/MIVAR>
      <?MIVAR NAME=xpcurup_old_value>$(URLENCODE,$xpcurup_old_value)<?/MIVAR>
      <?MISQL SQL="
        select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expression_pattern_figure&recweb_new_value=removed&recweb_old_value=$xpcurup_old_value&recweb_comments=delete+record') 
        from webPages where ID='aa-record_web_update.apg';">
      <?/MISQL>   

    <?/MIBLOCK>

    <?MICOMMENT> =============================================================== 
                   Add Unspecified to the Expression if all structures were removed. 
                 ===============================================================
    <?/MICOMMENT>
    
    <?MISQL SQL="
        select count(*)::integer
        from expression_pattern_figure, expression_result
        where xpatfig_fig_zdb_id = '$xpcurup_panel_fig_zdb_id'
          and xpatfig_xpatres_zdb_id = xpatres_zdb_id
          and xpatres_xpatex_zdb_id = '$xpcurup_panel_xpatex_zdb_id'
          and xpatres_start_stg_zdb_id = '$xpcurup_panel_sstage_zdb_id'
          and xpatres_end_stg_zdb_id = '$xpcurup_panel_estage_zdb_id'            
        ;">
    <?/MISQL>
    
    <?MIBLOCK COND=$(=,$1,0)>
      <?MISQL SQL="
        select anatitem_zdb_id
        from anatomy_item
        where anatitem_name = 'unspecified'
        ;">
        <?MISQL SQL="select WebExplode(object,'gPSLitem_anatitem_zdb_id=$1&gPSLitem_expressed=t&gPSLitem_xpatex_zdb_id=$xpcurup_panel_xpatex_zdb_id&gPSLitem_stg_start_zdb_id=$xpcurup_panel_sstage_zdb_id&gPSLitem_stg_end_zdb_id=$xpcurup_panel_estage_zdb_id') from webPages where ID='aa-getPubStructureListItem.apg';">$1<?/MISQL>

        <?MIVAR NAME=$xpcurup_panel_xpatres_zdb_id>$gPSLitem_xpatres_zdb_id<?/MIVAR>              
      <?/MISQL>      

      <?MISQL SQL="
          INSERT into expression_pattern_figure (
            xpatfig_fig_zdb_id,
            xpatfig_xpatres_zdb_id)
          VALUES (
            '$xpcurup_panel_fig_zdb_id',
            '$xpcurup_panel_xpatres_zdb_id');">
      <?/MISQL>     
      <?MISQL SQL="
        select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=expression_pattern_figure&recweb_new_value=$xpcurup_panel_xpatres_zdb_id,$xpcurup_panel_fig_zdb_id&recweb_comments=create+new+record') 
        from webPages where ID='aa-record_web_update.apg';">
      <?/MISQL>        
      
    
    <?/MIBLOCK>
    
    
    <?MIVAR COND=$(EC,$debugg,true)>
      <br>Delete Panel Structures: $MI_SQL<br><br>
    <?/MIVAR>

    <?MICOMMENT> ============================================================== 
                   Orphan records. Deleted these from expression_result. 
                 ==============================================================
    <?/MICOMMENT>
    
    <?MIVAR NAME=xpcurup_xpatres_orphan><?/MIVAR>
    <?MISQL SQL="
      select orphan.xpatres_zdb_id
      from expression_result orphan, expression_experiment
      where xpatex_source_zdb_id = '$OID'
        and xpatex_zdb_id = orphan.xpatres_xpatex_zdb_id
        and xpatres_start_stg_zdb_id = '$xpcurup_panel_sstage_zdb_id'
        and xpatres_end_stg_zdb_id = '$xpcurup_panel_estage_zdb_id'
        and xpatres_xpatex_zdb_id = '$xpcurup_panel_xpatex_zdb_id'
        and not exists
            (
              select * 
              from expression_pattern_figure
              where orphan.xpatres_zdb_id = xpatfig_xpatres_zdb_id
            )
      ;">
      <?MIVAR>$(VECAPPEND,$xpcurup_xpatres_orphan,$1)<?/MIVAR>
    <?/MISQL>
    <?MIVAR NAME=xpcurup_xpatres_orphan_csv SEPARATE="','">$xpcurup_xpatres_orphan<?/MIVAR>    
    <?MISQL SQL="
        delete from zdb_active_data
        where zactvd_zdb_id in ('$xpcurup_xpatres_orphan_csv')
        ;">
    <?/MISQL>
    
    <?MIVAR COND=$(EC,$debugg,true)>
      <br>Delete Results: $MI_SQL<br><br>
    <?/MIVAR>

  <?/MIBLOCK>
  
  <?MIBLOCK COND=$(NXST,$xpatcurup_do_not_reset_checked)>
    <?MIVAR NAME=xpcur_c_checked_expression><?/MIVAR>

      <?MIVAR NAME=pubcur_onload>$pubcur_onload storeSession('$ZDB_ident','$OID','xpcur_c_checked_expression','');<?/MIVAR>

  <?/MIBLOCK>
  
  <?/MIBLOCK>  


  <?MICOMMENT> ================| Structure |================ <?/MICOMMENT>
  <?MIBLOCK COND=$(XST,$xpcur_G_structure_add_button)>

      <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-structure_pile_add.apg';">$1<?/MISQL>   

  <?/MIBLOCK> 


  <?MICOMMENT> ================| Permission |================ <?/MICOMMENT>


  <?MIBLOCK COND=$(AND,$(XST,$xpcur_G_can_show_image),$(NE,$xpcur_G_can_show_image,))>

    <?MICOMMENTS>
       ================================================          
         Change the can_show_image value. 
         Add an acknowledgement to the paper.
         Add a curator note.
       ================================================
    <?/MICOMMENTS>
    
    <?MIVAR NAME=xpcur_G_pub_ack COND=$(NXST,$xpcur_G_pub_ack)><?/MIVAR>
    <?MIVAR NAME=xpcur_G_pub_ack>$(REPLACE,$xpcur_G_pub_ack,"'","''")<?/MIVAR>

    <?MISQL SQL="
      select pub_can_show_images, pub_acknowledgment
      from publication
      where zdb_id = '$OID';">
      <?MIVAR NAME=xpcurup_old_value>$(URLENCODE,show images = $1<BR>$2)<?/MIVAR>
    <?/MISQL>
      

    <?MISQL SQL="update publication 
                 set pub_can_show_images = '$xpcur_G_can_show_image',
                     pub_acknowledgment = '$xpcur_G_pub_ack'
                 where zdb_id = '$OID';">
    <?/MISQL>
    
    <?MIVAR NAME=xpcurup_new_value>$(URLENCODE,show images = $xpcur_G_can_show_image<BR>$xpcur_G_pub_ack)<?/MIVAR>
    <?MISQL SQL="
      select WebExplode(object,'permission=root&recweb_rec_id=$OID&recweb_pers_id=$ZDB_ident&recweb_pers_name=$ZDB_name&recweb_table_column=publication&recweb_new_value=$xpcurup_new_value&recweb_old_value=$xpcurup_old_value&recweb_comments=update permissions') 
      from webPages where ID='aa-record_web_update.apg';">
    <?/MISQL>      
    
           
    <?MIVAR NAME=pubcur_onload>$pubcur_onload storeSession('$ZDB_ident','$OID','xpcur_c_has_permission','$xpcur_G_can_show_image');<?/MIVAR>
    
    
    <?MIVAR NAME="xpcur_c_has_permission">$xpcur_G_can_show_image<?/MIVAR>

  <?/MIBLOCK>


    
    <?MIVAR COND=$(XST,$xpcurup_alert)>
      <script>
        alert('$xpcurup_alert');
      </script>
    <?/MIVAR>    
   
     
<?/MIBLOCK>  <?MICOMMENT> authorize = root <?/MICOMMENT>
