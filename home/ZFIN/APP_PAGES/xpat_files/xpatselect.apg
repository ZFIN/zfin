<?MICOMMENT>

FILE:     xpatselect.apg
PREFIX:   xpatsel_

Query form and query result page for expression patterns.

This is called from at least these places:
1. From the home page, title bar, or jump_to.apg  In these cases the app page 
   is called with no search terms. 
2. From pubview2.apg page via an href link.  In this case the publication 
   ID is passed in.
3. From itself, meaning the query form.  In this case, lots of variables 
   can be set.  See below.
4. From anatdict.apg.  An anatomy item ID is passed in. 
5. From anatomy_item.apg.  An anatomy item ID is passed in. 
6. From markerselect.apg.  A gene name is passed in.

INPUT VARS:
  From pubview2.apg:
    pubId    the ZDB ID of a publication.  All expression patterns attributed
	     to this publication will be displayed, and the query form will 
	     not be displayed.
  From markerselect.apg
    xpatsel_calledBySelf	Exists if xpatselect.apg called itself.  This
				is specifically necessary to allow the checkboxes
				to have a default value.  If the page didnt call
				itself, and the checkbox doesn't exist, then we assume
				it should be set to it's default state.  If the page
				called itself and the checkbox doesn't exist, well, 
				that means somebody went to the trouble of deselecting it. 
    query_results	Run query and display matching expression patterns
    gene_name		Abbrev of the gene to get expression patterns for.
			Causes search type to be set to 'equals'
			NOTE: Thought about passing in the gene ZDB ID instead 
			of the symbol.  However, there is no place on the 
			search form for gene ZDB ID.  Using the symbol allows 
			us to (almost) always get just the expression patterns 
			we want, and to prepopulate the search form with the 
			actual term used.
  From itself (xpatselect.apg):
    query_results	Run query and display matching expression patterns
    xpatsel_geneZdbId	Exists if a user clicks on a line in xpatselect_summaryresults.apg, 
                        could also be used by markerselect, speeds up xpatselectquery process.
			This variable shouldn't get round tripped, we only want it to come in
			the first time, if the change the form, it should go away.

    gene_name		Exists if user entered a gene name
    searchtype          Should gene name 'begins' / 'contains' / 'equals' 
			gene_name.

    xpatsel_probeName	Exists if user entered a probe name
    xpatsel_probeSearchType	Probe name 'begins' / 'contains' / 'equals'


    mutant		Exists if user entered a mutant/background string.
    mutant_id		Exists when calling from genotype page
    mutsearchtype	Specifies if mutant name should 'begins' with
			'contains' or 'equals' the string in mutant.
    author		Exists if user entered an author string
    authsearchtype	Specifies if the author should 'begins' with or
			'contains' the string in author.
    TA_selected_structures	  Exists if user entered any anatomical structures.
    xpatsel_processed_selected_structures Exists if user entered any anatomical structres.
					  Called from anatdict.apg & anatomy_item.apg

    include_substructures  	Possible values are 'checked' and '', I think.
    structure_bool	Possible values are 'and' (meaning every selected 
			structure) or 'or' (meaning any selected structure).  
    stage_start         starting stage of selected stage window.  Set to 
			first stage if user did not set it.
    stage_end		ending stage of selected stage window.  Set to 
			last stage if user did not set it.
    assay		Set to assay name if user specified one, otherwise "ANY"
    xpatsel_jtype       Default value of "ANY", otherwise restricts to only	 
                        journal ("published") or direct submission ("unpublished"),
			not set directly by a form element, translated from the stuff
			below.
    xpatsel_jtypeDirect		'checked' if the user wants to see direct submission data (default on)
    xpatsel_jtypePublished	'checked' if the user wants to see published data (default on)
    xpatsel_recentRecords	empty by default, if a number of days is entered, the search
				will only return records from today less that number of days.




  From anatdict.apg and anatomy_item.apg
    query_results	If exists, means the page was called from itself.
    ?????

OUTPUT VARS:
  None.

OUTPUT:
  A list of expression patterns that meet the specified input criteria.

EFFECTS  
  Several session duration temporary tables may be created.

<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>
<?/MIERROR>

<HTML>

<?MIVAR Name=page_name>$(IF,$(NXST,$query_results),ZFIN Search Expressions,ZFIN Expression Search Results)<?/MIVAR>

<?MIVAR><TITLE>$page_name</TITLE><?/MIVAR>
<SCRIPT>

function start_help() {
   top.zfinhelp=open("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect_help.apg","helpwindow","scrollbars=yes,toolbar=no,directories=no,menubar=no,status=no,resizable=yes,width=555,height=350");
}

function start_note() {
  top.zfinhelp=open("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect_note.apg","notewindow","scrollbars=no,toolbar=no,directories=no,menubar=no,status=no,resizable=yes,width=400,height=300");
}

function process_structures(list) {

  matchcomma = /\,/g;
  list = list.replace(matchcomma,"|");

  matchreturn = /\n/g;
  list = list.replace(matchreturn,",");

  matchmulticomma = /,{1,}/g;
  list = list.replace(matchmulticomma,",");

  matchfirstcomma = /^,/g;
  list = list.replace(matchfirstcomma,"");  

  matchlastcomma = /,$/g;
  list = list.replace(matchlastcomma,"");

  document.critform.xpatsel_processed_selected_structures.value = list;
}

function call_submit() {
  
  process_structures(document.critform.TA_selected_structures.value);
  if (document.critform.stage_start.selectedIndex > document.critform.stage_end.selectedIndex) {
    //swap it so that the earlier stage is first.. after all, the user isn't "wrong" in saying
    //that they want all the stages between Adult & Zygote instead of Zygote & Adult..

    tempindex = document.critform.stage_end.selectedIndex;
    document.critform.stage_end.selectedIndex = document.critform.stage_start.selectedIndex;
    document.critform.stage_start.selectedIndex = tempindex;
  }

  //remove double quotes
  document.critform.TA_selected_structures.value=document.critform.TA_selected_structures.value.replace(/"/g,"");
  document.critform.submit();
  return true;
}



function call_reset() {
  document.critform.gene_name.value = '';
  document.critform.author.value = '';
  document.critform.mutant.value = '';
  document.critform.stage_start.selectedIndex = 0;
  document.critform.stage_end.selectedIndex = document.critform.stage_end.options.length - 1;
  document.critform.assay.value=document.critform.assay[0].value;
  document.critform.MOgene.value = '';
  document.critform.MOsearchtype.selectedIndex = 0;
  document.critform.xpatsel_jtypeDirect.checked = true;
  document.critform.xpatsel_jtypePublished.checked = true;
  document.critform.xpatsel_imagesOnly.checked = false;
  document.critform.TA_selected_structures.value = '';
  document.critform.include_substructures.checked = true;
  document.critform.structure_bool[0].checked = true;
  document.critform.searchtype.selectedIndex = 0;
  document.critform.mutsearchtype.selectedIndex = 0;
  document.critform.authsearchtype.selectedIndex = 0;
  document.critform.WINSIZE.value = 25;
  document.critform.xpatsel_recentRecords.value = '';
}

// we decided to take off this function. Doesn't hurt to keep
// it here till we absolutely wants to wipe it off. 
// if it is June, 2006. Delete it. 
function openChild(childWinUrl,childWinName) {
      window.name = "expressionSearch";  // name parent window
 	
      if (self.childWindow) {
	childWindow.close();
      }      
      // left&top, screenX&screenY, set window location, 
      // used by different browser
      childWindow=open(childWinUrl,childWinName,'resizable=yes,width=700,height=600,left=450,top=0,screenX=450,screenY=0,scrollbars=1, toolbar=1');
}

</SCRIPT>
<script src="http://<!--|DOMAIN_NAME|-->/autosuggest.js"></script>


<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>


<?MICOMMENT> 
  ============================================================================
  ==========  GET MIN AND MAX STAGES
  ============================================================================
<?/MICOMMENT>

<?MISQL SQL="
  select stg_zdb_id
    from stage
    where stg_hours_start = 
	  ( select min(stg_hours_start) 
	      from stage )
      and stg_name <> 'Unknown'; ">
  <?MIVAR NAME=$xpatsel_minStage>$1<?/MIVAR>
<?/MISQL>
<?MISQL SQL="
  select stg_zdb_id
    from stage
    where stg_hours_start = 
	  ( select max(stg_hours_start) 
	      from stage )
      and stg_name <> 'Unknown'; ">
  <?MIVAR NAME=$xpatsel_maxStage>$1<?/MIVAR>
<?/MISQL>

<?MICOMMENT>
  ============================================================================
  ==========  CLEAN UP INPUT FIELDS
  ============================================================================
<?/MICOMMENT>
<?MISQL COND="$(XST,$mutant_id)" SQL="
	select geno_display_name
          from genotype
         where geno_zdb_id = '$mutant_id'";>
   <?MIVAR NAME=mutant>$1<?/MIVAR>
<?/MISQL>	

<?MIVAR COND="$(XST,$gene_name)" NAME="$gene_name">$(TRIM,$gene_name)<?/MIVAR>
<?MIVAR COND="$(XST,$mutant)" NAME="$mutant">$(TRIM,$mutant)<?/MIVAR>
<?MIVAR COND="$(XST,$author)" NAME="$author">$(TRIM,$author)<?/MIVAR>


<?MICOMMENT>
  ============================================================================
  ==========  SET DEFAULT VALUES
  ============================================================================
			(these should match the javascript reset above)
<?/MICOMMENT>

<?MIVAR COND=$(NXST,$stage_start) NAME=$stage_start>$xpatsel_minStage<?/MIVAR>
<?MIVAR COND=$(NXST,$stage_end) NAME=$stage_end>$xpatsel_maxStage<?/MIVAR>
<?MIVAR COND=$(NXST,$assay) NAME=$assay>ANY<?/MIVAR>
<?MIVAR COND=$(NXST,$structure_bool) NAME=$structure_bool>and<?/MIVAR>

<?MIVAR COND="$(NXST,$searchtype)" NAME="$searchtype">contains<?/MIVAR>
<?MIVAR COND="$(NXST,$mutsearchtype)" NAME="$mutsearchtype">contains<?/MIVAR>
<?MIVAR COND="$(NXST,$MOsearchtype)" NAME="$MOsearchtype">contains<?/MIVAR>
<?MIVAR COND="$(NXST,$authsearchtype)" NAME="$authsearchtype">contains<?/MIVAR>

<?MIBLOCK COND="$(AND,$(NXST,$include_substructures),$(NXST,$xpatsel_calledBySelf))">
   <?MIVAR NAME="include_substructures">checked<?/MIVAR>
<?/MIBLOCK>

<?MIBLOCK COND="$(AND,$(NXST,$xpatsel_jtypeDirect),$(NXST,$xpatsel_calledBySelf))">
  <?MIVAR NAME="$xpatsel_jtypeDirect">checked<?/MIVAR>
<?/MIBLOCK>


<?MIBLOCK COND="$(AND,$(NXST,$xpatsel_jtypePublished),$(NXST,$xpatsel_calledBySelf))">
  <?MIVAR NAME="$xpatsel_jtypePublished">checked<?/MIVAR>
<?/MIBLOCK>


<?MIVAR NAME="$xpatsel_jtype">ANY<?/MIVAR>

<?MIBLOCK COND="$(AND,$(XST,$xpatsel_jtypeDirect),$(XST,$xpatsel_jtypePublished))">
  <?MIVAR NAME="$xpatsel_jtype">ANY<?/MIVAR>
<?/MIBLOCK>
<?MIBLOCK COND="$(AND,$(NXST,$xpatsel_jtypeDirect),$(XST,$xpatsel_jtypePublished))">
  <?MIVAR NAME="$xpatsel_jtype">Published<?/MIVAR>
<?/MIBLOCK>
<?MIBLOCK COND="$(AND,$(XST,$xpatsel_jtypeDirect),$(NXST,$xpatsel_jtypePublished))">
  <?MIVAR NAME="$xpatsel_jtype">Unpublished<?/MIVAR>
<?/MIBLOCK>
<?MIBLOCK COND="$(AND,$(NXST,$xpatsel_jtypeDirect),$(NXST,$xpatsel_jtypePublished))">
  <?MIVAR NAME="$xpatsel_jtype">Unpublished<?/MIVAR>
<?/MIBLOCK>




<?MICOMMENT> This variable gets set to 't' if we want to force 0 results to show,
             initially, the only place that it can be set to 'true' is when an anatomy
	     item doesn't exist. <?/MICOMMENT>
<?MIVAR NAME="$xpatsel_anatomy_error_occured">f<?/MIVAR>


<?MICOMMENT> 
  ============================================================================
  ==========  CONVERT STRUCTURE NAMES TO ZDB_IDs, DISPLAY FEEDBACK
  ============================================================================
  If the user entered structures in the Anatomy text area, it will populate
  two variables.  The direct variable (TA_selected_structures) and via 
  javascript, xpatsel_processed_selected_structures, which has commas replaced with
  pipes, so that it can be comma seperated (webblade likes comma seperation,
  and not much else). 
  
  xpatselectanatverify.apg will handle this, xpatsel_processed_selected_structures
  goes in, anatomy_zdb_id_list and xpatsel_anatomy_error_occured come out.

  the output of this section is $anatomy_zdb_id_list & $xpatsel_anatomy_error_occured may 
  get set to 't'

<?/MICOMMENT>

<?MIBLOCK COND="$(AND,$(XST,$TA_selected_structures),$(XST,$xpatsel_processed_selected_structures))">

  <?MISQL COND=$(XST,$debug_timing) SQL="
    execute function get_time()">
    <br>$1 Before anatomy verification
  <?/MISQL>

    <?MICOMMENT> pass in $xpatsel_processed_selected_structures, retrieve xpanatv_anatomy_zdb_id_list, 
                 xpanatv_anatomy_error_occured<?/MICOMMENT>
    <?MISQL SQL="
    select WebExplode(object, 'xpanatv_processed_selected_structures=$(URLENCODE,$xpatsel_processed_selected_structures)&xpanatv_anatomy_error_occured=$xpatsel_anatomy_error_occured')
      from webpages 
      where id = 'aa-xpatselectanatverify.apg';">
    $1
    <?/MISQL> <?MICOMMENT> returns xpanatv_anatomy_zdb_id_list & xpatanv_anatomy_error_occured <?/MICOMMENT>

    <?MIVAR NAME="$xpatsel_anatomy_error_occured">$xpanatv_anatomy_error_occured<?/MIVAR>

  

<?/MIBLOCK>

<?MICOMMENT>
  ============================================================================
  ==========  GET EXPRESSION PATTERNS FROM DATABASE
  ============================================================================

  Depending on from where this page was called, the code webexplodes different
  app pages to get the different query results.  The end result of all the app
  pages is that they populate a temp table with expression pattern ZDB IDs that
  meet whatever criteria this page was called with.  The temp table will also
  include the text that matched in the case of gene name or genotype name searches.

  First create temp table if it does not already exist.  The temp table reuses
  the column names from expression_pattern.  This simplifies code in the 
  webexploded pages.
<?/MICOMMENT>

<?MISQL SQL="
  select dbinfo('sessionid') 
    from single;">
  <?MIVAR NAME=$xpatsel_session_id>$1<?/MIVAR>
  <?MIVAR NAME=$xpatselect_temp_match>$(CONCAT,xpatselect_temp_match_,$xpatsel_session_id)<?/MIVAR>
<?/MISQL>

<?MISQL SQL="
  execute function table_exists('$xpatselect_temp_match')">
  <?MIVAR NAME="$xpatsel_tableExists">$1<?/MIVAR>
  <?MISQL COND=$(EC,$xpatsel_tableExists,f) SQL="
    create temp table $xpatselect_temp_match (
      xpat_fig_zdb_id 		varchar(50),
      xpat_gene_zdb_id          varchar(50),
      xpat_xpatex_zdb_id	varchar(50),
      xpat_matching_text 	varchar(255),
      xpat_matching_precedence	varchar(80),
      xpat_matching_significance integer
    ) with NO LOG;">
  <?/MISQL>  
<?/MISQL>

<?MICOMMENT>
  ============================================================================
  ==========  Invoke correct selection query/app page
  ============================================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(AND,$(XST,$query_results),$(EC,$xpatsel_anatomy_error_occured,f))">
  <?MICOMMENT>
    Page Called from itself.  Pass any query form variables, if they exist,
    to the form handling page.
  <?/MICOMMENT>
  <?MIVAR>
    $(VECAPPEND,$xpatsel_queryVec,xpatselqry_resultTable=$xpatselect_temp_match)
    $(IF,$(XST,$gene_name),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_geneName=$(URLENCODE,$gene_name)))
    $(IF,$(XST,$xpatsel_geneZdbId),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_geneZdbId=$(URLENCODE,$xpatsel_geneZdbId)))
    $(IF,$(XST,$searchtype),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_geneSearchType=$searchtype))
    $(IF,$(XST,$xpatsel_probeName),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_probeName=$(URLENCODE,$xpatsel_probeName)))
    $(IF,$(XST,$xpatsel_probeSearchType),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_probeSearchType=$xpatsel_probeSearchType))
    $(IF,$(XST,$mutant),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_genoName=$(URLENCODE,$(REPLACE,$mutant,_,\_))))
    $(IF,$(XST,$mutsearchtype),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_genoSearchType=$mutsearchtype))
    $(IF,$(XST,$MOgene),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_MOgene=$(URLENCODE,$MOgene)))
    $(IF,$(XST,$MOsearchtype),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_MOsearchtype=$MOsearchtype))
    $(IF,$(XST,$author),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_author=$(URLENCODE,$author)))
    $(IF,$(XST,$authsearchtype),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_authorSearchType=$authsearchtype))
    <?MIBLOCK INDEX=$anat_id FOREACH=$xpanatv_anatomy_zdb_id_list>
      <?MIVAR> $(VECAPPEND,$xpatsel_queryVec,xpatselqry_anatomyZdbIdList=$anat_id) <?/MIVAR>
    <?/MIBLOCK>
    $(IF,$(XST,$include_substructures),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_includeSubstructures=$include_substructures))
    $(IF,$(XST,$xpatsel_imagesOnly),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_imagesOnly=$xpatsel_imagesOnly))
    $(IF,$(XST,$xpatsel_recentRecords),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_recentRecords=$xpatsel_recentRecords))
    $(IF,$(XST,$structure_bool),$(VECAPPEND,$xpatsel_queryVec,xpatselqry_structureBool=$structure_bool))
    <?MIVAR COND="$(OR,$(NE,$stage_start,$xpatsel_minStage),$(NE,$stage_end,$xpatsel_maxStage))">
      $(VECAPPEND,$xpatsel_queryVec,xpatselqry_stageStart=$stage_start)
      $(VECAPPEND,$xpatsel_queryVec,xpatselqry_stageEnd=$stage_end)
    <?/MIVAR>
    <?MIVAR COND="$(NE,$assay,ANY)">
      $(VECAPPEND,$xpatsel_queryVec,xpatselqry_assay=$assay)
    <?/MIVAR>
    <?MIVAR COND="$(NE,$xpatsel_jtype,ANY)">	 
      $(VECAPPEND,$xpatsel_queryVec,xpatselqry_jtype=$xpatsel_jtype)	 
    <?/MIVAR>

    <?MIVAR NAME=$xpatsel_queryParams>$(SEPARATE,$xpatsel_queryVec,&)<?/MIVAR>
  <?/MIVAR>
  <?MISQL SQL="
    select WebExplode(object, '$xpatsel_queryParams')
      from webpages 
      where id = 'aa-xpatselectquery.apg';">
    $1
  <?/MISQL>

  <?MIBLOCK COND="$(XST,$xpatselqry_matchedText)">
    <?MIVAR NAME="$xpatsel_matchedText">$xpatselqry_matchedText<?/MIVAR>
    <?MIVAR NAME="$xpatsel_matchedTextSearchType">$xpatselqry_matchedTextSearchType<?/MIVAR>
  <?/MIBLOCK>
<?/MIBLOCK>


<?MICOMMENT> 
  ============================================================================
  ==========  BRAND SPANKING NEW RESULTS DISPLAY =============================
  ============================================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(XST,$query_results)">

  <?MICOMMENT> ** Walking Windows Code ** <?/MICOMMENT>

  <?MIVAR NAME=WINSIZE DEFAULT=25>$WINSIZE<?/MIVAR>
  <?MIVAR NAME=BEGIN DEFAULT=1>$START<?/MIVAR>

  <?MICOMMENT> DEFINITION OF RANGES <?/MICOMMENT>
  <?MIVAR NAME=BEGIN>$(IF,$(<,$BEGIN,1),1,$BEGIN)<?/MIVAR> 
  <?MIVAR NAME=END>$(+,$BEGIN,$WINSIZE)<?/MIVAR>


  <?MISQL SQL="select count(unique xpat_gene_zdb_id)::integer  
               from $xpatselect_temp_match;">

    <?MIVAR NAME="xpatsel_geneCount">$1<?/MIVAR>
  <?/MISQL>



   <?MICOMMENT> --- results test, show everything organized by gene --- 
   <?MISQL SQL="select WebExplode(object,'&xpresbg_resultTable=$xpatselect_temp_match')
             from webPages where ID='aa-xpatselect_resultsbygene.apg';">$1<?/MISQL>
   <?MIVAR NAME="xpatsel_nResults">$xpresbg_geneCount<?/MIVAR>
   <?/MICOMMENT>
  

   <?MICOMMENT>
   <?MISQL SQL="select WebExplode(object,'&xpresimg_resultTable=$xpatselect_temp_match')
             from webPages where ID='aa-xpatselect_resultsasimages.apg';">$1<?/MISQL>
   <?MIVAR NAME="xpatsel_nResults">$xpresimg_imgCount<?/MIVAR>
   <?/MICOMMENT>



 

    <?MICOMMENT> ** build url to pass in ** <?/MICOMMENT>
    
  <?MIVAR>
    $(VECAPPEND,$xpatsel_urlVec,xpatsel_calledBySelf=true)
    $(IF,$(XST,$searchtype),$(VECAPPEND,$xpatsel_urlVec,searchtype=$searchtype))
    $(IF,$(XST,$xpatsel_probeName),$(VECAPPEND,$xpatsel_urlVec,xpatsel_probeName=$(URLENCODE,$xpatsel_probeName)))
    $(IF,$(XST,$xpatsel_probeSearchType),$(VECAPPEND,$xpatsel_urlVec,xpatsel_probeSearchType=$xpatsel_probeSearchType))
    $(IF,$(XST,$mutant),$(VECAPPEND,$xpatsel_urlVec,mutant=$(URLENCODE,$mutant)))
    $(IF,$(XST,$mutsearchtype),$(VECAPPEND,$xpatsel_urlVec,mutsearchtype=$mutsearchtype))
    $(IF,$(XST,$author),$(VECAPPEND,$xpatsel_urlVec,author=$(URLENCODE,$author)))
    $(IF,$(XST,$MOgene),$(VECAPPEND,$xpatsel_urlVec,MOgene=$(URLENCODE,$MOgene)))
    $(IF,$(XST,$MOsearchtype),$(VECAPPEND,$xpatsel_urlVec,MOsearchtype=$(URLENCODE,$MOsearchtype)))
    $(IF,$(XST,$authsearchtype),$(VECAPPEND,$xpatsel_urlVec,authsearchtype=$authsearchtype))
     $(IF,$(XST,$TA_selected_structures),$(VECAPPEND,$xpatsel_urlVec,TA_selected_structures=$(URLENCODE,$TA_selected_structures)))    
     $(IF,$(XST,$xpatsel_processed_selected_structures),$(VECAPPEND,$xpatsel_urlVec,xpatsel_processed_selected_structures=$xpatsel_processed_selected_structures))
    $(IF,$(XST,$include_substructures),$(VECAPPEND,$xpatsel_urlVec,include_substructures=$include_substructures))
    $(IF,$(XST,$xpatsel_jtype),$(VECAPPEND,$xpatsel_urlVec,xpatsel_jtype=$xpatsel_jtype))
    $(IF,$(XST,$xpatsel_jtypeDirect),$(VECAPPEND,$xpatsel_urlVec,xpatsel_jtypeDirect=$xpatsel_jtypeDirect))
    $(IF,$(XST,$xpatsel_jtypePublished),$(VECAPPEND,$xpatsel_urlVec,xpatsel_jtypePublished=$xpatsel_jtypePublished))
    $(IF,$(XST,$xpatsel_imagesOnly),$(VECAPPEND,$xpatsel_urlVec,xpatsel_imagesOnly=$xpatsel_imagesOnly))
    $(IF,$(XST,$xpatsel_recentRecords),$(VECAPPEND,$xpatsel_urlVec,xpatsel_recentRecords=$xpatsel_recentRecords))
    $(IF,$(XST,$structure_bool),$(VECAPPEND,$xpatsel_urlVec,structure_bool=$structure_bool))
    $(IF,$(XST,$WINSIZE),$(VECAPPEND,$xpatsel_urlVec,WINSIZE=$WINSIZE))
    <?MIVAR COND="$(OR,$(NE,$stage_start,$xpatsel_minStage),$(NE,$stage_end,$xpatsel_maxStage))">
      $(VECAPPEND,$xpatsel_urlVec,stage_start=$stage_start)
      $(VECAPPEND,$xpatsel_urlVec,stage_end=$stage_end)
    <?/MIVAR>
    <?MIVAR COND="$(NE,$assay,ANY)">
      $(VECAPPEND,$xpatsel_urlVec,assay=$assay)
    <?/MIVAR>
    <?MIVAR COND="$(NE,$xpatsel_jtype,ANY)">	 
      $(VECAPPEND,$xpatsel_urlVec,xpatsel_jtype=$xpatsel_jtype)	 
    <?/MIVAR>
    <?MIVAR NAME=$xpatsel_baseUrl>$(URLENCODE,$(SEPARATE,$xpatsel_urlVec,&))<?/MIVAR>
  <?/MIVAR>

    <?MIVAR NAME="$xpatsel_summaryMatchString"><?/MIVAR> <?MICOMMENT> ** only pass in matching text stuff if it's not null ** <?/MICOMMENT>
    <?MIVAR COND="$(XST,$xpatsel_matchedText)" NAME="$xpatsel_summaryMatchString">&xpsumres_matchedText=$(URLENCODE,$xpatsel_matchedText)&xpsumres_matchedTextSearchType=$xpatsel_matchedTextSearchType<?/MIVAR>


 <?MICOMMENT> --- choose between summary and detailed results --- <?/MICOMMENT>
  <?MIBLOCK COND="$(>,$xpatsel_geneCount,1)"> 

    <?MICOMMENT> --- summary results --- <?/MICOMMENT>



    <?MISQL SQL="select WebExplode(object,'&xpsumres_resultTable=$xpatselect_temp_match$xpatsel_summaryMatchString&xpsumres_baseUrl=$xpatsel_baseUrl') 
             from webPages where ID='aa-xpatselect_summaryresults.apg';">$1<?/MISQL>
    <?MIVAR NAME="xpatsel_nResults">$xpsumres_geneCount<?/MIVAR>

  <?MIELSE COND="$(EC,$xpatsel_geneCount,1)">

    <?MICOMMENT> --- detailed results --- <?/MICOMMENT>

   <?MIVAR NAME="xpatsel_detailedMatchString"><?/MIVAR> <?MICOMMENT> ** only pass in matching text stuff if it's not null ** <?/MICOMMENT>
   <?MIVAR COND="$(XST,$xpatsel_matchedText)" NAME="$xpatsel_detailedMatchString">&xpdetres_matchedText=$(URLENCODE,$xpatsel_matchedText)&xpdetres_matchedTextSearchType=$xpatsel_matchedTextSearchType<?/MIVAR>

   <?MIVAR NAME="xpatsel_imagesOnlyString"><?/MIVAR>
   <?MIVAR COND="$(XST,$xpatsel_imagesOnly)" NAME="xpatsel_imagesOnlyString">
     &xpdetres_imagesOnly=$xpatsel_imagesOnly
   <?/MIVAR>

   <?MISQL SQL="select WebExplode(object,'&xpdetres_baseUrl=$xpatsel_baseUrl&xpdetres_resultTable=$xpatselect_temp_match$xpatsel_imagesOnlyString$xpatsel_detailedMatchString') 
               from webPages where ID='aa-xpatselect_detailedresults.apg';">$1<?/MISQL>
   <?MIVAR NAME="xpatsel_nResults">$xpdetres_pubCount<?/MIVAR>
  
 
  <?MIELSE>
    <?MICOMMENT> --- gene count is not greater than one, or one, so it's 0.. meaning the search returned nothing --- <?/MICOMMENT>
    <?MIVAR NAME="xpatsel_nResults">0<?/MIVAR> <?MICOMMENT> no genes, so, no results <?/MICOMMENT>



  <div style="position: absolute; top: 115px; right: 5px; "> <?MICOMMENT> ** this seems wrong, but I'm having trouble doing it better ** <?/MICOMMENT>
    <a href="#modify">Modify Search</a><br>
    <!-- Insert a form with one button. Label button Your Input Welcome -->
    <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';"> $1 <?/MISQL>
  </div>


    <div style="{ font-weight: bold; text-align: center; }">
     No gene expression patterns were found for your search.
    </div>
    <br>
    <br>
    <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-xpatselect_note.apg';">
        <div style="{ text-align: center; }"> <?MICOMMENT> ** IE needs this, the 'auto' below centers in standards compliant browsers ** <?/MICOMMENT>
          <div style="{ text-align: left; background-color: #eee; width: 550; border: 2px solid black; padding: 5px; margin: 0px auto -1px auto; }"><small>$1</small></div>
        </div>
    <?/MISQL>

  <?/MIBLOCK> <?MICOMMENT> --- end summary vs detailed block <?/MICOMMENT>


  <?MISQL COND=$(XST,$debug_timing) SQL="
    execute function get_time()">
    <br>$1 After results display
  <?/MISQL>


  <br>

    <?MICOMMENT>
      ============================================================================
      ==========  WALKING WINDOWS
      ============================================================================

      Build array of user data

      to be used by walking windows and nav tile page_id
      javascript of nav tile logic can not deal with preformed string 
      using urlencode so save non-urlencoded string for use by nav tile
      others will be appended
      want GET string as short as possible - append only when variable 
      exists, buffer overflow may cause segmentation fault
    <?/MICOMMENT>

    <?MIVAR name=selector>MIval=aa-xpatselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
    <?MIVAR name=$UserInput><?/MIVAR>
    <?MIBLOCK COND="$(XST,$pubId)">
      <?MIVAR name=$UserInput>$UserInput&pubId=$pubId<?/MIVAR>
    <?MIELSE>
      <?MIVAR name=$UserInput>$UserInput&xpatsel_calledBySelf=true<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$gene_name)>$UserInput&gene_name=$(URLENCODE,$gene_name)<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_geneZdbId)>$UserInput&xpatsel_geneZdbId=$(URLENCODE,$xpatsel_geneZdbId)<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_probeName)>$UserInput&xpatsel_probeName=$(URLENCODE,$xpatsel_probeName)<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$mutant)>$UserInput&mutant=$(URLENCODE,$mutant)<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$author)>$UserInput&author=$(URLENCODE,$author)<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$assay)>$UserInput&assay=$(URLENCODE,$assay)<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_jtypeDirect)>$UserInput&xpatsel_jtypeDirect=$xpatsel_jtypeDirect<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_jtypePublished)>$UserInput&xpatsel_jtypePublished=$xpatsel_jtypePublished<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_jtype)>$UserInput&xpatsel_jtype=$xpatsel_jtype<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_imagesOnly)>$UserInput&xpatsel_imagesOnly=$xpatsel_imagesOnly<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_recentRecords)>$UserInput&xpatsel_recentRecords=$xpatsel_recentRecords<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$searchtype)>$UserInput&searchtype=$searchtype<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$MOsearchtype)>$UserInput&MOsearchtype=$MOsearchtype<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$MOgene)>$UserInput&MOgene=$MOgene<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$xpatsel_probeSearchType)>$UserInput&xpatsel_probeSearchType=$xpatsel_probeSearchType<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$mutsearchtype)>$UserInput&mutsearchtype=$mutsearchtype<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$authsearchtype)>$UserInput&authsearchtype=$authsearchtype<?/MIVAR>
      <?MIVAR name=$UserInput>$UserInput&stage_start=$stage_start<?/MIVAR>
      <?MIVAR name=$UserInput>$UserInput&stage_end=$stage_end<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$structure_bool)>$UserInput&structure_bool=$structure_bool<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$query_results)>$UserInput&query_results=$query_results<?/MIVAR>
      <?MIVAR name=$UserInput COND=$(XST,$include_substructures)>$UserInput&include_substructures=$include_substructures<?/MIVAR>
      <?MIVAR name=UserInput COND=$(XST,$TA_selected_structures)>$UserInput&TA_selected_structures=$(URLENCODE,$TA_selected_structures)<?/MIVAR>
      <?MIVAR name=UserInput COND=$(XST,$xpatsel_processed_selected_structures)>$UserInput&xpatsel_processed_selected_structures=$(URLENCODE,$xpatsel_processed_selected_structures)<?/MIVAR>
      
    <?/MIBLOCK>
        

    <Center>
    <Table width="70%" border="0">
      <tr>
        <td width="45%" align=right valign=top>&nbsp;
	  <!--- Return to the previous set of Rows --->
	  <?MIBLOCK COND="$(>,$BEGIN,1)">
	    <?MIVAR>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$(-,$BEGIN,$WINSIZE)&BEGIN=$BEGIN&$selector$UserInput">Prev</A>&nbsp;&nbsp;&nbsp;&nbsp;<br>
	      <!-- If current not First Page, create link to first page. -->
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=1&BEGIN=1&$selector$UserInput">First Page</A>
	    <?/MIVAR>
	  <?/MIBLOCK>
	</td>


        <!-- Calculate 3 pages before and 3 pages after current page. -->
        <?MIVAR name=$CURRENT>$(FIX,$(+,$(/,$BEGIN,$WINSIZE),1))<?/MIVAR>
        <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,3)),0)">
          <td valign=top>
	    <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,3))"> $(-,$CURRENT,3)</A> <?/MIVAR>
	  </td>
        <?/MIBLOCK>

        <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,2)),0)">
	  <td valign=top>
	    <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,2))"> $(-,$CURRENT,2)</A><?/MIVAR>
	  </td>
        <?/MIBLOCK>

        <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,1)),0)">
	  <td valign=top>
	    <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,1))"> $(-,$CURRENT,1)</A><?/MIVAR>
	  </td>
        <?/MIBLOCK>
<?MIBLOCK COND="$(XST,$xpdetres_figCount)">
  <?MIVAR NAME=$xpatsel_nResults>$xpdetres_figCount<?/MIVAR>
<?/MIBLOCK>

        <?MIBLOCK COND="$(>,$xpatsel_nResults,$WINSIZE)">
	  <td align=center valign=top>
	    <?MIVAR>  $CURRENT <?/MIVAR>
	  </td>
        <?/MIBLOCK>

        <?MIVAR COND="$(<=,$(+,$BEGIN,$(*,$WINSIZE,1)),$xpatsel_nResults)">
	  <td valign=top>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$END"> $(+,$CURRENT,1)</A>
	  </td>
        <?/MIVAR>

        <?MIVAR COND="$(<=,$(+,$BEGIN,$(*,$WINSIZE,2)),$xpatsel_nResults)">
	  <td valign=top>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,2))"> $(+,$CURRENT,2)</A>
	  </td>
        <?/MIVAR>

        <?MIVAR COND="$(<=,$(+,$BEGIN,$(*,$WINSIZE,3)),$xpatsel_nResults)">
	  <td valign=top>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,3))"> $(+,$CURRENT,3)</A>
	  </td>
        <?/MIVAR>

        <td width="45%" align=left valign=top>&nbsp;
          <!--- Get the next set of Rows --->
	  <?MIBLOCK COND="$(<=,$(+,$BEGIN,$WINSIZE),$xpatsel_nResults)">
	    <?MIVAR>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$END&BEGIN=$BEGIN&$selector$UserInput">Next</A><br>
	    <?/MIVAR>

	    <!-- Calculate last page -->
	    <?MIVAR name=$START COND="$(=,$(MOD,$xpatsel_nResults,$WINSIZE),0)">$(+,$(*,$(-,$(/,$xpatsel_nResults,$WINSIZE),1),$WINSIZE),1)<?/MIVAR>
	    <?MIVAR name=$START COND="$(!=,$(MOD,$xpatsel_nResults,$WINSIZE),0)">$(+,$(*,$(FIX,$(/,$xpatsel_nResults,$WINSIZE)),$WINSIZE),1)<?/MIVAR>
	    <?MIVAR>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$START&$selector$UserInput">Last Page</A>
	    <?/MIVAR>
	  <?/MIBLOCK>
        </td>
      </tr>
    </table>  <?MICOMMENT> end walking windows table <?/MICOMMENT>

    <?MICOMMENT> ** done with temp table, nuke it ** <?/MICOMMENT>
    <?MISQL SQL="delete from $xpatselect_temp_match;"><?/MISQL>


<?/MIBLOCK>  <?MICOMMENT> --- end new query_results exists -- <?/MICOMMENT>

<?MICOMMENT>
  ============================================================================
  ==========  Prepare anatomy suggestion List
  ============================================================================
<?/MICOMMENT>

<?MIVAR NAME=xpatsel_anatList><?/MIVAR>

<?MISQL SQL="
	select anatitem_name, anatitem_name_lower as name_lower_column 
	  from anatomy_item 
      union
	select dalias_alias, dalias_alias_lower as name_lower_column
          from data_alias
         where dalias_data_zdb_id[1,9] = 'ZDB-ANAT-'
      order by name_lower_column ; ">
     <?MIVAR NAME=xpatsel_curAnat>"$1"<?/MIVAR>
     <?MIVAR>$(VECAPPEND,$xpatsel_anatList,$xpatsel_curAnat)<?/MIVAR>
<?/MISQL>

<?MIVAR NAME=xpatsel_anatList>$(SEPARATE,$xpatsel_anatList,",")<?/MIVAR>
<?MIVAR NAME=xpatsel_anatList>$(SUBSTR,$xpatsel_anatList,2)<?/MIVAR>



<?MICOMMENT>
  ============================================================================
  ==========  QUERY FORM
  ============================================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(NXST,$pubId)">
  <table border=0 width=100% cellpadding=3 cellspacing=0>
    <tr>
      <td bgcolor="<!--|SIDEBAR_COLOR|-->" width=70%>
         &nbsp;&nbsp;

	<?MIBLOCK COND="$(NXST,$query_results)">
          <b>Search for Gene Expression Data </b>
	<?MIELSE>
          <a name=modify></a><b>Modify your search.</b>
	<?/MIBLOCK>

      </td>

      <td bgcolor="<!--|SIDEBAR_COLOR|-->" align=right>
        <!-- Insert a form with one button. Label button Your Input Welcome -->
        <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
      </td>
    </tr>
  </table>

  <form name=critform 
        method=get
        action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">
    <input type=hidden name=MIval value=aa-xpatselect.apg>
    <input type=hidden name=query_results value="exist">
    <input type=hidden name=START value="0">

    <?MIVAR COND="$(NXST,$stage_start)" NAME=$stage_start>$xpatsel_minStage<?/MIVAR>
    <?MIVAR COND="$(NXST,$stage_end)" NAME=$stage_end>$xpatsel_maxStage<?/MIVAR>
    <?MIVAR COND="$(NXST,$assay)" NAME=$assay>ANY<?/MIVAR>

    <?MICOMMENT> *** temp - to be moved to stylesheet *** <?/MICOMMENT>
    <style type="text/css">
    form label { font-size: .85em;  }
    form input {  }

    form fieldset { border-width: 0; }

    .namesearchLabel { font-weight: bold;   }    
    .multisearchLabel { font-weight: bold; }
    .selectLabel { font-weight: bold; }
    .filterLabel { ; }
    .accessoryLabel { font-size: .75em; }

    #xpatselJtypeBox { margin-top: .3em; margin-bottom: .3em; }

    

    </style>


    <table border=0 width=100% cellpadding=3 cellspacing=0>
      <?MIVAR>
	<tr>
	  <td nowrap>

	    <!-- gene name -->

	    <label for="xpatselGene" class="namesearchLabel">Gene/EST name</label>

	    <SELECT name=searchtype>
	        <option value="contains" $(IF,$(AND,$(XST,$searchtype),$(EC,$searchtype,contains)),SELECTED) >contains
  	        <option value="begins" $(IF,$(AND,$(XST,$searchtype),$(EC,$searchtype,begins)),SELECTED) >begins with
                <option value="equals" $(IF,$(AND,$(XST,$searchtype),$(EC,$searchtype,equals)),SELECTED) >equals
	    </select>
	    <input id="xpatselGene" type=text name=gene_name size="27"
		   onKeyDown="
		     k = (navigator.appName == 'Netscape') ? event.which : window.event.keyCode;
		     if (k == 13 ) { 
		       call_submit(); 
		     }  "  value="$(IF,$(XST,$gene_name),$gene_name)"  >
	    <!-- end gene name -->
	  </td>
	  <td rowspan=3>
	    <!-- stage -->
	    <label for="xpatselStageStart" class="selectLabel"> Between stages:</label> <br>
              <?MICOMMENT>the Unknown stage will only be used in AO, thus that should not 
                          be an option on xpatselect page.
              <?/MICOMMENT>
	      <SELECT id="xpatselStageStart" NAME="stage_start" SIZE=1>
		<?MISQL SQL="select stg_name, stg_hours_start, stg_hours_end, stg_zdb_id
			       from stage
			      where stg_name <> 'Unknown'	
			      order by stg_hours_start, stg_hours_end desc;">
		  <OPTION $(IF,$(EC,$stage_start,$4),SELECTED) VALUE="$4"> $1 
		<?/MISQL>
	      </SELECT>
	      <label for="xpatselStageEnd" class="selectLabel">&</label><br>
	      <SELECT id="xpatselStageEnd" NAME="stage_end" SIZE=1>
		<?MISQL SQL="
		  	select stg_name, stg_hours_start, stg_hours_end, stg_zdb_id
			  from stage
			 where stg_name <> 'Unknown'	
			order by stg_hours_start, stg_hours_end desc">
		  <OPTION $(IF,$(EC,$stage_end,$4), SELECTED) VALUE="$4")> $1 
		<?/MISQL>
	      </SELECT>
	    </FONT>
	    <br><a href="http://zfin.org/zf_info/zfbook/stages/index.html">Developmental Staging Series</a>
	    <!-- end stage -->
	  </td>
	</tr>
        <?MICOMMENT>
        <tr>
          <td valign="top" align="left">
          <?MIVAR>
            <label for="xpatselProbe" class="namesearchLabel">EST/CDNA name</label>
	      <SELECT name="xpatsel_probeSearchType">
	        <option value="contains" $(IF, $(AND,$(XST,$xpatsel_probeSearchtype),$(EC,$xpatsel_probeSearchType,contains)),SELECTED) >contains
	        <option value="begins"  $(IF, $(AND,$(XST,$xpatsel_probeSearchtype),$(EC,$xpatsel_probeSearchType,begins)),SELECTED)  >begins with
                <option value="equals"  $(IF, $(AND,$(XST,$xpatsel_probeSearchtype),$(EC,$xpatsel_probeSearchType,equals)),SELECTED)  >equals
	      </select>
	      <input type="text" id="xpatselProbe" name="xpatsel_probeName" size="27"
  		   onKeyDown="
	  	     k = (navigator.appName == 'Netscape') ? event.which : window.event.keyCode;
		       if (k == 13 ) { 
		         call_submit(); 
		       }  "  value="$(IF,$(XST,$xpatsel_probeName),$xpatsel_probeName)"  >
          <?/MIVAR>
          </td>

        </tr>
        <?/MICOMMENT>
	<tr>
	  <td>
	    <!-- begin mutant -->
	    <label for="xpatselMutant" class="namesearchLabel">Genotype or Background</label>
	      <SELECT name=mutsearchtype>
		<option value="contains" $(IF,$(AND,$(XST,$mutsearchtype),$(EC,$mutsearchtype,contains)),SELECTED)>contains
		<option value="begins"  $(IF,$(AND,$(XST,$mutsearchtype),$(EC,$mutsearchtype,begins)),SELECTED) >begins with
                <option value="equals" $(IF,$(AND,$(XST,$mutsearchtype),$(EC,$mutsearchtype,equals)),SELECTED) >equals
	    </select>
	      </SELECT>
	      <INPUT type=text id="xpatselMutant" name=mutant size=15
		     onKeyDown="
		        k = (navigator.appName == 'Netscape') ? event.which : window.event.keyCode;
		       if (k == 13 ) { call_submit(); }  " value="$(IF,$(XST,$mutant),$mutant)">
	      <!-- end mutant -->
	    </FONT>
	  </td>
	</tr>

	<tr>
	  <td>
	    <!-- begin morpholino --> 
	    <label for="xpatselMoSearchtype" class="namesearchLabel">MO knockdown: Gene name</label>
	      <SELECT name="MOsearchtype">
		<option value="contains" $(IF,$(AND,$(XST,$MOsearchtype),$(EC,$MOsearchtype,contains)),SELECTED)>contains
		<option value="begins"  $(IF,$(AND,$(XST,$MOsearchtype),$(EC,$MOsearchtype,begins)),SELECTED) >begins with

	      </SELECT>
	      <INPUT type=text id="xpatselMoSearchtype" name=MOgene size=13
		     onKeyDown="
		       k = (navigator.appName == 'Netscape') ? event.which : window.event.keyCode;
		       if (k == 13 ) { call_submit(); }  " value="$(IF,$(XST,$MOgene),$MOgene)">
	      <!-- end morpholino -->
	      
	    </FONT>
	  </td>
          <td>
            &nbsp;
          </td>

	</tr>
	
	<tr>
	  <td>
	    <!-- begin author -->
	    <label for="xpatselAuthor" class="namesearchLabel">Author</label>
	      <SELECT name=authsearchtype>
		<option value="contains" $(IF,$(AND,$(XST,$authsearchtype),$(EC,$authsearchtype,contains)),SELECTED) >contains
		<option value="begins"  $(IF,$(AND,$(XST,$authsearchtype),$(EC,$authsearchtype,begins)),SELECTED)  >(first author) begins with
	      </SELECT>
	      <input type=text id="xpatselAuthor" name="author" size=25  onKeyDown="
		     k = (navigator.appName == 'Netscape') ? event.which : window.event.keyCode;
		     if (k == 13 ) { call_submit(); }" value="$(IF,$(XST,$author),$author)">
	    </FONT>
	    <!-- end author -->
	  </td>
	  <td>

            <!-- begin assay type -->
	    <label for="xpatselAssay" class="selectLabel">Assay Type</label>
	      <SELECT id="xpatselAssay" NAME=assay>
		<option <?MIVAR COND="$(EC,$assay,ANY)">SELECTED<?/MIVAR> value=ANY>ANY
		<?MISQL SQL="
		  select distinct xpatassay_name, xpatassay_display_order
		    from expression_pattern_assay
		    order by xpatassay_display_order;">
		  <OPTION $(IF,$(EC,$assay,$1),SELECTED) value='$1'>$1
		<?/MISQL>
	      </SELECT>
	    </FONT>
	    <!-- end assay type -->
 
	   
	  </td>
	</tr>
      <?/MIVAR>
      <tr>

        <?MICOMMENT> <!--- new selected structures textarea ---> <?/MICOMMENT>

        <TD align="left" valign="top"> 
	  <TABLE border=0 bgcolor="#EEEEEE"> 
            <TR>
	      <TD colspan="2">
		<span style="float: left;">
                  <label for="TA_selected_structures" class="multisearchLabel">
		    <A href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-anatdict.apg&mode=search">Anatomy</A>
                  </label>
                </span>
                <span style="float: right;">
                  <label class="accessoryLabel">[Enter one anatomical term per line]</label>
                </span>
	     </TD>
	     </TR>
	     <TR>
	     <TD colspan="2">
		<TEXTAREA cols="46" rows="3" name="TA_selected_structures" id="TA_selected_structures"><?MIVAR COND="$(XST,$TA_selected_structures)">$TA_selected_structures<?/MIVAR></TEXTAREA>
	        <DIV id="autosuggest"><ul></ul></DIV>
                <script>
		  var agt = navigator.userAgent;
                  var is_safari = ((agt.indexOf('Safari')!=-1)&&(agt.indexOf('Mac')!=-1))? 1 : 0 ;
		  if (is_safari == 0 ) 
		  {
		    <?MIVAR>
		    var anatomyList = new Array($xpatsel_anatList);
		    <?/MIVAR>
		    new AutoSuggest(document.getElementById("TA_selected_structures"),anatomyList);
		  }
                </script>

		<input type="hidden" name="xpatsel_processed_selected_structures" <?MIVAR COND=$(XST,$xpatsel_processed_selected_structures)>value=$xpatsel_processed_selected_structures<?/MIVAR>>
		
	      </TD> <?MICOMMENT> end new selected structures textarea <?/MICOMMENT>
            </TR>
            <TR>
	      <TD valign="top">
		<?MICOMMENT>
		  this bit is sneaky, basically, this means that if you're opening the page
		  for the first time and the variable is empty, then create it - but if
		  the page has been submitted and the variable is empty, then it's supposed
		  to be, and we wanna leave it that way.
		<?/MICOMMENT>
	          <input type=checkbox id="xpatselIncludeSubstructures" name="include_substructures" value="checked" <?MIVAR> $(IF,$(AND,$(XST,$include_substructures),$(EC,$include_substructures,checked)),checked="checked") <?/MIVAR> >  <label for="xpatselIncludeSubstructures" class="accessoryLabel" >Include substructures</label> 
             </TD>
             <TD>

		  <?MIVAR COND="$(NXST,$structure_bool)" NAME="structure_bool">and<?/MIVAR>
                    <label class="accessoryLabel">Expression in: </label> 
                  <br>
		  <input type="radio" id="xpatselStructureBoolAnd" name="structure_bool" value="and" <?MIVAR>$(IF,$(EC,$structure_bool,and),checked="checked")<?/MIVAR> >
	          <label for="xpatselStructureBoolAnd" class="accessoryLabel" ><b>Every</b> term entered <br></label>
		  
		  <input type="radio" id="xpatselStructureBoolOr" name="structure_bool" value="or"  <?MIVAR>$(IF,$(EC,$structure_bool,or),checked="checked")<?/MIVAR> > 
	          <label for="xpatselStructureBoolOr" class="accessoryLabel" ><b>Any</b> term entered </label>
	      </TD>
	    </TR>
	  </TABLE>
        </TD>
        <td valign="top">

           <fieldset>

             <legend>Filters:</legend>                    

             <?MICOMMENT> *** Images Only Checkbox *** <?/MICOMMENT>

               <input type="checkbox" id="xpatselImagesOnly"
                      name="xpatsel_imagesOnly" value="checked" 
                      <?MIVAR> $(IF,$(AND,$(XST,$xpatsel_imagesOnly),$(EC,$xpatsel_imagesOnly,checked)),checked="checked") <?/MIVAR> > 
               <label for="xpatselImagesOnly" id="xpatselImagesOnlyLabel">Show only figures with images </label>

             <?MICOMMENT> *** End Images Only Checkbox *** <?/MICOMMENT>
 
             
             <div id="xpatselJtypeBox">

             <?MICOMMENT> *** start direct submission checkbox *** <?/MICOMMENT>

             <input id="xpatselJtypeDirect" name="xpatsel_jtypeDirect" type="checkbox" value="checked"
                    <?MIVAR> $(IF,$(AND,$(XST,$xpatsel_jtypeDirect),$(EC,$xpatsel_jtypeDirect,checked)),checked="checked") <?/MIVAR> > 
             <label for="xpatselJtypeDirect">Show direct submission data</label>

             <?MICOMMENT> *** end direct submission checbkox *** <?/MICOMMENT>

             <br> 

             <?MICOMMENT> *** start published checkbox *** <?/MICOMMENT>

             
             <input id="xpatselJtypePublished" name="xpatsel_jtypePublished" type="checkbox" value="checked"
                    <?MIVAR> $(IF,$(AND,$(XST,$xpatsel_jtypePublished),$(EC,$xpatsel_jtypePublished,checked)),checked="checked") <?/MIVAR> > 
             <label for="xpatselJtypePublished">Show published literature</label>

             <?MICOMMENT> *** end published checkbox *** <?/MICOMMENT>

             </div> <?MICOMMENT> ** end jtype box div ** <?/MICOMMENT>

            <?MICOMMENT> ** start recent xpats ** <?/MICOMMENT>

            <?MIVAR>
            <label for="xpatselRecentRecords">Added in last </label>
            <input name="xpatsel_recentRecords" id="xpatselRecentRecords" size="3" $(IF,$(XST,$xpatsel_recentRecords),value='$xpatsel_recentRecords')>
            <?/MIVAR>
            <label for="xpatselRecentRecords">days</label>

            
            <?MICOMMENT> ** end recent xpats ** <?/MICOMMENT>
            <br> 

            <?MIVAR>
               <input type="text" id="xpatselWinsize" 
                      name="WINSIZE" size="3" 
                  onChange='document.critform.START.value = "";' $(IF,$(XST,$WINSIZE),value='$WINSIZE',value="25")>
            <?/MIVAR>


            <label for="xpatselWinsize"> results per page </label>

	    <?MIBLOCK COND="$(AND,$(NOT,$(ISNULL,$WINSIZE)),$(XST,$WINSIZE))">
	      <?MIVAR> 
	        <SCRIPT> 
  		  document.critform.WINSIZE.value = "$WINSIZE" 
	        </SCRIPT>
	      <?/MIVAR> 
	    <?/MIBLOCK> 

          </fieldset>

        </td>
      </TR>

      <tr>
	<td colspan=3 bgcolor=<!--|SIDEBAR_COLOR|--> align=right> 

          <input name="xpatsel_calledBySelf" type="hidden" value="true">
	
	  <input accesskey="s" type="button" value="Search" onClick="call_submit();">
	  <input type="button" value="Reset" onClick="call_reset();">

        </td>
      </tr>
    </table>
  </form>
<?/MIBLOCK> <!--*** end nxst pubId -->
<?MICOMMENT>
<SCRIPT LANGUAGE="JavaScript1.1">
  function keyDown(DnEvents) { 

     t = (navigator.appName == "Netscape") ? DnEvents.target : window.event.formElement.formElement;
     alert('formElement: ' + t);
     if (t != document.critform.TA_selected_structures) {
       k = (navigator.appName == "Netscape") ? DnEvents.which : window.event.keyCode;
       if (k == 13 ) { 
         call_submit();
       }
     }
  }
document.onkeydown = keyDown; 
if (navigator.appName == "Netscape") document.captureEvents(Event.KEYDOWN|Event.KEYUP);
</SCRIPT>
<?/MICOMMENT>

<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>
