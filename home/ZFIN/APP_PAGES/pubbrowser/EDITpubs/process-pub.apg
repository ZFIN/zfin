<?MICOMMENT>
***
FILE: process-pub.html
PREFIX: procpub_

This file processes a publication that has been submitted from edit_pub.html.
If it is a new pub, then OID should be set to "new", else it is set to the 
zdb_id of the pub to update. In the former case, we need to generate and 
insert a new pub record into PUBLICATION, with the proper pub_jrnl_zdb_id. 
Then (both cases) we just update the pub in question with any new values passed in.

modified to support I.E.  could no longer user history.go(-2) in process-pub 
so need to pass variables around to recreate pub select list when finished 
processing. in conjucntion with edit_pub

INPUT VARS:
OID - the zdb_id of the record to update, or a zdb-new- id.

OUTPUT VARS:

OUTPUT:
***
<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>

<?/MIERROR>


<?MICOMMENT>
  *** 
  if calling page is edit_pub
  First make sure the critical fields are there
  ***
<?/MICOMMENT>

<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-secure_navigation.apg';">$1<?/MISQL>

<?MIBLOCK COND="$(NXST,$link_authors)">

  <?MIBLOCK COND="$(OR,$(NXST,$q_title),$(NXST,$q_authors),$(NXST,$q_pub_date),$(NXST,$editpub_jrnl_abbrev),$(NXST,$q_num_auths))">
    <center>
    <big> Insufficient information: Every publication is <b>REQUIRED</b> to have at least a title,authors,date, and journal abbreviation specified to make an entry</big>. Please go back and try again.
    </center>
  <?/MIBLOCK>

    <?MICOMMENT> *** Looking good. Now just fix up the entries and 
	create the record *** 
    <?/MICOMMENT>

    <?MIBLOCK COND="$(AND,$(XST,$q_title),$(XST,$q_authors),$(XST,$q_pub_date),$(XST,$editpub_jrnl_abbrev),$(XST,$q_num_auths))">

    <?MICOMMENT> 
      ***
      do a search when returning to publication page
      Double check input for apostrophes; fix em where found 
      ***
    <?/MICOMMENT>
	
    <?MIVAR NAME=$q_title>$(REPLACE,$q_title,','')<?/MIVAR>
    <?MIVAR NAME=$q_authors>$(REPLACE,$q_authors,','')<?/MIVAR>
    <?MIVAR NAME=$editpub_jrnl_abbrev>$(REPLACE,$editpub_jrnl_abbrev,','')<?/MIVAR>

    <?MIVAR COND="$(XST,$q_keywords)" NAME=$q_keywords>$(REPLACE,$q_keywords,','')<?/MIVAR>
    <?MIVAR COND="$(XST,$q_pub_abstract)" NAME=$q_pub_abstract>$(REPLACE,$q_pub_abstract,','')<?/MIVAR>
    <?MIVAR COND="$(XST,$q_pub_errata_and_notes)" NAME=$q_pub_errata_and_notes>$(REPLACE,$q_pub_errata_and_notes,','')<?/MIVAR>


    <?MICOMMENT> *** If you're creating new PUB record,create and 
	insert a blank record for it.  Stop search on return becuase 
	values are empty. *** 
    <?/MICOMMENT>

    <?MIBLOCK COND="$(EC,$OID,new)">
      <?MISQL SQL="execute function get_id('PUB');"><?/MISQL>
      <?MIVAR NAME=$new>true<?/MIVAR>
      <?MIVAR NAME=$OID>$1<?/MIVAR>

      <?MICOMMENT> *** Get the journal zdb_id based 
		on the journal abbreviation ***
      <?/MICOMMENT> 

      <?MISQL SQL="select jrnl_zdb_id
			from journal
        		where jrnl_abbrev = '$editpub_jrnl_abbrev'">
      <?/MISQL>

      <?MIVAR NAME=$procpub_jrnl_zdb_id>$1<?/MIVAR>

      <?MISQL SQL="insert into zdb_active_source (zactvs_zdb_id) values ('$OID');"><?/MISQL>
      <?MISQL SQL="insert into  publication (zdb_id,
					title,
					authors,
					pubmed_authors,
					pub_jrnl_zdb_id,
					pub_date,
					owner,
					entry_time,
					jtype) 
			values ('$OID',
				'temp',
				'temp',
				'Non-PubMed entry',
				'$procpub_jrnl_zdb_id',
				'01/01/1900'::date,
				'root',current,
				'Unknown');"><?/MISQL>
    <?MIELSE>
    
      <?MICOMMENT> 
	***
        If it's not new, this is an update. Updates to tables are kept 
	track of in the updates table. 
        Rather than individually check variables, use the system 
	tables to generically check each column.
	***
      <?/MICOMMENT> 
      
      <?MIVAR NAME=column_name><?/MIVAR>
      <?MIVAR NAME=column_value><?/MIVAR>
      
      <?MISQL SQL="
        select col.colno, col.colname
        from syscolumns col, systables tab 
        where tab.tabname = 'publication'
          and tab.tabid = col.tabid;">
      
        <?MIVAR>$(SETVAR,$column_name[$1],$2)<?/MIVAR>
      <?/MISQL>
        
      <?MIBLOCK INDEX=$i FROM=1 TO=$(-,$(VECSIZE,$column_name),1) STEP=1>
        <?MISQL SQL="
          select $column_name[$i]
          from publication
          where zdb_id = '$OID';">

	  <?MICOMMENT> *** deal with apostrophes *** <?/MICOMMENT>

          <?MIVAR NAME=$procpub_columnValue>$(REPLACE,$1,','')<?/MIVAR>
          <?MIVAR>$(SETVAR,$column_value[$i],$procpub_columnValue)<?/MIVAR>
        <?/MISQL>
      <?/MIBLOCK>
    <?/MIBLOCK>

    <?MICOMMENT> 
      ***
      Now update the record with new info. Try to do it all in one insert! 
      Get the journal zdb_id based on the journal abbreviation before update. 
      ***
    <?/MICOMMENT> 

      <?MISQL SQL="select jrnl_zdb_id
			from journal
        		where jrnl_abbrev = '$editpub_jrnl_abbrev'">
      <?/MISQL>

      <?MIVAR NAME=$procpub_jrnl_zdb_id>$1<?/MIVAR>


    <?MIVAR NAME=$setvalues>set title='$q_title',jtype='$q_jtype',authors='$q_authors',pub_date='$q_pub_date'::date,status='$q_status',num_auths='$q_num_auths', pub_jrnl_zdb_id = '$procpub_jrnl_zdb_id'<?/MIVAR>
    <?MIVAR COND=$(XST,$q_keywords) NAME=$setvalues>$setvalues,keywords='$q_keywords'<?/MIVAR>
    <?MIVAR COND=$(XST,$q_pub_abstract) NAME=$setvalues>$setvalues,pub_abstract='$q_pub_abstract'<?/MIVAR>
    <?MIVAR COND=$(XST,$q_accession_no) NAME=$setvalues>$setvalues,accession_no='$q_accession_no'<?/MIVAR>
    <?MIVAR COND=$(XST,$editpub_pub_volume) NAME=$setvalues>$setvalues,pub_volume='$editpub_pub_volume'<?/MIVAR>
     <?MIVAR COND=$(XST,$editpub_pub_pages) NAME=$setvalues>$setvalues,pub_pages='$editpub_pub_pages'<?/MIVAR>
<?MIVAR COND=$(XST,$procp) NAME=$setvalues>$setvalues,pub_errata_and_notes='$q_pub_errata_and_notes'<?/MIVAR>

    <?MICOMMENT> *** OKAY, now just do the update! *** <?/MICOMMENT>

    <?MISQL SQL="update publication $setvalues where zdb_id='$OID';"><?/MISQL>

    <?MIBLOCK COND="$(NXST,$new)">
    <?MIBLOCK INDEX=$i FROM=1 TO=$(-,$(VECSIZE,$column_name),1) STEP=1>
      <?MISQL SQL="
        select $column_name[$i]
        from publication
        where zdb_id = '$OID';">
              
	<?MICOMMENT> *** deal with apostrophes *** <?/MICOMMENT>
	<?MIVAR NAME=$procpub_columnValue>$(REPLACE,$1,','')<?/MIVAR>
        <?MIVAR COND="$(NC,$column_value[$i],$procpub_columnValue)">
          <?MISQL SQL="
            insert into updates
                (submitter_id,submitter_name, rec_id, field_name, old_value, new_value, comments, when) 
              values 
                ('$ZDB_ident', '$ZDB_name', '$OID', '$column_name[$i]', 
                '$column_value[$i]', '$procpub_columnValue', 'process-pub.apg', 
		current);">
          <?/MISQL>
        <?/MIVAR>
      <?/MISQL>
    <?/MIBLOCK>    
    <?/MIBLOCK>

  <?/MIBLOCK>
<?/MIBLOCK>

  <?MICOMMENT> *** Now to process curation comment 
	from link_authors *** 
  <?/MICOMMENT>
  <?MIBLOCK COND="$(XST,$link_authors)">
  
    <?MICOMMENT> *** Close Linked Authors *** <?/MICOMMENT>
    <?MIVAR NAME=Linked_Authors>Linked Authors<?/MIVAR>
    <?MISQL SQL="select WebExplode(object,'pubtopclose_PUB=$OID&pubtopclose_CUR=$ZDB_ident&pubtopclose_TOP=$Linked_Authors') from webPages where ID='aa-pubtopic_close.apg';">$1<?/MISQL>
    <?MISQL SQL="select WebExplode(object,'pubtopfnd_PUB=$OID&pubtopfnd_CUR=$ZDB_ident&pubtopfnd_TOP=$Linked_Authors&pubtopfnd_DATA=t') from webPages where ID='aa-curdatafound.apg';">$1<?/MISQL>
    
    <?MIBLOCK COND="$(XST,$new_comments)">

    <?MICOMMENT> *** Create Note *** <?/MICOMMENT>

      <?MIVAR NAME=encoded_note>$(URLENCODE,$new_comments)<?/MIVAR>
      <?MISQL SQL="select WebExplode(object,'pnotenew_PUB=$OID&pnotenew_CUR=$ZDB_ident&pnotenew_NOTE=$encoded_note') from webPages where ID='aa-pnote_new.apg';">$1<?/MISQL>
    <?/MIBLOCK>
   
    <?MIBLOCK COND=$(XST,$linkauth_pub_file)>
      <?MISQL SQL="UPDATE publication SET pub_file = NULL WHERE zdb_id = '$OID';"><?/MISQL>
      <?MISQL SQL="UPDATE publication SET pub_file = FILETOBLOB('$linkauth_pub_file', 'client') WHERE zdb_id = '$OID';"><?/MISQL>
    <?/MIBLOCK>
  <?/MIBLOCK>


<?MIVAR NAME=$returnVariables>MIval=aa-pubselect2.apg&query_results=true<?/MIVAR>

<?MIVAR NAME=$returnVariables COND="$(XST,$START)">$returnVariables&START=$START<?/MIVAR>
<?MIVAR NAME=$returnVariables COND="$(XST,$WINSIZE)">$returnVariables&WINSIZE=$WINSIZE<?/MIVAR>

<?MICOMMENT> 
     ***
     if editing an existing or creating a new record and passing values,
     determine which variables exist, concatonate
     ***
<?/MICOMMENT>

  <?MIBLOCK COND="$(NXST,$new)">
    <?MIVAR NAME=$returnVariables COND="$(XST,$authors)">$returnVariables&authors=$(URLENCODE,$authors)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$title)">$returnVariables&title=$(URLENCODE,$title)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$anon1text)">$returnVariables&anon1text=$(URLENCODE,$anon1text)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$authtype)">$returnVariables&authtype=$authtype<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$anon1)">$returnVariables&anon1=$anon1<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$jtype)">$returnVariables&jtype=$jtype<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$yr_cmpr)">$returnVariables&yr_cmpr=$(URLENCODE,$yr_cmpr)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$century)">$returnVariables&century=$century<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$year)">$returnVariables&year=$year<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$order_pref)">$returnVariables&order_pref=$order_pref<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$cur_status)">$returnVariables&cur_status=$cur_status<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$pub_status)">$returnVariables&pub_status=$pub_status<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$curator)">$returnVariables&curator=$curator<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$cur_topic)">$returnVariables&cur_topic=$cur_topic<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$data_found)">$returnVariables&data_found=$data_found<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$Tday)">$returnVariables&Tday=$Tday<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$Tmonth)">$returnVariables&Tmonth=$Tmonth<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$Tyear)">$returnVariables&Tyear=$Tyear<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$Fday)">$returnVariables&Fday=$Fday<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$Fmonth)">$returnVariables&Fmonth=$Fmonth<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$Fyear)">$returnVariables&Fyear=$Fyear<?/MIVAR>
    <?MIELSE>  <?MICOMMENT> *** use new pub variables *** <?/MICOMMENT>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_authors)">$returnVariables&authors=$(URLENCODE,$q_authors)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_title)">$returnVariables&title=$(URLENCODE,$q_title)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_anon1text)">$returnVariables&anon1text=$(URLENCODE,$q_anon1text)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_authtype)">$returnVariables&authtype=$q_authtype<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_anon1)">$returnVariables&anon1=$q_anon1<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_jtype)">$returnVariables&jtype=$q_jtype<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_yr_cmpr)">$returnVariables&yr_cmpr=$(URLENCODE,$q_yr_cmpr)<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_century)">$returnVariables&century=$q_century<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_year)">$returnVariables&year=$q_year<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_order_pref)">$returnVariables&order_pref=$q_order_pref<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_cur_status)">$returnVariables&cur_status=$q_cur_status<?/MIVAR>
    <?MIVAR NAME=$returnVariables COND="$(XST,$q_pub_status)">$returnVariables&pub_status=$q_pub_status<?/MIVAR>
  <?/MIBLOCK>

<?MICOMMENT> *** jump back to the previous window *** <?/MICOMMENT>

<SCRIPT>
  <?MIVAR>
    window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$returnVariables');
  <?/MIVAR>
</SCRIPT>

