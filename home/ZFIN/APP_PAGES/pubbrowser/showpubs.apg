<!-- FILE: SHOWPUBS.HTML -->

<!-- Within the viewers for all of the data types, you always want to do the same thing when it comes to pubs. This file factors out the commonality; everything just webexplodes this file. It assumes the existence of OID, which should be the zdb_id of the data record that you want the pubs for.ECK 8/30/97. Added sensitivity to UPDATE flag: If UPDATE exists, it tosses up a "Delete" button next to each pub. And added a "Add pub" to both primary and secondary pubs. THESE ASSUME THE EXISTENCE OF "Delete-listitem"  and "doit" functions (see fishview for example) in the viewing page! Obviously these functions should be connected to the "do-<class>update" script.

OID  -- the zdb_id of the rec
rtype -- return type,decide the return page,
         especially useful since different attributed items
         of one OID also use this file
title  --
name   --
abbrev -- for title display

orgOID -- OID for a gene, or fish or locus... record when
         OID is used for some specific item like 'DALIAS'
info  -- column name for colattrib itme.
pubOrder -- the column # to order results by (must be a number because of 'union')
        
-->

<HTML>
<HEAD>

<?MIBLOCK COND="$(NXST,$OID)">
<p>
ERROR -- something bad happened -- no OID passed in!
<?/MIBLOCK>
	
<?MIVAR COND="$(NXST,$rtype)" NAME=$rtype><?/MIVAR>
<?MIVAR COND="$(NXST,$title)" NAME=$title><?/MIVAR>
<?MIVAR COND="$(NXST,$name)" NAME=$name><?/MIVAR>
<?MIVAR COND="$(NXST,$abbrev)" NAME=$abbrev><?/MIVAR>

<?MIVAR COND="$(NXST,$orgOID)" NAME=$orgOID>$OID<?/MIVAR>
<?MIVAR COND="$(NXST,$info)" NAME=$info><?/MIVAR>
<?MIVAR COND="$(NXST,$pubOrder)" NAME=$pubOrder>6<?/MIVAR>

<?MIVAR COND="$(NXST,$add_cit_count)" NAME=$add_cit_count>0<?/MIVAR>

<?MIVAR COND="$(NXST,$return_page1)" NAME=$return_page1><?/MIVAR>
<?MIVAR COND="$(NXST,$return_page2)" NAME=$return_page2><?/MIVAR>
<?MIVAR COND="$(NXST,$target_table)" NAME=$target_table><?/MIVAR>

<?MIVAR COND="$(NXST,$related_data_attrib_to_OID)" NAME=$related_data_attrib_to_OID><?/MIVAR>

<?MIVAR>
$(IF,$(>,$(POSITION,$rtype,marker),0),
      $(SETVAR,$return_page1,aa-markerupdate.apg)
      $(SETVAR,$return_page2,aa-do-markerupdate.apg)
      $(SETVAR,$target_table,marker)
      )

$(IF,$(>,$(POSITION,$rtype,fish),0),
      $(SETVAR,$return_page1,aa-fishupdate.apg)
      $(SETVAR,$return_page2,aa-do-fishupdate.apg)
      $(SETVAR,$target_table,"")
      )

$(IF,$(>,$(POSITION,$OID,XPAT),0),
      $(SETVAR,$return_page1,aa-xpatupdatePubs.apg)
      $(SETVAR,$return_page2,aa-do-xpatupdatePubs.apg)
      $(SETVAR,$target_table,expression_pattern)
      )

$(IF,$(>,$(POSITION,$OID,IMAGE),0),
       $(SETVAR,$return_page1,aa-imageupdate.apg)
       $(SETVAR,$return_page2,aa-do-imageupdate.apg)
       $(SETVAR,$target_table,"")
       )

$(IF,$(>,$(POSITION,$rtype,locus),0),
       $(SETVAR,$return_page1,aa-locusupdate.apg)
       $(SETVAR,$return_page2,aa-do-locusupdate.apg)
       $(SETVAR,$target_table,"")
       )

$(IF,$(>,$(POSITION,$rtype,go),0),
       $(SETVAR,$return_page1,aa-markergoview.apg)
       $(SETVAR,$return_page2,aa-do-markergoedit.apg)
       $(SETVAR,$target_table,"")
       )


<?/MIVAR>


  <SCRIPT>
    <?MIVAR>
    
      function doit(attr,attr_type,print_name) {
        window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=$return_page1&OID=$orgOID&dataOID=$OID&attr='+attr+'&attr_type='+attr_type+'&print_name='+print_name+'&target_table=$target_table');
      }

      function Delete_listitem(item_name,item_id,info) {
        window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=$return_page2&OID=$orgOID&dataOID=$OID&attr='+item_name+'&attr_type=special-listitem&old_value='+item_id+'&new_value=deleted&target_table=$target_table&info=$info');
      }
  
      function result_order(pubOrder,total_count,count_of_real_pub,evidence)
      {
        var url = '/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-showpubs.apg&OID=$OID&rtype=$rtype&name=$(URLENCODE,$name)&abbrev=$abbrev&title=$(URLENCODE,$title)&total_count='+total_count+'&count_of_real_pub='+count_of_real_pub+'&pubOrder='+pubOrder+'&evidence='+evidence;
        $(IF,$(XST,$UPDATE),url += '&UPDATE=1';)
    
        location.replace(url);
      }  

   <?/MIVAR> 
 </SCRIPT>
</HEAD>

<?MIVAR NAME=$userid>GUEST<?/MIVAR>

<!--------------------------------------------->

  <?MIBLOCK COND="$(XST,$UPDATE)">
        <?MIVAR>
       		<TITLE>Update Publication list </TITLE>
       	<?/MIVAR>
  <?MIELSE>
        <?MIVAR>
      		<TITLE>ZFIN Publication list </TITLE>
    	<?/MIVAR>
  <?/MIBLOCK>

  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>
  
  <?MISQL COND="$(NXST,$UPDATE)" SQL="select WebExplode(object,'rtype=$rtype') from webPages where ID='aa-data_mgr.apg';">$1<?/MISQL>
  <!--?MISQL COND="$(AND,$(NXST,$UPDATE),$(XST,$attribtype))" SQL="select WebExplode(object,'rtype=$rtype','attribtype=$attribtype','info=$info') from webPages where ID='aa-data_mgr.apg';"$1?/MISQL-->
	

<?MIVAR COND="$(XST,$UPDATE)">
        <form>
	<center><font size=+2><input type=button 
	value=" DONE UPDATING. Back to Viewing! " onClick="document.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-showpubs.apg&OID=$orgOID&dataOID=$OID&rtype=$rtype&title=$(URLENCODE,$title)&name=$(URLENCODE,$name)&abbrev=$abbrev$(IF,$(XST,$total_count),&total_count=$total_count)$(IF,$(XST,$count_of_real_pub),&count_of_real_pub=$count_of_real_pub)')"> </font></center>

       </form>
<?/MIVAR>



<?MIVAR NAME=OID_of_nongene_or_related_data_has_recattrib>
  (  recattrib_data_zdb_id = '$OID'
   or
     $related_data_attrib_to_OID
  )
<?/MIVAR>


<?MIVAR NAME=OID_of_gene_or_related_data_has_recattrib>
  (  recattrib_data_zdb_id = '$OID'
   or
     recattrib_data_zdb_id in (select mrel_mrkr_2_zdb_id from marker_relationship where mrel_mrkr_1_zdb_id = '$OID')
   or
     recattrib_data_zdb_id in (select mrel_mrkr_1_zdb_id from marker_relationship where mrel_mrkr_2_zdb_id = '$OID')
   or
     $related_data_attrib_to_OID
  )
<?/MIVAR>
  <?MIVAR NAME=related_data_attrib_to_OID>
      recattrib_data_zdb_id in (select mrel_zdb_id from marker_relationship where mrel_mrkr_2_zdb_id = '$OID')
    or
      recattrib_data_zdb_id in (select mrel_zdb_id from marker_relationship where mrel_mrkr_1_zdb_id = '$OID')
    or
      recattrib_data_zdb_id in (select dalias_zdb_id from data_alias where dalias_data_zdb_id = '$OID')
    or
      recattrib_data_zdb_id in (select dblink_zdb_id from db_link where linked_recid = '$OID')
    or
      recattrib_data_zdb_id in (select oevdisp_zdb_id from orthologue_evidence_display where oevdisp_gene_zdb_id = '$OID')    or
     recattrib_data_zdb_id in (select mrkrgoev_zdb_id from marker_go_term_evidence,marker_go_term  where mrkrgo_mrkr_zdb_id = '$OID' and mrkrgo_zdb_id = mrkrgoev_mrkrgo_zdb_id)
   <?/MIVAR>

<TABLE width=100%><TR><TD bgcolor=#ccccccc>
<font size=+2><b>CITATIONS</b></font>
<!-- want to include pubs associated with alleles of the locus and with locus itself -->
<?MICOMMENT> marker, locus and fish page will pass along total_count. Only for the attribution list, need to recalculate the pubs for the data items. <?/MICOMMENT>

<?MIBLOCK COND="$(XST,$total_count)">
   <?MIVAR>($total_count total)<?/MIVAR>
<?MIELSE>

  <?MIBLOCK COND="$(NXST,$attribtype)">
    <?MIBLOCK COND="$(>,$(POSITION,$OID,MRKRGO),0)">
      <?MISQL SQL="select count(distinct recattrib_source_zdb_id) from record_attribution, marker_go_term,marker_go_term_evidence where mrkrgoev_mrkrgo_zdb_id='$OID' and mrkrgoev_zdb_id=recattrib_data_zdb_id and mrkrgoev_evidence_code='$evidence';">
     ($(FIX,$1) total) 
    <?/MISQL>
   <?MIELSE>	
    <?MISQL SQL="
      select count(distinct recattrib_source_zdb_id) 
        from record_attribution
       where (recattrib_data_zdb_id = '$OID'
          or $related_data_attrib_to_OID)
         and get_obj_type(recattrib_source_zdb_id) = 'PUB';
      ">
     ($(FIX,$1) total) 
    <?/MISQL>	
  <?/MIBLOCK>


  <?MIELSE COND="$(EC,$attribtype,colattrib)">
    <?MISQL SQL="
      select count(*) 
        from column_attribution
       where colattrib_data_zdb_id = '$OID'
         and colattrib_column_name = '$info'	
         and get_obj_type(colattrib_source_zdb_id) = 'PUB';
       ">
      ($(FIX,$1) total) 
   <?/MISQL>
  <?/MIBLOCK>
<?/MIBLOCK>
</TD></TR></TABLE>
<p>

<form>
<!------------- Title display------------>
<font size=+1><b>
  <?MIVAR COND="$(NC,$title,)">$title: &nbsp;<?/MIVAR>
  <?MIVAR COND="$(NC,$name,)">
  $(IF,$(OR,$(>,$(POSITION,$OID,OEVDISP),0),$(>,$(POSITION,$OID,GENE),0)),<i>$name</i>,$name)
   <br>
  <?/MIVAR>

  <?MIBLOCK COND="$(AND,$(NC,$abbrev,),$(NC,$abbrev,''))">
	<?MIVAR>
	$(IF,$(OR,$(>,$(POSITION,$OID,GENE),0),$(>,$(POSITION,$OID,OEVDISP),0)),"Gene Symbol:&nbsp;","Abbreviation:&nbsp;")
	$(IF,$(OR,$(>,$(POSITION,$OID,GENE),0),$(>,$(POSITION,$OID,OEVDISP),0)),<i>$abbrev</i>,$abbrev)	
	<?/MIVAR><br>
  <?/MIBLOCK>
</b></font>	

<?MIVAR>
    <?MIVAR COND="$(NXST,$total_count)" NAME=$total_count><?/MIVAR>
    <?MIVAR COND="$(NXST,$count_of_real_pub)" NAME=$count_of_real_pub>-9<?/MIVAR>
    <?MIVAR COND="$(NXST,$evidence)" NAME=$evidence><?/MIVAR>

    <input type=button name=resultOrder onClick="result_order($(IF,$(EC,$pubOrder,6),'7 desc','6'),'$total_count','$count_of_real_pub','$evidence')"
           value="$(IF,$(EC,$pubOrder,6),Order By Date,Order By Author)"> 
<?/MIVAR>		
<!--------------------------------------------------------------------------->


<?MIVAR COND="$(XST,$UPDATE)">
  <INPUT TYPE=button value="Add Publication" onClick="doit('rel_pub','selection','Add')"> 
  <?MIBLOCK COND="$(AND,$(NXST,$attribtype),$(>,$(POSITION,$OID,LOCUS),0))">
   <b> Please use the individual  <?MIVAR><A HREF='/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-locusview.apg&OID=$OID#allele'>allele</A><?/MIVAR> record to enter allele-specific publications.</b>
   <br>
  <?/MIBLOCK>
<?/MIVAR> 


<TABLE>

<?MIBLOCK COND="$(=,$count_of_real_pub,-9)">
  <?MIVAR NAME=$count_of_real_pub>0<?/MIVAR>
  <?MISQL COND="$(>,$(POSITION,$OID,LOCUS),0)" SQL="
		select count(distinct recattrib_source_zdb_id) 
	 	  from fish f, locus l, record_attribution, publication p
	 	 where l.zdb_id = '$OID'
		   and f.locus = l.zdb_id 
		   and f.zdb_id = recattrib_data_zdb_id
		   and recattrib_source_zdb_id = p.zdb_id 
                   and jtype not in ('Curation', 'Unpublished')
		;">
	<?MIVAR>$(SETVAR,$count_of_real_pub,$1)<?/MIVAR>
  <?/MISQL>	
    	
  <?MISQL SQL="
    select count(distinct recattrib_source_zdb_id)::integer
      from record_attribution, publication
     where recattrib_data_zdb_id = '$OID' 
       and recattrib_source_zdb_id = zdb_id
       and jtype not in ('Curation', 'Unpublished');
    ">
    <?MIVAR>$(SETVAR,$count_of_real_pub,$(+,$1,$count_of_real_pub))<?/MIVAR>
  <?/MISQL>
<?/MIBLOCK>


<?MIVAR COND="$(>,$count_of_real_pub,0)">
   <TR><TD><b>Publications  ($(FIX,$count_of_real_pub)): </b></TD></TR>
<?/MIVAR>

<?MIBLOCK COND="$(NXST,$attribtype)">
	
    <?MIBLOCK COND="$(>,$(POSITION,$OID,LOCUS),0)">

    <!-- want to include pubs for alleles associated with locus and locus itself -->
      <?MISQL SQL="
  	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f, record_attribution,publication p
	 	 where f.locus = '$OID'
		   and recattrib_data_zdb_id = '$OID'
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
	    UNION
  	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f, record_attribution,publication p
	 	 where f.locus = '$OID'
		   and recattrib_data_zdb_id = f.fish_id
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
	    UNION
  	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f, record_attribution,publication p
	 	 where f.locus = '$OID'
		   and recattrib_data_zdb_id = f.alt_zdb_id
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
            UNION		 
	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f, data_alias, record_attribution, publication p
	 	 where f.locus = '$OID'
		   and dalias_data_zdb_id = f.locus
		   and dalias_zdb_id = recattrib_data_zdb_id
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
            UNION		 
	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f, data_alias, record_attribution, publication p
	 	 where f.locus = '$OID'
		   and dalias_data_zdb_id = f.alt_zdb_id
		   and dalias_zdb_id = recattrib_data_zdb_id
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
            UNION		 
	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f, data_alias, record_attribution, publication p
	 	 where f.locus = '$OID'
		   and dalias_data_zdb_id = f.fish_id
		   and dalias_zdb_id = recattrib_data_zdb_id
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
	    UNION		 
	 select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f,column_attribution,publication p
	 	 where f.locus = '$OID'
		   and colattrib_data_zdb_id = f.locus	
    		   and colattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
	    UNION		 
	 select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f,column_attribution,publication p
	 	 where f.locus = '$OID'
		   and colattrib_data_zdb_id = f.fish_id	
    		   and colattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
	    UNION		 
	 select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
	 	  from fish_search f,column_attribution,publication p
	 	 where f.locus = '$OID'
		   and colattrib_data_zdb_id = f.alt_zdb_id	
    		   and colattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
    	order by $pubOrder;">
  	$(IF,$(XST,$UPDATE),"<TD><font size=-1><input type=button value=delete onClick=Delete_listitem('publication','"$2"')></font></TD>")
  	<TR>
    	<TD align=left>
      	<DIV class="show_pubs">
		<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$2">$4 ($3) $1. $5.</A>
        </DIV>
    	</TD>
  	</TR>
  	<TR></TR><TR></TR>
      <?/MISQL> 
     <?/MIBLOCK>

   <?MIBLOCK COND="$(AND,$(=,$(POSITION,$OID,LOCUS),0),$(=,$(POSITION,$OID,FISH),0))">
    <?MISQL SQL="
      select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
      from record_attribution, publication p
      where recattrib_data_zdb_id = '$OID'
        and recattrib_source_zdb_id = p.zdb_id 
        and p.jtype not in ('Curation','Unpublished')
 	UNION		 
	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
	 	  from record_attribution, publication p, locus l
	 	 where l.cloned_gene = '$OID'
		   and l.zdb_id = recattrib_data_zdb_id
    		   and recattrib_source_zdb_id = p.zdb_id
     		   and p.jtype not in ('Curation', 'Unpublished')
      order by $pubOrder;">
      $(IF,$(XST,$UPDATE),"<TD><font size=-1><input type=button value=delete onClick=Delete_listitem('publication','"$2"')></font></TD>")
      <TR>
      <TD align=left>
      <DIV class="show_pubs">
	<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$2">$4 ($3) $1. $5.</A>
      </DIV>
      </TD>
     </TR>
     <TR></TR><TR></TR>
    <?/MISQL>
  <?/MIBLOCK>

  <?MIBLOCK COND="$(>,$(POSITION,$OID,FISH),0)">
    <?MISQL SQL="
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
      from fish_search f, record_attribution, publication p
	where  f.fish_id = '$OID'
	   and recattrib_data_zdb_id  = f.fish_id
    	   and recattrib_source_zdb_id = p.zdb_id
     	   and p.jtype not in ('Curation', 'Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
      from fish_search f, record_attribution, publication p
	where  f.fish_id = '$OID'
	   and recattrib_data_zdb_id  = f.alt_zdb_id
    	   and recattrib_source_zdb_id = p.zdb_id
     	   and p.jtype not in ('Curation', 'Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
	from fish_search f,data_alias,record_attribution,publication p 
	  where f.fish_id = '$OID'
	    and dalias_data_zdb_id  = f.fish_id
	    and recattrib_data_zdb_id = dalias_zdb_id 
    	    and recattrib_source_zdb_id = p.zdb_id
            and p.jtype not in ('Curation', 'Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
	from fish_search f,data_alias,record_attribution,publication p 
	  where f.fish_id = '$OID'
	    and dalias_data_zdb_id  = f.locus
	    and recattrib_data_zdb_id = dalias_zdb_id 
    	    and recattrib_source_zdb_id = p.zdb_id
            and p.jtype not in ('Curation', 'Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
	from fish_search f,data_alias,record_attribution,publication p 
	  where f.fish_id = '$OID'
	    and dalias_data_zdb_id  = f.alt_zdb_id
	    and recattrib_data_zdb_id = dalias_zdb_id 
    	    and recattrib_source_zdb_id = p.zdb_id
            and p.jtype not in ('Curation', 'Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
 	    from fish_search f,column_attribution,publication p
  	      where f.fish_id = '$OID'
		and colattrib_data_zdb_id = f.fish_id
    		and colattrib_source_zdb_id = p.zdb_id
		and p.jtype not in ('Curation','Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
 	    from fish_search f,column_attribution,publication p
  	      where f.fish_id = '$OID'
		and colattrib_data_zdb_id = f.alt_zdb_id
    		and colattrib_source_zdb_id = p.zdb_id
		and p.jtype not in ('Curation','Unpublished')
    UNION
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
 	    from fish_search f,column_attribution,publication p
  	      where f.fish_id = '$OID'
		and colattrib_data_zdb_id = f.locus
    		and colattrib_source_zdb_id = p.zdb_id
		and p.jtype not in ('Curation','Unpublished')
      order by $pubOrder;">
      $(IF,$(XST,$UPDATE),"<TD><font size=-1><input type=button value=delete onClick=Delete_listitem('publication','"$2"')></font></TD>")
      <TR>
      <TD align=left>
      <DIV class="show_pubs">
	<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$2">$4 ($3) $1. $5.</A>
      </DIV>
      </TD>
     </TR>
     <TR></TR><TR></TR>
    <?/MISQL>
   <?/MIBLOCK>

    <?MIBLOCK COND="$(>,$(POSITION,$OID,MRKRGO),0)">
      <?MISQL SQL="
  	select distinct title, p.zdb_id, year(pub_date) as pyear, authors, source, 
	 	lower(authors), pub_date
   	  from record_attribution, publication p, marker_go_term_evidence
     	 where mrkrgoev_mrkrgo_zdb_id='$OID'
	   and mrkrgoev_zdb_id=recattrib_data_zdb_id
      	   and recattrib_source_zdb_id = p.zdb_id and mrkrgoev_evidence_code='$evidence';">

  	<TR>
    	<TD align=left>
      	<DIV class="show_pubs">
		<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$2">$4 ($3) $1. $5.</A>
        </DIV>
    	</TD>
  	</TR>
  	<TR></TR><TR></TR>
      <?/MISQL> 
    <?/MIBLOCK> 

  <TR><TD>&nbsp;</TD><TR>

  <?MISQL SQL="
    select count(distinct recattrib_source_zdb_id)::integer
    from record_attribution, publication
    where (recattrib_data_zdb_id = '$OID'
      or $related_data_attrib_to_OID)
      and recattrib_source_zdb_id = zdb_id 
      and jtype in ('Curation','Unpublished');">
     <?MIVAR NAME=add_cit_count>$1<?/MIVAR>
  <?/MISQL>

  <?MIBLOCK COND="$(>,$add_cit_count,0)">
   
   <?MIVAR COND="$(>,$count_of_real_pub,0)">
     <TR><TD><b>Additional Citations ($add_cit_count):</b></TD></TR>
   <?/MIVAR>
   <?MISQL SQL="
      select distinct title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date  
      from record_attribution, publication 
      where (recattrib_data_zdb_id = '$OID'
         or $related_data_attrib_to_OID)
        and recattrib_source_zdb_id = zdb_id 
        and jtype in ('Curation','Unpublished')
      order by $pubOrder;">
     $(IF,$(XST,$UPDATE),"<TD><font size=-1><input type=button value=delete onClick=Delete_listitem('publication','"$2"')></font></TD>")
     <TR>
      <TD align=left>
      <DIV class="show_pubs">
	<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$2">$4 ($3) $1. $5.</A>
      </DIV>
      </TD>
     </TR>
     <TR></TR><TR></TR>

   <?/MISQL>
  <?/MIBLOCK> <!-- add_cit_count > 0 -->


<?MIELSE COND="$(EC,$attribtype,colattrib)">
  <?MISQL SQL="
    select title, zdb_id, year(pub_date) as pyear, authors, source, 
	 lower(authors), pub_date
      from column_attribution, publication 
      where colattrib_data_zdb_id = '$OID'
        and colattrib_column_name = '$info'		
        and colattrib_source_zdb_id = zdb_id 
      order by $pubOrder;">
    $(IF,$(XST,$UPDATE),"<TD><font size=-1><input type=button value=delete onClick=Delete_listitem('colattrib','"$2"','"$info"')></font></TD>")
   <TR>
    <TD align=left>
      <DIV class="show_pubs">
	<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pubview2.apg&OID=$2">$4 ($3) $1. $5.</A>
      </DIV>
    </TD>
  </TR>
  <TR></TR><TR></TR>

 <?/MISQL>

<?/MIBLOCK> <!-- end of attribtype -->

</TABLE>

</form>

<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>

</HTML>

