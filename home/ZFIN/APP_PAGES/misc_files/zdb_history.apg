<?MICOMMENT> 

FILE:   zdb_history.apg
PREFIX: zdbhist_

This app-page checks for the existence of a given zdb_id in the 
zdb_replaced_data table.  If a record is found, the user is redirected 
to the new data.  The page should only be called when another page has
failed to find a record for the ZDB ID in that ZDB ID's home table.

INPUT VARS:
  OID       ZDB ID to check for in zdb_replaced_data

OUTPUT VARS:
  none.

OUTPUT:
  If ZDB ID exists in zdb_replaced_data then user has been redirected 
    to the view app page for that type of ZDB ID.
  If the ZDB ID does not exist in zdb_replaced_data then they are told that the 
    requested ID was not found in ZFIN.

EFFECTS:
  none.
  
<?/MICOMMENT>

<?MIVAR><TITLE> ZFIN record has changed</TITLE><?/MIVAR>

  <?MIBLOCK COND="$(XST,$OID)">

     <?MISQL SQL="
       select zrepld_new_zdb_id, zrepld_old_name  
         from zdb_replaced_data
         where zrepld_old_zdb_id ='$OID';">
       <?MIVAR NAME=$new_oid>$1<?/MIVAR>
       <?MIVAR NAME=$old_name>$2<?/MIVAR>

       <?MIBLOCK COND="$(=,$MI_CURRENTROW,1)">
            <font size=+1>
             <?MIVAR>
               <p>$(IF,$(NC,$old_name,null),The <B> $old_name </B> record,The item you have requested) has changed. 
             <?/MIVAR>
            </font>
	    <p>Please see:&nbsp;
       <?MIELSE>
           ,
       <?/MIBLOCK>

       <?MICOMMENT> Get object type of new OID and its app page<?/MICOMMENT>
       <?MISQL SQL="
         select zobjtype_name, zobjtype_app_page
           from zdb_object_type
           where zobjtype_name = get_obj_type('$new_oid');">
         <?MIVAR NAME=$zdbhist_newObjType>$1<?/MIVAR>
         <?MIVAR NAME=$zdbhist_appPage>$2<?/MIVAR>
       <?/MISQL>
       <?MIVAR NAME=$zdbhist_newObjIsMarker>0<?/MIVAR>
       <?MISQL SQL="
         select marker_type
           from marker_types
           where marker_type = '$zdbhist_newObjType';">
         <?MIVAR NAME=$zdbhist_newObjIsMarker>1<?/MIVAR>
       <?/MISQL>

       <?MIBLOCK COND="$zdbhist_newObjIsMarker">
           <?MICOMMENT> Only get most significant names <?/MICOMMENT>
	   <?MISQL SQL="
	     select allmapnm_name 
	       from all_map_names
	       where allmapnm_zdb_id ='$new_oid'
                 and allmapnm_precedence in 
                      ( 'Current symbol',
                        'Clone name', 'Current name',
                        'Previous name' );">
	     <?MIVAR NAME=$new_name>$1<?/MIVAR>
	       <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=$zdbhist_appPage&OID=$new_oid">$new_name</a>
	   <?/MISQL>

       <?MIELSE COND="$(EQ,$zdbhist_newObjType,GENO)">
	   <?MISQL SQL="
	     select geno_display_name
	       from genotype
	       where geno_zdb_id ='$new_oid';">
             <?MIVAR NAME=$new_name>$1<?/MIVAR>
	       <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=$zdbhist_appPage&OID=$new_oid">$new_name</a>
	   <?/MISQL>

       <?MIELSE> 
            <?MICOMMENT>
              Trashcan case to catch everything else.  Give up if there is 
	      no app page for the object type.
            <?/MICOMMENT>
	    <?MISQL COND="$(NE,$zdbhist_appPage,NULL)" SQL="
              execute function get_obj_name('$new_oid');">
	      <?MIVAR NAME=$new_name>$1<?/MIVAR>
		<a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=$zdbhist_appPage&OID=$new_oid">$new_name</a>
	    <?/MISQL>
       <?/MIBLOCK>  <?MICOMMENT> end if-then-else on replacement object type <?/MICOMMENT>

     <?/MISQL>  <?MICOMMENT> end select replacement ZDB ID(s) <?/MICOMMENT>
     <?MIBLOCK COND="$(!=,$MI_ROWCOUNT,0)">
          <p>Please be sure to change any bookmarks you may have.<br><br>
     <?/MIBLOCK>
  <?/MIBLOCK>  <?MICOMMENT> end OID exists <?/MICOMMENT>
