<?MICOMMENT>

FILE: new_marker.apg
PREFIX: newmrkr_ (but none replaced as of Feb. 2005)

DESCRIPTION:
This is the first page of entering a new marker into ZFIN., 

INPUT VARS:
OUTPUT VARS:

EFFECTS: Adds a new marker (currently, only genes, psuedogenes) to
marker table.  

<?/MICOMMENT>

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>

<?MIBLOCK COND="$(XST,$mname)">
  <?MIVAR>  <TITLE>ZFIN Marker Added: $mname</TITLE>  <?/MIVAR>
<?MIELSE>
  <TITLE>ZFIN Add Marker</TITLE>
<?/MIBLOCK>

<?MIVAR COND="$(AND,$(NXST,$OID),$(XST,$temp_oid))" NAME=$OID>$temp_oid<?/MIVAR>



<?MISQL SQL="
  select WebExplode(object,'') 
    from webPages 
    where ID='aa-chromoscripts.apg';">
  $1
<?/MISQL>

  </head>


<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>


<?MICOMMENT>
  -- new_marker.apg.   A very simple data entry page (because it does not 
  -- need to support digressions) to allow entry of new MARKER 
  -- records.

  -- VARS:
  -- marker_type -- if it doesn't exist, it starts by asking you this. 
  --                If it exists, prompt for appropriate info.
  -- s_new       -- if it exists, create new record and print a confirmation.
  -- Others      -- if s_new exists, then name, abbrev, comments should
  --                also exist.
  -- nMrkrSource -- if exists, must be a pub_zdb_id
<?/MICOMMENT>

<basefont size=2>

<?MISQL SQL="
  select WebExplode(object,'page_title=New Marker&permission=root') 
    from webPages 
    where ID='aa-secure_navigation.apg';">$1
<?/MISQL>

<?MIBLOCK COND="$(NC,$AUTHORIZED,false)">

  <?MIBLOCK COND="$(NXST,$marker_type)">
    <h1>Create new marker</h1>

    <form name=newdata method=post action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">
      <input type=hidden name=MIval value=aa-new_marker.apg>
      <?MIVAR COND=$(XST,$nMrkrSource)><input type=hidden name=nMrkrSource value=$nMrkrSource><?/MIVAR>

      <b>Type of new marker to create:</b>
      <SELECT name=marker_type>
        <?MISQL SQL="
	   select mrkrtype_type_display, marker_type
	     from marker_types
	    where marker_type in (select distinct mtgrpmem_mrkr_type
				  from marker_type_group_member)
	   order by mrkrtype_type_display; ">
	  <option value=$2>$1
        <?/MISQL>	
      </SELECT>  

      <input type=submit value="create it">
    </form>
  <?/MIBLOCK>

  <?MIBLOCK COND="$(AND,$(XST,$marker_type),$(NXST,$s_new))">
     <?MISQL SQL=" select mrkrtype_type_display
                    from marker_types
                   where marker_type='$marker_type';">
      <?MIVAR NAME=marker_type_display>$1<?/MIVAR>
    <?/MISQL>

    <?MIVAR>
      <h1>Describe new $marker_type_display</h1>
    <?/MIVAR>
    <SCRIPT>
      // whitespace characters
      var whitespace = " \t\n\r";
    
      // Check whether string s is empty.   
      
      function isEmpty(s)
      {   return ((s == null) || (s.length == 0))
      }
      
      
      
      // Returns true if string s is empty or 
      // whitespace characters only.
   
      function isWhitespace (s)
      
      {   var i;
      
          // Is s empty?
          if (isEmpty(s)) return true;
      
          // Search through string's characters one by one
          // until we find a non-whitespace character.
          // When we do, return false; if we don't, return true.
      
          for (i = 0; i < s.length; i++)
          {   
              // Check that current character isn't whitespace.
              var c = s.charAt(i);
      
              if (whitespace.indexOf(c) == -1) return false;
          }
      
          // All characters are whitespace.
          return true;
      }


      //Radio Buttons are stored as an array
      //Loop through the array
      //Return the checked item
      
      function GetChecked(radioButton)
      {
        for ( var i=0; i<radioButton.length; i++ )
        {
           if ( radioButton[i].checked == true )
           {
              return( radioButton[i].value );
           }
        }
      
        return("");
      }
      
      function validate(theform) 
      {
        <?MIBLOCK COND=$(OR,$(EC,$marker_type,GENE),$(EC,$marker_type,GENEP))>
          var reserve = GetChecked(theform.reserve);
          var rsrvComment = theform.rsrvComment.value;
        
          if (theform.mname.value=='' || theform.abbrev.value=='') 
          {
  	    alert('You must supply both name and abbreviation');
	    return false;
          }  
        
          if (reserve=='yes' && isWhitespace(rsrvComment)) 
          {
            alert('Missing Input: Reservations require a comment.');
            theform.rsrvComment.focus();
            return false;
          }

        <?/MIBLOCK>
        
        return true;
      }

      <?MICOMMENT> 
        Sequnce end options indicate the direction of the sequnce.
        When one end is changed, set the other to be the opposite. 
        
        The option menus are arange in oposing order. Thus the  
        values are oposite when the selected indexes of the menus 
        are the same. 
      <?/MICOMMENT>
      function sequencesEndAgree(changedEnd)
      {
        if (changedEnd == "left")
        {
          document.newdata.nMrkrRightEnd.selectedIndex = document.newdata.nMrkrLeftEnd.selectedIndex;
        }
        else
        {
          document.newdata.nMrkrLeftEnd.selectedIndex = document.newdata.nMrkrRightEnd.selectedIndex;
        }        
      
      }
    </SCRIPT>

    <?MIVAR>
      <form name=newdata  method=post action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->"
            <?MIVAR COND="$(>,$(POSITION,$marker_type,GENE),0)">onSubmit="return validate(this);"<?/MIVAR>>
        <input type=hidden name=MIval value=aa-new_marker.apg>
        <input type=hidden name=marker_type value="$marker_type">
	<input type=hidden name=marker_type_display value="$marker_type_display">

        <p><B>$marker_type_display name</b> (required):
        <input type=text name=mname size=80>

        <?MIBLOCK COND=$(OR,$(EC,$marker_type,GENE),$(EC,$marker_type,GENEP))>
          <p><b>Abbreviation</b> (required):
          <input type=text name=abbrev size=15>
        <?/MIBLOCK>
        
        <p>
        <b>Note:</b><br>
        <TEXTAREA rows=5 cols=50 name=comments></TEXTAREA>

        <?MIBLOCK COND="$(>,$(POSITION,$marker_type,GENE),0)">
        <p><b>Is this a reservation?</b>:
        Yes <input type=radio name=reserve value=yes> / No <input type=radio name=reserve value=no checked>
        <br>Reservation Comments: <input type=text name=rsrvComment size=50>
        <?MIELSE>
          <input type=hidden name=reserve value="no">
	<?/MIBLOCK>
        <p>

        <input type=submit name=s_new value="Submit new $marker_type_display">
        
        <p>
        <b>sequence:</b> <select name=nMrkrLeftEnd onChange="sequencesEndAgree('left');"><option value=5>5'</option><option value=3>3'</option></select>
        <input type=text name=nMrkrSequence size=40>
        <select name=nMrkrRightEnd onChange="sequencesEndAgree('right');"><option value=3>3'</option><option value="5">5'</option></select>
        <br>
        <b>publication:</b> <input type=text name=nMrkrSource $(IF,$(XST,$nMrkrSource),value=$nMrkrSource)>
        
      </form>
    <?/MIVAR>

  <?/MIBLOCK> <!-- ends specifying params -->

  <!-- if marker values submitted -->
  <?MIBLOCK COND="$(XST,$s_new)">
    <?MIVAR COND="$(NXST,$comments)" NAME=$comments><?/MIVAR>

    <?MIVAR NAME=$mname DELIMIT="'" REPLACE="''">$mname<?/MIVAR>
    <?MIVAR COND=$(XST,$abbrev) NAME=$abbrev DELIMIT="'" REPLACE="''">$abbrev<?/MIVAR>
    <?MIVAR COND=$(NXST,$abbrev) NAME=$abbrev>$mname<?/MIVAR>
    <?MIVAR NAME=$comments DELIMIT="'" REPLACE="''">$comments<?/MIVAR>
    <?MISQL SQL="execute function get_id('$(UPPER,$marker_type)');"><?/MISQL>
    <?MIVAR NAME=$new_id>$1<?/MIVAR>

    <?MISQL SQL="
      insert into zdb_active_data 
        (zactvd_zdb_id) 
        values ('$new_id');">
    <?/MISQL>

    <?MISQL SQL="
      insert into marker 
        (mrkr_zdb_id, mrkr_name, mrkr_abbrev, mrkr_type, mrkr_comments, mrkr_owner) 
        values ('$new_id', '$mname', '$abbrev', '$(UPPER,$marker_type)',
                '$comments', '$ZDB_ident');">
    <?/MISQL>
    <?MISQL SQL="
      update marker 
	set mrkr_comments = NULL
        where mrkr_zdb_id = '$new_id'
	and mrkr_abbrev = '$abbrev'
	and mrkr_name = '$mname'
	and mrkr_comments = '';">
    <?/MISQL>
	

    <?MISQL COND=$(XST,$nMrkrSource) SQL="
        insert into record_attribution (recattrib_data_zdb_id, recattrib_source_zdb_id)
        values ('$new_id','$nMrkrSource');">
    <?/MISQL>

    <?MIBLOCK COND=$(EC,$reserve,yes)>
      <?MISQL SQL="execute function get_id('NOMEN');"><?/MISQL>
      <?MIVAR NAME=$mhist_id>$1<?/MIVAR>
      <?MIVAR NAME=$rsrvComment COND=$(NXST,$rsrvComment)><?/MIVAR>
    
      <?MISQL SQL="
        INSERT INTO zdb_active_data VALUES('$mhist_id');
        insert into marker_history ( 
                        mhist_zdb_id, 
                        mhist_mrkr_zdb_id, 
                        mhist_event, 
                        mhist_reason, 
                        mhist_date,
                        mhist_mrkr_name_on_mhist_date,
                        mhist_mrkr_abbrev_on_mhist_date,
                        mhist_comments )
               select '$mhist_id',
                        mrkr_zdb_id,
                        'reserved',
                        'per personal communication with authors',
                        CURRENT,
                        mrkr_name,
                        mrkr_abbrev,
                        '$rsrvComment'
               from marker
               where mrkr_zdb_id = '$new_id';">
      <?/MISQL>
    <?/MIBLOCK>
    
    <?MIBLOCK COND="$(XST,$nMrkrSequence)">
      <?MISQL SQL="execute function get_id('MRKRSEQ')">
        <?MIVAR NAME=$nMrkrMrkrSeqId>$1<?/MIVAR>
      <?/MISQL>
      <?MIVAR NAME="nMrkrEndWithPrime">$nMrkrLeftEnd''<?/MIVAR>
      <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values ('$nMrkrMrkrSeqId');"><?/MISQL>
      <?MISQL SQL="
        insert into marker_sequence (
          mrkrseq_zdb_id,
          mrkrseq_mrkr_zdb_id,
          mrkrseq_sequence,
          mrkrseq_left_end)
        values (
          '$nMrkrMrkrSeqId',
          '$new_id',
          '$nMrkrSequence',
          '$nMrkrEndWithPrime');">
      <?/MISQL>
    
    <?/MIBLOCK>

    <?MIVAR>
      <h1>Confirmation: $marker_type_display record added</h1>

      Click <A href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$new_id">here</A>
      to view the new $marker_type_display record.
      <p>
      Click <A href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-ZDB_home.apg">here</A> 
      to return to the ZFIN home page.
    <?/MIVAR>

    <?MICOMMENT>
      Add new marker's name information to the names fast search tables, so 
      the new marker can be found through the search interface.
    <?/MICOMMENT>
    <?MISQL SQL="
      execute procedure regen_names_marker('$new_id');">
    <?/MISQL>    

  <?/MIBLOCK>

<?/MIBLOCK> <!-- ends Authorized -->



<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>


