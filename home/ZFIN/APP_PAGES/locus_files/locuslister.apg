<!-- FILE: locuslister.html -->

<!-- This app-page is a weak cousin of fishlister which merely handles searches for locus names and abbrevs.
It will also handle registration of the locus name and abbrev, checking first to see that it does not already exist in the FISH and registered_locus tables.
-->
<!-- Modified to support I.E.  Naviagtor tile buttons must know all user input from the query screen.  These values are posted to the lister form.  The lister form creates the tile bar button with appropriate variables. Startframes.apg will pass this variables on to the select form.  -->



<HTML>
<HEAD>
<SCRIPT>

function show_doc(title,docpath) {
   helpwin=open("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-docframes.apg&title="+title+"&docpath="+docpath,"helpwindow","scrollbars=yes,width=600,height=600");
}
</SCRIPT>

<basefont size=2>
</HEAD>

<!-- Main reason for following is to get user info -->
<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-secure_navigation.apg';">$1<?/MISQL>


<!-- THIS NEXT PART IS EXECUTED AFTER THE PERSON ENTERS SOME CRITERIA -->
<!-- This next part builds up a query piece by piece, based on which criteria 
  were passed in 
-->

<?MIVAR NAME=$constraint COND="$(NXST,$constraint)"> <?/MIVAR>

<!-- Make sure they've even submitted something complete -->
<?MIBLOCK COND="$(OR,$(NXST,$fname),$(NXST,$allele))">
<h1 align=center>ERROR! Incomplete submission</h1>
<BIG><B>You must specify all of the above fields in order to proceed. Please try again.</B></BIG>
<?/MIBLOCK> <!-- ends if incomplete submission -->

<?MIBLOCK COND="$(AND,$(NXST,$abbrev),$(NC,$(SUBSTR,$fname,1,2),Df),$(NC,$(SUBSTR,$fname,1,2),Cr),$(NC,$(SUBSTR,$fname,1,2),Dp),$(NC,$(SUBSTR,$fname,1,2),In),$(NC,$(SUBSTR,$fname,1,2),Is),$(NC,$(SUBSTR,$fname,1,2),Tg),$(NC,$(SUBSTR,$fname,1,1),T))">
<h1 align=center>ERROR! Incomplete submission</h1>
<BIG><B>You must specify all of the above fields in order to proceed. Please try again.</B></BIG>
<?/MIBLOCK> <!-- ends if incomplete submission -->



<!-- If everything is there, proceed -->
<?MIBLOCK COND="$(AND,$(XST,$fname),$(XST,$allele))">

<?MIBLOCK COND="$(OR,$(XST,$abbrev),$(OR,$(NXST,$abbrev),$(EC,$(SUBSTR,$fname,1,2),Df),$(EC,$(SUBSTR,$fname,1,2),Cr),$(EC,$(SUBSTR,$fname,1,2),Dp),$(EC,$(SUBSTR,$fname,1,2),In),$(EC,$(SUBSTR,$fname,1,2),Is),$(EC,$(SUBSTR,$fname,1,2),Tg),$(EC,$(SUBSTR,$fname,1,1),T)))">

<?MIVAR NAME=$duplicate_allele>f<?/MIVAR>
<?MIVAR NAME=$duplicate_locus>f<?/MIVAR>
<?MIVAR NAME=$duplicate_gene>f<?/MIVAR>
<?MIVAR NAME=$malformed>f<?/MIVAR>
<?MIVAR NAME=$bad_prefix>f<?/MIVAR>
<?MIVAR NAME=$warnings><?/MIVAR>


<!-- First filter for apostrophes - just take em out! -->
<?MIVAR NAME=$fname DELIMIT="'" REPLACE="">$fname<?/MIVAR>
<?MIVAR NAME=$allele DELIMIT="'" REPLACE="">$allele<?/MIVAR>

<!-- We need two versions of this constraint, because Informix does not support
	use of AS names in the WHERE clause.  (Illustra does.)  The first
	constraint is used in SELECTs from tables that have "printable" abbrev columns
	(i.e., FISH), while the second is used in SELECTs from
	tables that only have 3-character abbrevs.  -->
<?MIBLOCK COND="$(XST,$abbrev)">
<?MIVAR NAME=$abbrev DELIMIT="'" REPLACE="">$abbrev<?/MIVAR>
<?MIVAR NAME=$constraintSub>$(IF,$(EC,$doAction,new_locus),or,and) lower(abbrev[1,3])='$(LOWER,$abbrev)')<?/MIVAR>
<?MIVAR NAME=$constraint>$(IF,$(EC,$doAction,new_locus),or,and) lower(abbrev)='$(LOWER,$abbrev)')<?/MIVAR>
<?/MIBLOCK>

<?MIBLOCK COND="$(NXST,$abbrev)"> 
<?MIVAR NAME=$constraint>)<?/MIVAR>
<?MIVAR NAME=$constraintSub>)<?/MIVAR>
<?MIVAR NAME=$abbrev> <?/MIVAR>
<?/MIBLOCK>

<!-- NOW JUST RETRIEVE AND DISPLAY ALL MATCHING ENTRIES. -->

<!-- Debugging:
<?MIVAR>Constraint is: $constraint<?/MIVAR>
-->

<center><FONT SIZE=4>Checking proposed name:</font>  
</center> 



<b>Checking existing mutations...</b>


<ul>
<?MISQL SQL="select distinct name, abbrev[1,3] as trey from fish where (lower(name) = '$(LOWER,$fname)' $constraintSub  and name not like '%;%' order by name,trey;">
$(IF,$(EC,$doAction,new_locus),Found locus <b>$1</b> with abbreviation <b>$2</b><br>)
<?/MISQL>

<?MIVAR COND="$(>,$MI_ROWCOUNT,0)" NAME=$duplicate_locus>t<?/MIVAR>



<?MISQL SQL="select name, abbrev[1,3] as trey, allele from fish a where lower(allele) = '$(LOWER,$allele)' order by name,trey,allele;">
Found allele <b>$3</b> for $1 ($2)<br>
$(SETVAR,$duplicate_allele,t)
<?/MISQL>
</uL>


<p>
<b>Checking nomenclature...</b>

<ul>
<?MISQL SQL="select distinct locus_name as name, abbrev as trey from locus_registration where (lower(locus_name) = '$(LOWER,$fname)' $constraint  order by name,trey;">
$(IF,$(EC,$doAction,new_locus),Found locus <b>$1</b> with abbreviation <b>$2</b><br>)
$(SETVAR,$duplicate_locus,t)
<?/MISQL>



<?MISQL SQL="select locus_name as name, abbrev as trey, allele from locus_registration  where lower(allele) = '$(LOWER,$allele)' order by name,trey,allele;">
Found allele <b>$3</b> for $1 ($2)<br>
$(SETVAR,$duplicate_allele,t)
<?/MISQL>
</ul>


<!-- Check for genes with same name or abbrev.  Not a fatal problem, but we'll want to warn 'em. -->
<b> Checking cloned genes </b>
<ul>
<?MISQL SQL="select distinct gene_name as name, abbrev as trey from gene where (lower(gene_name) = '$(LOWER,$fname)' $constraint  order by name,trey;">
$(IF,$(EC,$doAction,new_locus),Found cloned gene <b>$1</b> with abbreviation <b>$2</b><br>)
$(SETVAR,$duplicate_gene,t)
<?/MISQL>
</ul>




<!-- Check typological conventions for malformed allele
 (Now handled in Javascript in locusselect)
-->

<!-- check that the allele prefix exists. prefix is computed by Javascript in
locuslister and passed in as arg  -->
<?MIVAR NAME=$lab_names><?/MIVAR>
<?MISQL SQL="select name,zdb_id from lab where allele_prefix='$prefix';">
$(SETVAR,$lab_names,$1","$lab_names)
$(SETVAR,$lab_id,$2)
<?/MISQL>
<?MIVAR COND="$(NXST,$lab_id)" NAME=$bad_prefix>t<?/MIVAR>

<p>
<HR width=90% size=3>

<?MIVAR>
<!-- Stats: $prefix,$duplicate_locus,$duplicate_allele,$malformed,$bad_prefix -->
<?/MIVAR>

<h2 align=center>Analysis summary:

<!-- They are registered user and want to submit new locus -->
<?MIBLOCK COND="$(AND,$(NC,$AUTHORIZED,GUEST),$(EC,$doAction,new_locus))">


<!-- Everything is kosher, start the registration form (finished later). -->
<?MIBLOCK COND="$(AND,$(EC,$duplicate_locus,f),$(EC,$duplicate_allele,f),$(EC,$malformed,f),$(EC,$bad_prefix,f))">

No conflicts found! </H2>

<BIG><B>Ready to register new locus, abbreviation and allele!</B></BIG>
You may request to register this locus name/abbreviation  and allele designation in your name if you like. Clicking the submit button below will send your registration request to ZFIN staff; you will receive confirmation of registration within about a week. <p>

<?MIVAR NAME=$action>NEW LOCUS: Register new locus with this abbrev and allele<?/MIVAR>

<?/MIBLOCK>  <!-- everything kosher, Register new locus -->

<?MIVAR COND="$(OR,$(NC,$duplicate_locus,f),$(NC,$duplicate_allele,f),$(NC,$malformed,f),$(NC,$bad_prefix,f))">
Conflicts were found! </H2>
<big><b>Unable to proceed!!</b></BIG>.
There are one or more problems with your proposed submission. You will need to alter your proposed name or allele designation before you can proceed:
<p>
<?/MIVAR>


<!-- There is a an existing locus/abbrev -->
<?MIBLOCK COND="$(EC,$duplicate_locus,t)"> 

<b><FONT color="#ff0000">Problem:</font> Cannot register the locus 
<?MIVAR><font color="#ff0000">$fname</font> <?/MIVAR>
with abbreviation 

<?MIVAR><font color="#ff0000">$abbrev</font><?/MIVAR>  </b>  <br>The locus and/or abbreviation you have requested for your new locus is already taken (see above). Please choose a different locus and/or abbreviation and try again.<p>
<?/MIBLOCK>  <!-- ends there is existing locus -->

<?/MIBLOCK>  <!-- ends wants to register new locus -->



<!-- They just want to register new allele -->
<?MIBLOCK COND="$(AND,$(NC,$AUTHORIZED,GUEST),$(EC,$doAction,new_allele))">

<!-- Everything is kosher, let em do it -->
<?MIBLOCK COND="$(AND,$(EC,$duplicate_locus,t),$(EC,$duplicate_allele,f),$(EC,$malformed,f),$(EC,$bad_prefix,f))">
 No conflicts found! </H2>

<B>Ready to register new allele designation for <?MIVAR>$fname<?/MIVAR> locus.</B>
You may request to register this allele designation in your name if you like. Clicking the submit button below will send your registration request to ZFIN staff; you will receive confirmation of registration within a week. <p>

<?MIVAR NAME=$action>NEW ALLELE: Register new allele designation for an existing locus<?/MIVAR>

<?/MIBLOCK> <!-- Ends everything kosher, let register allele -->

<?MIVAR COND="$(OR,$(NC,$duplicate_locus,t),$(NC,$duplicate_allele,f),$(NC,$malformed,f),$(NC,$bad_prefix,f))">
Conflicts were found! </H2>
<big><b>Unable to proceed!!</b></BIG>.
There are one or more problems with your proposed submission. You will need to alter your proposed name or allele designation before you can proceed:
<p>
<?/MIVAR>

<!-- There was no existing locus -->

<?MIBLOCK COND="$(NC,$duplicate_locus,t)">
<b><FONT color="#ff0000">Problem:</font> Can not register new allele 
<?MIVAR><font color="#ff0000">$allele</font><?/MIVAR> to existing locus
<?MIVAR><font color="#ff0000">$fname</font><?/MIVAR></B> <br>
You have requested to register a new allele for an existing locus --- but the locus <?MIVAR><font color="#ff0000">$fname</font><?/MIVAR>
with abbreviation 
<?MIVAR><font color="#ff0000">$abbrev</font><?/MIVAR> you have specified apparently does not exist.<br> Suggestions: Check your spelling of the locus name and abbreviation. You can also search ZFIN for the locus name to ensure that it is listed and spelled the same. If you still have trouble, please <A HREF="mailto:zfinadmn@zfin.org">contact ZFIN staff</a>.
<p>
<?/MIBLOCK> <!-- wants to add allele to non-existing locus -->

<?/MIBLOCK>  <!-- ends wants to register new allele -->


<!-- Finally, you have the case where there was a duplicate allele. This problem applies to BOTH the register locus and register allele options above.-->
<?MIBLOCK COND="$(AND,$(EC,$duplicate_allele,t),$(NC,$AUTHORIZED,GUEST))">

<b><FONT color="#ff0000">Problem:</font> Cannot register the allele
<?MIVAR><font color="#ff0000">$allele</font><?/MIVAR>!</B>  This allele designation is already taken. Allele designations <em>must</em> be globally unique. Please choose another allele designation.<p>
<?/MIBLOCK>  <!-- ends there was a duplicate allele -->

<!-- If they have malformed allele designation -->
<?MIBLOCK COND="$(AND,$(EC,$malformed,t),$(NC,$AUTHORIZED,GUEST))">

<b><FONT color="#ff0000">Problem:</font> Malformed allele designation. Cannot register the allele
<?MIVAR><font color="#ff0000">$allele</font><?/MIVAR>!</B>  Allele designations <em>must</em> consist of a single lower case letter (assigned to to individual labs) followed by a numeric value. Additionally, the prefix letter may be preceeded by the letter 'd' to indicate dominant alleles.  Please repair your allele designation and try again.<p>
<?/MIBLOCK> <!-- ends malformed -->

<!-- If they have good form but bad prefix  -->
<?MIBLOCK COND="$(AND,$(EC,$bad_prefix,t),$(NC,$AUTHORIZED,GUEST))">

<b><FONT color="#ff0000">Problem:</font> Unregistered allele prefix.</b> Cannot register the allele <?MIVAR> $allele with prefix 
<font color="#ff0000">$prefix</font><?/MIVAR>!  
<?MIVAR COND="$(EC,$prefix,d)"> The letter "d" is reserved to denote dominant alleles. <?/MIVAR>
Legal allele prefixes are officially registered to individual labs. A listing of currently assigned prefixes and corresponding labs is provided below  for reference. 
<p> Please repair your allele designation and try again.<p>
<b>Prefixes and labs:</b>
<ul>
<TABLE><TH>Prefix</TH><TH>LAB</TH>
<?MISQL SQL="select name,allele_prefix from lab where allele_prefix is not null;">
<TR><TD>$2</TD><TD>$1</TD></TR>
<?/MISQL>
</TABLE>
</ul>
<?/MIBLOCK>  <!-- ends unregistered prefix -->


<!-- Issue warning if the allele prefix doesn't match the submitter's lab -->
<?MIBLOCK COND="$(AND,$(NC,$malformed,t),$(NC,$bad_prefix,t))">

<?MISQL SQL="select count(*)::integer from int_person_lab a, lab b where source_id='$ZDB_ident' and target_id=b.zdb_id and b.allele_prefix='$prefix';">
<?/MISQL>
<?MIVAR COND="$(=,$1,0)" NAME=$warnings> -- Mismatched allele designation: the proposed allele prefix $prefix is registered to $lab_names, but the submitter ($ZDB_name) isn't a member of this lab.
$warnings
<?/MIVAR>

<?MIVAR COND="$(=,$1,0)">
<b><FONT color="#ff0000">Warning:</font> Possible wrong allele prefix.</B>  
The allele prefix <b>$prefix</b> is registered to the following labs:<b>$lab_names</b>. ZFIN records do not show you ($ZDB_name) as affiliated with this lab. This is not necessarily a problem (maybe our records are out of date, or you've moved,etc.), but please double-check to be sure your allele prefix is correct.<p>
<?/MIVAR>
<?/MIBLOCK>

<!-- Issue warning if the locus name matched a cloned gene -->
<?MIBLOCK COND="$(EC,$duplicate_gene,t)">
<?MIVAR NAME=$warnings>-- Proposed locus ($fname) or abbreviation ($abbrev) matches existing cloned gene. This is not illegal, but should be questioned and strongly discouraged. Submitter was warned of this conflict.
$warnings
<?/MIVAR>
<b><FONT color="#ff0000">Warning:</font> Locus name and/or abbreviation duplicates cloned gene.</B>  The locus name <FONT color="#ff0000"><?MIVAR>$fname<?/MIVAR></font> and/or the abbreviation <FONT color="#ff0000"><?MIVAR>$abbrev<?/MIVAR></font> is already used by a cloned gene (see above).  Using the same name/abbreviation for a new mutant locus does not violate nomenclature guidelines, but is probably not a good idea.  You may proceed if you insist, but ZFIN strongly recommends choosing another name and/or abrreviation .<p>
<?/MIBLOCK>

<!-- Issue warning if proposed abbreviation is longer than 3 chars -->
<?MIBLOCK COND="$(>,$(STRLEN,$abbrev),3)">
<?MIVAR NAME=$warnings>-- Proposed abbreviation ($abbrev) is longer than 3 characters. This can be allowed only in extraordinarily rare cases where mutation is in known gene that has an established abbreviation longer than three chars. Submitter was warned of this conflict.
$warnings
<?/MIVAR>
<b><FONT color="#ff0000">Warning:</font> Abbreviation too long.</B>  Nomenclature guidelines restrict abbreviations to three characters. Longer abbreviations will be allowed only in exceptional cases, e.g., where the mutation is in a known gene with an abbreviation longer than three characters.  You may proceed if you insist, but you will be contacted for detailed justification.<p>
<?/MIBLOCK>

<!-- Include warning to reviewer (only) if name has space -->
<?MIVAR NAME=$blank>$(POSITION,$fname, )<?/MIVAR>
<?MIVAR COND="$(>,$blank,0)" NAME=$warnings> -- Warning: This locus name contains blanks! This is okay, but makes it very hard to ensure that it is not very identical to others except for blanks, e.g., notail=no tail=not ail.  Please check it carefully.
$warnings
<?/MIVAR>


<!-- Now, if you are clear to register, throw up the form -->
<?MIBLOCK COND="$(XST,$action)">

<form method=post action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">
<input type=hidden name=MIval value=aa-process_locus.apg>

<big><B>Summary of proposed registration:</B></big>
<p>

<TABLE WIDTH=100% border cellpadding=3>
<TR>
<?MIVAR><TD>
<b>LOCUS: <font color="#0000ff"><i>$fname</i> </font></B></TD>
<TD><B>Abbreviation: <font color="#0000ff"><i>$(LOWER,$abbrev)<sup>$(LOWER,$allele)</sup></i></font></b>
</TD>
</TR>
<?/MIVAR>
<TR>
<TD colspan=2 valign=top><font size=-1><b>Description</b>:<br>
<TEXTAREA NAME=descrip rows=3 cols=60 wrap=virtual>Optional: please include a few lines briefly describing the phenotype of the new allele! </TEXTAREA>
</font></TD></TR>
<TR align=center>
<?MIVAR><TD><b>Submitter Name: </b>$ZDB_name</TD><?/MIVAR>
<TD><b>Contact Email:</b> 
<?MISQL SQL="select email from person where zdb_id='$ZDB_ident';"><?/MISQL>
<?MIVAR>
<INPUT TYPE=text NAME=email $(IF,$(NC,$1,null),VALUE=$1)>
<?/MIVAR>
</TD>
</TR>
</TABLE>


<TABLE width=100%>
<TR>
<TD> <input type=submit name=doit value="Send registration request!"> </TD>
<TD align=right><font size=-1>
<input type=button name=new_allele value="Help!" onClick="show_doc('Registration+Help','/ZFIN/fish_files/locus_intro.html')"></font>
</TD>
</TR>
</TABLE>

<?MIVAR>
<input type=hidden name=sender value="$ZDB_name">
<input type=hidden name=locus value="$fname">
<input type=hidden name=action value="$doAction">
<input type=hidden name=abbrev value="$(LOWER,$abbrev)">
<input type=hidden name=allele value="$allele">
<input type=hidden name=ZFIN_id value="$ZDB_ident">
<input type=hidden name=warnings value="$warnings">
<?/MIVAR>
</form>

<?/MIBLOCK>  <!-- ends action was specified (submission form) -->



<?/MIBLOCK>  <!-- no abbrev specified but a mutant of deficiency class -->

<?/MIBLOCK>  <!-- ends alls values specified -->


<!-- Cause a tile for the new page to appear in the navigator frame -->
<!-- startframes.apg will pass variables on to appropriate page -->

<?MIVAR NAME=page_title>Register LOCUS<?/MIVAR>
<?MIVAR NAME=navtile>true<?/MIVAR>
<?MIVAR COND="$(NXST,$fname)" NAME=$fname><?/MIVAR>
<?MIVAR COND="$(NXST,$abbrev)" NAME=$abbrev><?/MIVAR>
<?MIVAR COND="$(NXST,$allele)" NAME=$allele><?/MIVAR>
<?MIVAR COND="$(NXST,$doAction)" NAME=$doAction><?/MIVAR>
<?MIVAR COND="$(NXST,$prefix)" NAME=$prefix><?/MIVAR>
<?MIVAR>
<SCRIPT>
var page_id=top.content.location.href+'&navtile=$navtile&name=$fname&nav_abbrev=$abbrev&nav_allele=$allele&doAction=$doAction&prefix=$prefix';
top.update_hist(page_id,"$page_title");
top.controls.location.reload(true);
</SCRIPT>
<?/MIVAR>


</HTML>