<!-- FILE: do-goedit.apg

Commits the updates requested in the forms tossed up by
gomodify.apg. Also files update record.


EXPECTED VARS:
  OID -- the mrkrgoev zdb_id of the rec to update
  attr -- the column to be updated
optional:
  new_value -- the new value to stick in the column
  old_value -- the previous value
  valuedb   -- inference member db name

-->

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>

<?/MIERROR>

<META HTTP-EQUIV="EXPIRES" CONTENT="-2d">
<!-- If one of the values was an empty string, it won't get successfully
  -- passed to this page. 
  -->
<?MISQL SQL="
    select WebExplode(object,'permission=root')
      from webPages
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>

<?MIVAR COND="$(NXST,$OID)">
	ERROR: OID is not present!!
<?/MIVAR>

<?MISQL SQL="select mrkrgoev_mrkr_zdb_id from marker_go_term_evidence where mrkrgoev_zdb_id ='$OID'">
	<?MIVAR NAME=mrkrzdbid>$1<?/MIVAR>
<?/MISQL>


<?MIVAR COND="$(NXST,$attr)" NAME=$attr><?/MIVAR>
<?MIVAR COND="$(NXST,$closeafterload)" NAME=$closeafterload><?/MIVAR>
<?MIVAR COND="$(NXST,$new_value)" NAME=$new_value><?/MIVAR>
<?MIVAR COND="$(NXST,$new_valuedb)" NAME=$new_valuedb><?/MIVAR>
<?MIVAR COND="$(NXST,$old_value)" NAME=$old_value><?/MIVAR>

<?MIVAR COND="$(NXST,$oldisnot)" NAME=$oldisnot><?/MIVAR>
<?MIVAR COND="$(NXST,$oldcontribs)" NAME=$oldcontribs><?/MIVAR>
<?MIVAR COND="$(NXST,$isnot)" NAME=$isnot><?/MIVAR>
<?MIVAR COND="$(NXST,$contribs)" NAME=$contribs><?/MIVAR>
<?MIVAR NAME=comma>,<?/MIVAR>

<?MIVAR NAME=$new_value>$(TRIM,$new_value)<?/MIVAR>

<!-- First check security. Main purpose is just to get submitter id and name--> 

<?MISQL SQL="
    select WebExplode(object,'permission=root') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
<?/MISQL>


<?MIBLOCK COND="$(EC,$attr,pub)"> 
   <!--- pubid validation check --->
   <?MISQL SQL="select WebExplode(object, 'attr=pubid&value=$new_value&return_page=gomodify.apg&return_id=$OID') from webPages where ID='aa-markergovalidate.apg';">$1<?/MISQL>

   <?MICOMMENT>database trigger inserts new attribution, here need to delete
	  the old one. The update might trigger go unknown curation attribution
          be deleted.   
   <?/MICOMMENT>
   <?MIBLOCK COND="$(EC,$isValid,t)">
     <?MISQL SQL="delete from record_attribution 
			where recattrib_source_zdb_id = '$old_value'
			  and recattrib_data_zdb_id = '$OID';">
     <?/MISQL>
     <?MISQL SQL="
	update marker_go_term_evidence set mrkrgoev_source_zdb_id = '$new_value',
					   mrkrgoev_date_modified = CURRENT,
					   mrkrgoev_modified_by   = '$ZDB_name'	
				where mrkrgoev_zdb_id = '$OID' 	">
     <?/MISQL>

     <?MICOMMENT> call attrib_check.apg to check and pop-up alert in the case 
	that the old pub now has no more specific referencial data.
     <?/MICOMMENT>
     <?MISQL SQL="select mrkrgoev_mrkr_zdb_id
		    from marker_go_term_evidence
		   where mrkrgoev_zdb_id = '$OID';">
     <?/MISQL>	
     <?MIVAR NAME=OID_save>$OID<?/MIVAR>
     <?MISQL SQL="select WebExplode(object,'pubId=$old_value&OID=$1') from webPages where ID='aa-attrib_check.apg';">$1<?/MISQL>
     <?MIVAR NAME=OID>$OID_save<?/MIVAR>	
    <?/MIBLOCK>
<?/MIBLOCK>



<?MIBLOCK COND="$(EC,$attr,evidence)">
   <?MISQL SQL="
       update marker_go_term_evidence set mrkrgoev_evidence_code = '$new_value',
					  mrkrgoev_date_modified = CURRENT,
					  mrkrgoev_modified_by   = '$ZDB_name'	
				where mrkrgoev_zdb_id = '$OID' 	">    
   <?/MISQL>
<?/MIBLOCK>


<?MIBLOCK COND="$(EC,$attr,note)">

  <?MIVAR NAME=$new_value>$(REPLACE,$new_value,','')<?/MIVAR> 

  <?MISQL SQL="
    update marker_go_term_evidence set mrkrgoev_notes         = '$new_value', 
				       mrkrgoev_date_modified = CURRENT,
				       mrkrgoev_modified_by   = '$ZDB_name'	
      				where mrkrgoev_zdb_id='$OID'; ">
   <?/MISQL>
<?/MIBLOCK>
  

<?MIBLOCK COND="$(EC,$attr,flag)">
     <?MIBLOCK COND="$(EC,$oldisnot,yes)">
         <?MISQL COND="$(EC,$isnot,f)" SQL="
  		delete from go_evidence_flag 
				    where goevflag_mrkrgoev_zdb_id='$OID' 
				      and goevflag_gflag_name     ='not'">
	 <?/MISQL>
     <?MIELSE>
        <?MISQL COND="$(EC,$isnot,t)" SQL="
	    insert into go_evidence_flag (goevflag_mrkrgoev_zdb_id, goevflag_gflag_name) 
					values ('$OID','not')">
	<?/MISQL>
 
     <?/MIBLOCK>

     <?MIBLOCK COND="$(EC,$oldcontribs,yes)">
         <?MISQL COND="$(EC,$contribs,f)" SQL="
		delete from go_evidence_flag 
				where goevflag_mrkrgoev_zdb_id='$OID' 
				  and goevflag_gflag_name='contributes to'">
	 <?/MISQL>
     
     <?MIELSE>
        <?MISQL COND="$(EC,$contribs,t)" SQL="
	    insert into go_evidence_flag  (goevflag_mrkrgoev_zdb_id, goevflag_gflag_name)
				values ('$OID','contributes to')">
	<?/MISQL>

     <?/MIBLOCK>
     <?MISQL SQL="
    	update marker_go_term_evidence set mrkrgoev_date_modified = CURRENT,
				           mrkrgoev_modified_by   = '$ZDB_name'	
      				where mrkrgoev_zdb_id='$OID'; ">
     <?/MISQL>

<?/MIBLOCK>


<?MIBLOCK COND="$(EC,$attr,inference)">
   <?MISQL SQL=" select mrkrgoev_evidence_code 
		     from marker_go_term_evidence
		    where mrkrgoev_zdb_id = '$OID' ">
   <?/MISQL>	
   <?MIVAR NAME=evidence_code>$1<?/MIVAR>
   <?MIVAR NAME=return_info>&evidence_code=$evidence_code&inf_db=$valuedb&inf_mem=$new_value<?/MIVAR>
 
   <!-- inference group member validation check --->
   <?MISQL SQL="select WebExplode(object, 'attr=inference&value=$new_value&valuedb=$valuedb&evidence_code=$evidence_code&return_page=gomodify.apg&return_id=$OID$return_info') from webPages where ID='aa-markergovalidate.apg';">$1<?/MISQL>

   <?MIBLOCK COND="$(EC,$isValid,t)">
     <?MIVAR NAME=$inf_from>$new_value<?/MIVAR>
     <?MIBLOCK INDEX=$i FROM=0 TO=10 STEP=1>
         <?MIVAR NAME=$inferred>$(INDEX,$i,$inf_from)<?/MIVAR>
         <?MIVAR NAME=$inferred>$(TRIM,$inferred)<?/MIVAR>
         <?MIVAR COND="$(EC,$valuedb,GO)">$(SETVAR,$inferred,$(SUBSTR,$inferred,4))<?/MIVAR>	 
         <?MIBLOCK COND="$(NC,$inferred,)">
             <?MIVAR NAME=$currinflink>$valuedb:$inferred<?/MIVAR>

             <?MISQL SQL="insert into inference_group_member (infgrmem_mrkrgoev_zdb_id, infgrmem_inferred_from)
							values ('$OID','$currinflink')">
	     <?/MISQL>
         <?/MIBLOCK>
     <?/MIBLOCK>
     <?MISQL SQL="
    	update marker_go_term_evidence set mrkrgoev_date_modified = CURRENT,
				           mrkrgoev_modified_by   = '$ZDB_name'	
      				where mrkrgoev_zdb_id='$OID'; ">
     <?/MISQL>
  <?/MIBLOCK> <!-- end if valid-->
<?/MIBLOCK>


<?MISQL COND="$(NC,$new_value,)" SQL="
      insert into updates (submitter_id,submitter_name, rec_id, field_name, new_value, old_value, comments, when)
     		   values ('$ZDB_ident','$ZDB_name','$mrkrzdbid','$attr','$new_value','$OID','update GO annotation', current);">
<?/MISQL>


<?MIBLOCK COND="$(EC,$attr,delinf)">

  <?MISQL SQL="
	delete from inference_group_member 
				where infgrmem_mrkrgoev_zdb_id = '$OID' 
				  and infgrmem_inferred_from = '$old_value'">
  <?/MISQL>
  <?MISQL SQL="
       update marker_go_term_evidence set mrkrgoev_date_modified = CURRENT,
					  mrkrgoev_modified_by   = '$ZDB_name'	
				where mrkrgoev_zdb_id = '$OID' 	">    
  <?/MISQL>
  <?MISQL SQL="
      insert into updates (submitter_id,submitter_name, rec_id, field_name, comments,old_value, when)
     		   values ('$ZDB_ident','$ZDB_name','$mrkrzdbid','infgrmem_inferred_from','deletion','$old_value',current);">
  <?/MISQL>

<?/MIBLOCK>

<?MICOMMENT>======= delete the entire marker go term evidence record ======<?/MICOMMENT>
<?MIBLOCK COND="$(EC,$attr,delall)">
  <?MICOMMENT>delete from zactive data, check if that deletes the last go unknown for 
              the gene, if so, clean out the curation pub on go unknown. 
  <?/MICOMMENT>
  <?MISQL SQL="select mrkrgoev_mrkr_zdb_id, mrkrgoev_source_zdb_id
		 from marker_go_term_evidence
		where mrkrgoev_zdb_id = '$OID';">
	<?MIVAR NAME=mrkrzdbid>$1<?/MIVAR>
	<?MIVAR NAME=pubid>$2<?/MIVAR>
  <?/MISQL>
  <?MISQL SQL="delete from zdb_active_data where zactvd_zdb_id='$OID'; 
	       execute procedure p_drop_go_unknown_attribution('$mrkrzdbid');">
  <?/MISQL>
  <?MICOMMENT> call attrib_check.apg to check and pop-up alert in the case 
	that the old pub now has no more specific referencial data.
  <?/MICOMMENT>
  <?MIVAR NAME=OID_save>$OID<?/MIVAR>
  <?MISQL SQL="select WebExplode(object,'pubId=$pubid&OID=$mrkrzdbid') from webPages where ID='aa-attrib_check.apg';">$1<?/MISQL>
  <?MIVAR NAME=OID>$OID_save<?/MIVAR>


  <?MISQL SQL="
      insert into updates (submitter_id,submitter_name, rec_id, old_value,field_name, comments,when)
     		   values ('$ZDB_ident','$ZDB_name','$mrkrzdbid', '$OID','go annotation','delete this annotation',current);">
  <?/MISQL>



  <SCRIPT><?MIVAR>
     window.location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$mrkrzdbid");

     if(closeafterload=='true'){
        window.close() ; 
     }
        <?/MIVAR>
  </SCRIPT>

<?/MIBLOCK> 

<SCRIPT><?MIVAR>
     window.location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-gomodify.apg&OID=$OID");
        <?/MIVAR>
</SCRIPT>
