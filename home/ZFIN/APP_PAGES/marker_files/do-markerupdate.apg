<!-- FILE: do-markerupdate.html

Very simple. Just commits the updates requested in the forms tossed up by
markerupdate.html. Also files update record.

EXPECTED VARS:
OID -- the zdb_id of the rec to update
attr -- the column to be updated
attr_type -- textarea,text,or pic
new_value -- the new value to stick in the column
old_value -- the previous value
comments -- reasons for doing update 
target_table -- either anon_marker or gene, depending on what you're updating
info -- optional value used to pass in additional info


-->

<META HTTP-EQUIV="EXPIRES" CONTENT="-2d">

<!-- If one of the values was an empty string, it won't get successfully
  -- passed to this page. 
  -->
<?MIVAR COND="$(NXST,$old_value)" NAME=$old_value><?/MIVAR>
<?MIVAR COND="$(NXST,$new_value)" NAME=$new_value><?/MIVAR>


<!-- First check security. Main purpose is just to get submitter id and name -->

<?MIBLOCK COND="$(OR,$(EC,$attr,putgene_putative_gene_name),$(EC,$attr,putgene_comments))">
  <?MISQL SQL="
    select WebExplode(object,'permission=root') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>
<?MIELSE>
  <?MISQL SQL="
    select WebExplode(object,'permission=owns&rtype=$target_table') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>
<?/MIBLOCK>

<?MIBLOCK COND="$(NC,$AUTHORIZED,false)">

  <?MIVAR COND="$(NXST,$new_value)" NAME=$new_value>NULL<?/MIVAR>
  <?MIVAR COND="$(NXST,$comments)" NAME=$comments>NULL<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-listitem)" NAME=$comments>Deleted the record $old_value from the list of $attr associated with this marker.<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-newortho)" NAME=$comments>Created a new orthologue record for species=$old_value for this record.<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-newseqnum)" NAME=$comments>Created new link to sequence DB: $old_value for this record.<?/MIVAR>


  <?MIVAR NAME=$new_value DELIMIT="'" REPLACE="''">$new_value<?/MIVAR>
  <?MIVAR NAME=$old_value DELIMIT="'" REPLACE="''">$old_value<?/MIVAR>
  <?MIVAR NAME=$comments DELIMIT="'" REPLACE="''">$comments<?/MIVAR>

  <!-- insert update record for the update! -->
  <?MISQL SQL="
    insert into updates 
        (submitter_id,submitter_name, rec_id, field_name, old_value, comments,
         when) 
      values ('$ZDB_ident', '$ZDB_name','$OID', '$attr',  '$old_value', 
              '$comments', current);">
  <?/MISQL>

  <!-- OK, NOW UPDATE THE  ACTUAL DATA RECORD. -->

  <?MISQL COND="$(AND,$(NC,$attr,dalias_alias),$(NC,$attr,putgene_comments),
		      $(NC,$attr,putgene_putative_gene_name),
		      $(OR,$(EC,$attr_type,text),
		           $(EC,$attr_type,textarea)))" SQL="
    update $target_table 
      set $attr='$new_value' 
      where zdb_id='$OID';">
  <?/MISQL>
  <?MIBLOCK COND="$(AND,$(EC,$attr,dalias_alias),
		        $(EC,$attr_type,text))">
    <?MISQL SQL="
      execute function get_id('DALIAS');">
      <?MIVAR NAME=$dalias_zdb_id>$1<?/MIVAR>
    <?/MISQL>
    <?MISQL SQL="
      insert into zdb_active_data
	  (zactvd_zdb_id)
        values 
	  ('$dalias_zdb_id');">
    <?/MISQL>
    <?MISQL SQL="
      insert into data_alias  
	  (dalias_zdb_id, dalias_data_zdb_id, dalias_alias)
        values 
	  ('$dalias_zdb_id', '$OID', '$new_value');">
    <?/MISQL>
  <?/MIBLOCK>
  <?MISQL COND="$(OR,$(EC,$attr,putgene_comments),
		      $(EC,$attr,putgene_putative_gene_name))" SQL="
    update putative_non_zfin_gene  
      set $attr='$new_value' 
      where putgene_mrkr_zdb_id='$OID';">
  <?/MISQL>


  <!-- Special case for deleting one of the associated orthos/seqs/sources/pubs -->
  <?MIBLOCK COND="$(EC,$attr_type,special-listitem)">

    <?MISQL COND="$(EC,$attr,publication)" SQL="
      delete from record_attribution
	where recattrib_data_zdb_id = '$OID'
	  and recattrib_source_zdb_id = '$old_value';">
    <?/MISQL>

    <?MIBLOCK COND="$(EC,$attr,db_link)">
      <!-- $old_value syntax like db_name:acc_num -->
      <!-- separate values -->
      <?MIVAR NAME=delimit>$(POSITION,$old_value,":")<?/MIVAR>
      <?MIVAR NAME=db_name>$(SUBSTR,$old_value,1,$(-,$delimit,1))<?/MIVAR>
      <?MIVAR NAME=acc_len>$(-,$(STRLEN,$old_value),$(-,$delimit,1))<?/MIVAR>
      <?MIVAR NAME=acc_num>$(SUBSTR,$old_value,$(+,$delimit,1),$acc_len)<?/MIVAR>

      <?MIVAR COND=$(=,0,1)>
	<b>
		db_name = $db_name<br>
		acc_num = $acc_num
	</b>
      <?/MIVAR>

      <?MISQL SQL="
	delete from zdb_active_data
	  where zactvd_zdb_id = 
		( select dblink_zdb_id 
		    from db_link
		    where linked_recid = '$OID'
                      and db_name = '$db_name'
		      and acc_num = '$acc_num' );">
      <?/MISQL>
    <?/MIBLOCK>
  <?/MIBLOCK>  <!-- ends special listitem case -->

  <!-- Special case for adding new orthos -->
  <?MIBLOCK COND="$(EC,$attr_type,special-newortho)">
    <?MISQL SQL="
      execute function get_id('ORTHO');">
    <?/MISQL>
    <?MIVAR NAME=$ortho_id>$1<?/MIVAR>
    <?MISQL SQL="
      insert into zdb_active_data
	values ('$ortho_id');">
    <?/MISQL>
    <?MISQL SQL="
      insert into orthologue 
          (zdb_id, c_gene_id, ortho_name, ortho_abbrev, organism, entry_time)
        values ('$ortho_id','$OID','$new_value','$info','$old_value',current);">
    <?/MISQL>
  <?/MIBLOCK>  <!-- ends special add_ortho case -->


  <!-- Special case for adding new sequence db link -->
  <?MIBLOCK COND="$(EC,$attr_type,special-newseqnum)">
    <?MISQL SQL="
      execute function get_id('DBLINK');">
    <?/MISQL>
    <?MIVAR NAME=$dblink_zdb_id>$1<?/MIVAR>
    <?MISQL SQL="
      insert into zdb_active_data
          ( zactvd_zdb_id )
        values
          ( '$dblink_zdb_id' );">
    <?/MISQL>
    <?MISQL SQL="
      insert into db_link 
          ( linked_recid, DB_name, acc_num, dblink_zdb_id ) 
        values 
	  ( '$OID', '$old_value', '$new_value', '$dblink_zdb_id' );">
    <?/MISQL>
  <?/MIBLOCK>  <!-- ends special seqdb case -->

  <!-- Special case for deleting an alias -->
  <?MIBLOCK COND="$(EC,$attr_type,delete-alias)">
    <?MISQL COND="$(EC,$attr,dalias_alias)" SQL="
      delete from zdb_active_data
        where zactvd_zdb_id = 
		( select dalias_zdb_id
		    from data_alias
		    where dalias_data_zdb_id = '$OID'
		      and dalias_alias = '$old_value' ) ;">
    <?/MISQL>
  <?/MIBLOCK>

<?/MIBLOCK> <!-- ends cond authorized -->

<!-- okay, now just bail back to the markerview to view results -->
<?MIVAR>
  <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$OID&UPDATE=1")
  </SCRIPT>
<?/MIVAR>

