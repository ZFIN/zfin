<!-- FILE: do-markerupdate.html

Commits the updates requested in the forms tossed up by
markerupdate.html. Also files update record.


<html>
EXPECTED VARS:
OID -- the zdb_id of the rec to update
attr -- the column to be updated
attr_type -- textarea,text,or pic
new_value -- the new value to stick in the column
old_value -- the previous value
xtra_param -- to pass an extra parameter
comments -- reasons for doing update 
target_table -- either anon_marker or gene, depending on what you're 
updating
info -- optional value used to pass in additional info
dataOID -- the zdbid of the attributed item

-->

<META HTTP-EQUIV="EXPIRES" CONTENT="-2d">
<!-- If one of the values was an empty string, it won't get successfully
  -- passed to this page. 
  -->
<?MIVAR COND="$(NXST,$old_value)" NAME=$old_value><?/MIVAR>
<?MIVAR COND="$(NXST,$new_value)" NAME=$new_value><?/MIVAR>

<?MIVAR COND="$(NXST,$xtra_param)" NAME=$xtra_param>alias<?/MIVAR>
<?MIVAR COND="$(NXST,$dataOID)" NAME=$dataOID><?/MIVAR>
<?MIVAR COND="$(NXST,$info)" NAME=$info><?/MIVAR>


<!-- First check security. Main purpose is just to get submitter id and 
name -->

<?MIBLOCK 
COND="$(OR,$(EC,$attr,putgene_putative_gene_name),$(EC,$attr,putgene_comments),$(EC,$attr,comments))">
  <?MISQL SQL="
    select WebExplode(object,'permission=root') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>
<?MIELSE>
  <?MISQL SQL="
    select WebExplode(object,'permission=owns&rtype=$target_table') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>
<?/MIBLOCK>

<?MIBLOCK COND="$(NC,$AUTHORIZED,false)">

  <?MIVAR COND="$(NXST,$new_value)" NAME=$new_value>NULL<?/MIVAR>
  <?MIVAR COND="$(NXST,$comments)" NAME=$comments>NULL<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-listitem)" NAME=$comments>Deleted 
the record $old_value from the list of $attr associated with this 
marker.<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-newortho)" NAME=$comments>Created 
a new orthologue record for species=$old_value for this record.<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-newseqnum)" NAME=$comments>Created 
new link to sequence DB: $old_value for this record.<?/MIVAR>


  <?MIVAR COND="$(EC,$attr_type,special-newmrkrrel)" 
NAME=$comments>Created new marker relationship of relationship: $old_value 
for this record.<?/MIVAR>

  <?MIVAR COND="$(EC,$attr_type,special-newattrib)" NAME=$comments>Add new 
data attribution: $old_value to $new_value for this record.<?/MIVAR>

  <?MIVAR NAME=$new_value DELIMIT="'" REPLACE="''">$new_value<?/MIVAR>
  <?MIVAR NAME=$old_value DELIMIT="'" REPLACE="''">$old_value<?/MIVAR>
  <?MIVAR NAME=$comments DELIMIT="'" REPLACE="''">$comments<?/MIVAR>
  <!-- insert update record for the update! -->
  <?MISQL SQL="
    insert into updates 
        (submitter_id,submitter_name, rec_id, field_name, old_value, 
comments,
         when) 
      values ('$ZDB_ident', '$ZDB_name','$OID', '$attr',  '$old_value', 
              '$comments', current);">
  <?/MISQL>

  <!-- OK, NOW UPDATE THE  ACTUAL DATA RECORD. -->
  <?MIBLOCK 
COND="$(AND,$(NC,$attr,dalias_alias),$(NC,$attr,putgene_comments),
		      $(NC,$attr,putgene_putative_gene_name),
                      $(NC,$attr,comments),
		      $(OR,$(EC,$attr_type,text),
		           $(EC,$attr_type,textarea)))">

  <?MISQL SQL="
    update $target_table 
      set $attr='$new_value' 
      where zdb_id='$OID';">
    <?MIBLOCK COND="$(EC,$info,nomenclature)">
    <?MIVAR NAME=comments COND="$(EC,$comments,NULL)">none<?/MIVAR>
    <?MISQL SQL="select max(mhist_date) from marker_history where mhist_mrkr_zdb_id = '$OID'">
      <?MIVAR NAME=MHIST_DATE>$1<?/MIVAR>
    <?/MISQL>
    <?MISQL SQL="
      update marker_history
        set mhist_reason = '$xtra_param',
            mhist_comments = '$comments'
        where mhist_mrkr_zdb_id = '$OID'
          and mhist_date = '$MHIST_DATE'">
    <?/MISQL>
    <?/MIBLOCK>
  <?/MISQL>

  <?/MIBLOCK>

  <?MIBLOCK COND="$(AND,$(EC,$attr,dalias_alias),
		        $(EC,$attr_type,text))">
    <?MISQL SQL="
      execute function get_id('DALIAS');">
      <?MIVAR NAME=$dalias_zdb_id>$1<?/MIVAR>
    <?/MISQL>
    <?MISQL SQL="
      insert into zdb_active_data
	  (zactvd_zdb_id)
        values 
	  ('$dalias_zdb_id');">
    <?/MISQL>

    <?MISQL SQL="
      insert into data_alias  
	  (dalias_zdb_id, dalias_data_zdb_id, dalias_alias, dalias_group)
        values 
	  ('$dalias_zdb_id', '$OID', '$new_value', '$xtra_param');">
    <?/MISQL>
  <?/MIBLOCK>
  <?MISQL COND="$(OR,$(EC,$attr,putgene_comments),
		      $(EC,$attr,putgene_putative_gene_name))" SQL="
    update putative_non_zfin_gene  
      set $attr='$new_value' 
      where putgene_mrkr_zdb_id='$OID';">
  <?/MISQL>


  <!-- Special case for deleting one of the associated 
orthos/seqs/sources/pubs -->
  <?MIBLOCK COND="$(EC,$attr_type,special-listitem)">

    <?MISQL COND="$(EC,$attr,publication)" SQL="
      delete from record_attribution
	where recattrib_data_zdb_id = '$dataOID'
	  and recattrib_source_zdb_id = '$old_value';">
    <?/MISQL>

    <?MIBLOCK COND="$(EC,$attr,db_link)">
      <!-- $old_value syntax like db_name:acc_num -->
      <!-- separate values -->
      <?MIVAR NAME=delimit>$(POSITION,$old_value,":")<?/MIVAR>
      <?MIVAR NAME=db_name>$(SUBSTR,$old_value,1,$(-,$delimit,1))<?/MIVAR>
      <?MIVAR 
NAME=acc_len>$(-,$(STRLEN,$old_value),$(-,$delimit,1))<?/MIVAR>
      <?MIVAR 
NAME=acc_num>$(SUBSTR,$old_value,$(+,$delimit,1),$acc_len)<?/MIVAR>

      <?MIVAR COND=$(=,0,1)>
	<b>
		db_name = $db_name<br>
		acc_num = $acc_num
	</b>
      <?/MIVAR>

      <?MISQL SQL="
	delete from zdb_active_data
	  where zactvd_zdb_id = 
		( select dblink_zdb_id 
		    from db_link
		    where linked_recid = '$OID'
                      and db_name = '$db_name'
		      and acc_num = '$acc_num' );">
      <?/MISQL>
    <?/MIBLOCK>

    <?MISQL COND="$(EC,$attr,recattrib)" SQL="
      delete from record_attribution
	where recattrib_data_zdb_id = '$dataOID'
	  and recattrib_source_zdb_id = '$old_value';">
    <?/MISQL>

    <?MISQL COND="$(EC,$attr,colattrib)" SQL="
      delete from column_attribution
	where colattrib_data_zdb_id = '$dataOID'
	  and colattrib_source_zdb_id = '$old_value'
	  and colattrib_column_name = '$info';">
    <?/MISQL>

  <?/MIBLOCK>  <!-- ends special listitem case -->

  <!-- Special case for adding new orthos -->
  <?MIBLOCK COND="$(EC,$attr_type,special-newortho)">
    <?MISQL SQL="
      execute function get_id('ORTHO');">
    <?/MISQL>
    <?MIVAR NAME=$ortho_id>$1<?/MIVAR>
    <?MISQL SQL="
      insert into zdb_active_data (zactvd_zdb_id)
	values ('$ortho_id');">
    <?/MISQL>
    <?MISQL SQL="
      insert into orthologue 
          (zdb_id, c_gene_id, ortho_name, ortho_abbrev, organism, 
entry_time)
        values 
('$ortho_id','$OID','$new_value','$info','$old_value',current);">
    <?/MISQL>
  <?/MIBLOCK>  <!-- ends special add_ortho case -->


  <!-- Special case for adding new sequence db link -->
  <?MIBLOCK COND="$(EC,$attr_type,special-newseqnum)">
    <?MISQL SQL="
      execute function get_id('DBLINK');">
    <?/MISQL>
    <?MIVAR NAME=$dblink_zdb_id>$1<?/MIVAR>
    <?MISQL SQL="
      insert into zdb_active_data
          ( zactvd_zdb_id )
        values
          ( '$dblink_zdb_id' );">
    <?/MISQL>
    <?MISQL SQL="
      insert into db_link 
          ( linked_recid, DB_name, acc_num, dblink_zdb_id ,info) 
        values 
	  ( '$OID', '$old_value', '$new_value', '$dblink_zdb_id', '$ZDB_name'||' '||TODAY );">
    <?/MISQL>
  <?/MIBLOCK>  <!-- ends special seqdb case -->



  <!-- ends data alias -->


 

  <!-- Special case for adding new attribution-->
  <?MIBLOCK COND="$(EC,$attr_type,special-newattrib)">
    <!-- check whether the pub zdb id is valid. -->
    <?MISQL SQL="
	   select * from publication
             where zdb_id = '$new_value'	
                ;">
    <?/MISQL>	
    <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
      <?MISQL COND="$(EC,$info,namealias)" SQL="
	   select dalias_zdb_id 
	     from data_alias
	    where dalias_data_zdb_id = '$OID'
	      and dalias_alias = '$old_value'
	    ;">
	<?MIVAR>$(SETVAR,$old_value,$1)<?/MIVAR>
      <?/MISQL>

      <?MISQL COND="$(EC,$info,seqacc)" SQL="
	   select dblink_zdb_id 
	     from db_link
	    where linked_recid = '$OID'
	      and acc_num = '$old_value'
	    ;">
	<?MIVAR>$(SETVAR,$old_value,$1)<?/MIVAR>
      <?/MISQL>	

      <?MIBLOCK COND="$(EC,$info,mrel)">
      <!-- check whether the mrkr abbrev is valid. -->
      <?MISQL SQL="
	   select * from marker
             where mrkr_abbrev = '$old_value'	
                ;">
      <?/MISQL>	
      
      <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
      <!-- Attribution contains & contained in relationship --> 
      <!--  :check for valid contain(ed) relationship: -->
      <!--  :verify relationship is unattributted: -->
      <!--  :insert attribution: -->
      <?MISQL SQL="
  	   select * from marker, marker_relationship
           where mrkr_abbrev = '$old_value'	
             and mrel_mrkr_1_zdb_id = mrkr_zdb_id
                 ;">
      <?/MISQL>	  
        <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">

      
        <?MISQL SQL="
	   select mrel_zdb_id 
	     from marker_relationship, marker
	    where mrel_mrkr_2_zdb_id = '$OID'
	      and mrel_mrkr_1_zdb_id = mrkr_zdb_id
	      and mrkr_abbrev = '$old_value'
	    ;">
	  <?MIVAR>$(SETVAR,$data_value,$1)<?/MIVAR>
        <?/MISQL>
	<?MIBLOCK COND="$(XST,$data_value)">
          <?MISQL SQL="
            select * from record_attribution
            where recattrib_data_zdb_id = '$data_value'
              and recattrib_source_zdb_id = '$new_value'">
          <?/MISQL>
          <?MISQL COND="$(=,$MI_ROWCOUNT,0)" SQL="
	      insert into record_attribution
		  (recattrib_data_zdb_id, recattrib_source_zdb_id) 
                values('$data_value', '$new_value')
                  ;">
          <?/MISQL>
          <?MIVAR>$(UNSETVAR,$data_value)<?/MIVAR>
        <?/MIBLOCK> <!-- end xst $data_value -->
        
        <?/MIBLOCK> <!-- mrkr_abbrev is valid for mrel_mrkr_1 -->

      <?MISQL SQL="
  	   select * from marker, marker_relationship
           where mrkr_abbrev = '$old_value'	
             and mrel_mrkr_2_zdb_id = mrkr_zdb_id
                 ;">
      <?/MISQL>	  
        <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">   

        <?MISQL SQL="
	   select mrel_zdb_id 
	     from marker_relationship, marker
	    where mrel_mrkr_1_zdb_id = '$OID'
	      and mrel_mrkr_2_zdb_id = mrkr_zdb_id
	      and mrkr_abbrev = '$old_value'
	    ;">
	  <?MIVAR>$(SETVAR,$data_value,$1)<?/MIVAR>
        <?/MISQL>	
        <?MIBLOCK COND=$(XST,$data_value)">
          <?MISQL SQL="
                  select * from record_attribution
                  where recattrib_data_zdb_id = '$data_value'
                    and recattrib_source_zdb_id = '$new_value'">
          <?/MISQL>

          <?MISQL COND="$(=,$MI_ROWCOUNT,0)" SQL="
              insert into record_attribution
                  (recattrib_data_zdb_id, recattrib_source_zdb_id) 
                   values('$data_value', '$new_value')
              ;">
          <?/MISQL>
        <?/MIBLOCK> <!-- end: xst data_value -->
        <?/MIBLOCK> <!-- end: valid mrkr_abbrev for mrel_mrkr_2 -->
      <?MIELSE>
        <?MIVAR>
 	<script>
	window.alert('ERROR: Reference not added. Marker abbrev "$old_value" was not found in ZFIN.');
	</script>
	<?/MIVAR>
      <?/MIBLOCK> <!-- end: valid abbrev -->
      <?/MIBLOCK> <!-- end: info=mrel -->
      
      <?MIBLOCK COND="$(AND,$(EC,$attr,recattrib),$(NE,$info,mrel))">
         <?MISQL SQL="
	    insert into record_attribution
		(recattrib_data_zdb_id, recattrib_source_zdb_id) 
              values('$old_value', '$new_value')	
                ;">
         <?/MISQL>

      <?MIELSE COND="$(EC,$attr,colattrib)">
         <?MISQL SQL="
	    insert into column_attribution
		(colattrib_data_zdb_id, colattrib_column_name, 
colattrib_source_zdb_id)
              values('$old_value','$info', '$new_value')	
                ;">
         <?/MISQL>
      <?/MIBLOCK>
    <?MIELSE> 
      <?MIVAR>
 	<script>
	window.alert('ERROR: Pub ZdbId $new_value is not in ZFIN, please check.');
	</script>
      <?/MIVAR>
   <?/MIBLOCK> 
  <?/MIBLOCK>


  <!-- Special case for adding new segemnt relationship -->
  <?MIBLOCK COND="$(EC,$attr_type,special-newmrkrrel)">
    <?MISQL SQL="
      execute function get_id('MREL');">
    <?/MISQL>
    <?MIVAR NAME=$mrkrrel_zdb_id>$1<?/MIVAR>
    <?MISQL SQL="
      insert into zdb_active_data
          ( zactvd_zdb_id )
        values
          ( '$mrkrrel_zdb_id' );">
    <?/MISQL>
    <?MISQL SQL="
	select mrkr_zdb_id
	from marker
	where mrkr_abbrev = '$new_value';">
    <?/MISQL>
    <?MIVAR NAME=$ptnerId>$1<?/MIVAR>
    <?MIVAR NAME=$reltype>$(SUBSTR,$old_value,6)<?/MIVAR>
    <?MIBLOCK COND="$(AND,$(NC,$ptnerId,NULL),$(NC,$ptnerId,NOVALUE))">
      <?MISQL COND="$(>,$(POSITION,$old_value,1to2),0)" SQL="
       insert into marker_relationship 
          ( mrel_zdb_id, mrel_type, mrel_mrkr_1_zdb_id, mrel_mrkr_2_zdb_id 
) 
        values 
	  ( '$mrkrrel_zdb_id', '$reltype', '$OID','$ptnerId');">
      <?/MISQL>
      <?MISQL COND="$(>,$(POSITION,$old_value,2to1),0)" SQL="
        insert into marker_relationship 
          ( mrel_zdb_id, mrel_type, mrel_mrkr_1_zdb_id, mrel_mrkr_2_zdb_id 
) 
        values 
	  ( '$mrkrrel_zdb_id', '$reltype', '$ptnerId', '$OID');">
      <?/MISQL>
    <?MIELSE>
	<script>
	window.alert('ERROR: Symbol is not in ZFIN.');
	</script>

    <?/MIBLOCK>	
  <?/MIBLOCK> 



  <!-- Special case for deleting an alias -->
  <?MIBLOCK COND="$(EC,$attr_type,delete-alias)">
    <?MISQL COND="$(EC,$attr,dalias_alias)" SQL="
      delete from zdb_active_data
        where zactvd_zdb_id = 
		( select dalias_zdb_id
		    from data_alias
		    where dalias_data_zdb_id = '$OID'
		      and dalias_alias = '$old_value' ) ;">
    <?/MISQL>
  <?/MIBLOCK>
  
  <!-- Special case for deleting a marker relationship -->
  <?MIBLOCK COND="$(EC,$attr_type,delete-mrkrrelation)">
     <?MISQL COND="$(EC,$attr,marker_relationship)" SQL="
	delete from zdb_active_data
        where zactvd_zdb_id = 
	     (select mrel_zdb_id
                from marker_relationship
	       where (mrel_mrkr_1_zdb_id = '$OID'
                   and mrel_mrkr_2_zdb_id ='$old_value') 
		 or  (mrel_mrkr_1_zdb_id ='$old_value'
                   and  mrel_mrkr_2_zdb_id= '$OID')
		 and mrel_type = '$info') ;">
     <?/MISQL>
  <?/MIBLOCK>
   	

  
  <!-- Special case for deleting a marker relationship -->
  <?MIBLOCK COND="$(EC,$attr_type,delete-mrkrrelation)">
     <?MISQL COND="$(EC,$attr,marker_relationship)" SQL="
	delete from zdb_active_data
        where zactvd_zdb_id = 
	     (select mrel_zdb_id
                from marker_relationship
	       where (mrel_mrkr_1_zdb_id = '$OID'
                   and mrel_mrkr_2_zdb_id ='$old_value') 
		 or  (mrel_mrkr_1_zdb_id ='$old_value'
                   and  mrel_mrkr_2_zdb_id= '$OID')
		 and mrel_type = '$info') ;">
     <?/MISQL>
  <?/MIBLOCK>
  
  <!-- Special case for updating Nomenclature Comments -->
  <?MIBLOCK COND="$(EC,$attr,comments)">
    <?MIVAR NAME=SQL1>update $target_table set $info$attr = '$new_value' where $info<?/MIVAR>
    <?MIVAR NAME=SQL2>zdb_id = '$OID';<?/MIVAR>
    <?MISQL SQL="$SQL1$SQL2"><?/MISQL>
  <?/MIBLOCK>
   	

<?/MIBLOCK> <!-- ends cond authorized -->

<!-- okay, now just bail back to the markerview to view results -->
<?MIVAR>
  <SCRIPT>
  
location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$OID&UPDATE=1")
  </SCRIPT> 
<?/MIVAR>

