	
<!-- FILE: mseglister.apg -->

<HTML>
 <HEAD>
  <?MIVAR Name=page_name>$(IF,$(XST,$query_results),ZFIN Molecular Segmet Search Results,ZFIN Search Molecular Segments)<?/MIVAR>
  <?MIVAR><TITLE>$page_name</TITLE><?/MIVAR>

<SCRIPT>

function call_reset() {
document.msegform.name.value = "";
document.msegform.START.value = "";
document.msegform.refcross.selectedIndex = 0;
document.msegform.lg.selectedIndex = 0;
document.msegform.compare.selectedIndex = 0;
document.msegform.segment_contains_type.selectedIndex = 0;
document.msegform.segment_contains_text.value = "";
document.msegform.sequence_type.selectedIndex = 0;
document.msegform.vector_type.selectedIndex = 0;
document.msegform.WINSIZE.value = 20;

}
function check_syns(item) {
  if (item.options.selectedIndex>0 && (item.options[item.selectedIndex].text=="MicroSatellite" || item.options[item.selectedIndex].text=="CA-repeat")) {
     alert("In zebrafish, "+ item.options[item.selectedIndex].text + "s are generically classified as SSLPs");
     item.selectedIndex=3;
  }
document.msegform.START.value = "";
}
</SCRIPT>


 <?MIVAR NAME=$OID COND="$(NXST,$OID)">NULL<?/MIVAR>

 <?MISQL SQL="
  select object 
    from webPages 
    where ID = 'aa-chromoscripts.apg';">
  $1
 <?/MISQL>

 </HEAD>
 <BODY>

 <?MIBLOCK COND="$(NXST,$accession)">
  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>
 <?/MIBLOCK>
 <?MIVAR name=$highlight><!--|HIGHLIGHT_COLOR|--><?/MIVAR>


 <!------------------ Results ----------------->
<!--*** data link from pub pages will also use this code 
	$pubId indicates this.
-->

 <?MIVAR COND="$(NXST,$refcross)" NAME=refcross>NULL<?/MIVAR>	 

 <?MIBLOCK  COND="$(OR,$(XST,$query_results),$(XST,$pubId))">  
 
  <?MIVAR NAME=$MI_NULL><?/MIVAR>

  <!-- THIS NEXT PART IS EXECUTED AFTER THE PERSON ENTERS SOME CRITERIA -->

  <!-- First note that they have searched persons-->
  <?MISQL SQL="
    select WebExplode(object,'') 
     from webPages 
     where ID = 'aa-identify.apg';">
     $1
  <?/MISQL>

  <!-- set userid to ZDB_ID of user or GUEST to be used by the map viewer -->
  <?MIVAR NAME=$userid>GUEST<?/MIVAR>

  <!-- This next part builds up a query piece by piece, based on which criteria 
    were passed in -->

  <?MIVAR NAME=$lg COND="$(NXST,$lg)">0<?/MIVAR>
  <?MIVAR NAME=$segment_contains_type COND="$(NXST,$segment_contains_type)">any<?/MIVAR>
  <?MIVAR COND="$(NXST,$sequence_type)" NAME=$sequence_type>Any<?/MIVAR>
  <?MIVAR COND="$(NXST,$vector_type)" NAME=$vector_type>Any<?/MIVAR>
  <?MIVAR COND="$(NXST,$compare)" NAME=$compare>contains<?/MIVAR>

  <?MIVAR NAME=$mlist SEPARATE="','">$segment_contains_type<?/MIVAR>
  <?MIVAR COND="$(>,$(POSITION,$mlist,any),0)" NAME=$segment_conains_type>any<?/MIVAR>

  <?MIVAR NAME=$vlist SEPARATE="','">$vector_type<?/MIVAR>
  <?MIVAR COND="$(>,$(POSITION,$vlist,any),0)" NAME=$vector_type>any<?/MIVAR>

  <?MIVAR NAME=$slist SEPARATE="','">$sequence_type<?/MIVAR>
  <?MIVAR COND="$(>,$(POSITION,$slist,any),0)" NAME=$segment_conains_type>any<?/MIVAR>

  <!-- First filter name for apostrophes! -->
  <?MIVAR COND="$(XST,$name)" NAME=$name DELIMIT="'" REPLACE="''">$name<?/MIVAR>

  <?MIVAR COND="$(XST,$segment_contains_text)" NAME=$segment_contains_text DELIMIT="'" REPLACE="''">$segment_contains_text<?/MIVAR> 


  <?MIVAR NAME=$wild_card><?/MIVAR>
  <?MIVAR COND="$(NC,$compare,starts)" NAME=$wild_card>%<?/MIVAR>

 <!-- NOW BUILD UP THE CONSTRAINT CLAUSE -->

  <?MIVAR NAME=$constraintList COND="$(NXST,$constraintList)"><?/MIVAR>	

  <?MIVAR>
	$(VECAPPEND, $constraintList," mrkr_zdb_id = clone_mrkr_zdb_id ")
	$(VECAPPEND, $constraintList," clone_vector_name = vector_name ")

  <?/MIVAR>

  <?MIVAR COND="$(XST,$name)">
     <?MIVAR NAME=$mnameConstraint>exists 
				(select 'x' 
               			 from all_map_names 
               			 where allmapnm_name like '$wild_card$(LOWER,$name)%' 
				 and mrkr_zdb_id = allmapnm_zdb_id)
     <?/MIVAR>
     $(VECAPPEND, $constraintList, $mnameConstraint )
  <?/MIVAR>


  <?MIVAR NAME=$mrel_constraint> <?/MIVAR>
  <?MIVAR NAME=$mrel_previous> <?/MIVAR>
  <?MIVAR NAME=$mrel_constraint COND="$(AND,$(XST,$segment_contains_type),$(NC,$segment_contains_type,any))"> m2.mrkr_type in ('$mlist') <?/MIVAR>
  <?MIVAR NAME=$mrel_previous COND="$(AND,$(XST,$segment_contains_type),$(NC,$segment_contains_type,any))"> and <?/MIVAR> 
  <?MIVAR NAME=$mrel_constraint COND="$(XST,$segment_contains_text)"> $mrel_constraint $mrel_previous m2.mrkr_abbrev like '%$segment_contains_text%' <?/MIVAR> 
  <?MIVAR COND="$(OR, $(AND,$(XST,$segment_contains_type),$(NC,$segment_contains_type,any)),    $(XST,$segment_contains_text))">
      <?MIVAR NAME=$mrelConstraint>exists (select 'x' from marker_relationship mr2, marker m2 where mr2.mrel_mrkr_1_zdb_id = m1.mrkr_zdb_id and mr2.mrel_mrkr_2_zdb_id = m2.mrkr_zdb_id and $mrel_constraint )<?/MIVAR>

      $(VECAPPEND, $constraintList, $mrelConstraint )
  <?/MIVAR>


   <!---- sequence type --->
  <?MIVAR COND="$(AND,$(XST,$sequence_type),$(NC,$sequence_type,any))">
     <?MIVAR NAME=$clnConstraint>clone_sequence_type in ('$slist')<?/MIVAR>
     $(VECAPPEND, $constraintList, $clnConstraint )
  <?/MIVAR>

  <?MIVAR NAME=$clone_join> outer <?/MIVAR>
  <?MIVAR NAME=$clone_join COND="$(AND,$(XST,$sequence_type),$(NC,$sequence_type,any))"> <?/MIVAR>

   <!--- end sequence type --->


   <!--- vector type -->
  <?MIVAR COND="$(AND,$(XST,$vector_type),$(NC,$vector_type,any))">
     <?MIVAR NAME=$vecConstraint>vector_type_name in ('$vlist')<?/MIVAR>
     $(VECAPPEND, $constraintList, $vecConstraint )
  <?/MIVAR>

  <?MIVAR NAME=$vector_join> outer <?/MIVAR>
  <?MIVAR NAME=$vector_join COND="$(AND,$(XST,$vector_type),$(NC,$vector_type,any))"> <?/MIVAR>
  <?MIVAR NAME=$clone_join COND="$(AND,$(XST,$vector_type),$(NC,$vector_type,any))"> <?/MIVAR> <!-- req's clone to get to vector -->

   <!--- end vector type -->

   <!-- vector and clone -->
  <?MIVAR NAME=$clone_and_vector COND="$(AND,$(AND,$(XST,$vector_type),$(NC,$vector_type,any)),$(AND,$(XST,$sequence_type),$(NC,$sequence_type,any)))">, clone, vector  <?/MIVAR>
  
   <!-- not vector and clone --> 
  <?MIVAR NAME=$clone_and_vector COND="$(AND,$(OR,$(NXST,$vector_type),$(EC,$vector_type,any)),$(AND,$(XST,$sequence_type),$(NC,$sequence_type,any)))">, clone, outer vector<?/MIVAR>

   <!-- vector and not clone -->
  <?MIVAR NAME=$clone_and_vector COND="$(AND,$(AND,$(XST,$vector_type),$(NC,$vector_type,any)),$(OR,$(NXST,$sequence_type),$(EC,$sequence_type,any)))">, vector, outer clone<?/MIVAR>

   <!-- not vector and not clone -->
  <?MIVAR NAME=$clone_and_vector COND="$(AND,$(OR,$(NXST,$vector_type),$(EC,$vector_type,any)),$(OR,$(NXST,$sequence_type),$(EC,$sequence_type,any)))">, outer (clone, vector)<?/MIVAR>

  <!-- split the constraints that not related to mapping info -->
  <?MIVAR NAME=$constraint1>
	$(SEPARATE,$constraintList,AND)
  <?/MIVAR>	


  <!-- collect and split the constraints that are related to mapping info -->
 
  <?MIVAR NAME=$constraintm COND="$(NXST,$constraintm)"><?/MIVAR>	
  <?MIVAR NAME=$constraintl COND="$(NXST,$constraintl)"><?/MIVAR>

  <?MIVAR COND="$(NC,$lg,0)">
     <?MIVAR NAME=$lgConstraintm>(or_lg='$lg' or or_lg='0') and private='f'
     <?/MIVAR>
     <?MIVAR NAME=$lgConstraintl>(lnkg_or_lg='$lg' or lnkg_or_lg='0') and lnkg_private='f'
     <?/MIVAR>
	
     $(VECAPPEND, $constraintm, $lgConstraintm )
     $(VECAPPEND, $constraintl, $lgConstraintl )
  <?/MIVAR>

  <?MIVAR COND="$(NC,$refcross,NULL)">
       $(VECAPPEND, $constraintm, panels.zdb_id='$refcross' )
       $(VECAPPEND, $constraintl, lnkg_zdb_id = '$refcross' ) 		
  <?/MIVAR>

  <?MIVAR>
	$(SETVAR,$constraintm,$(SEPARATE,$constraintm,AND))
	$(SETVAR,$constraintl,$(SEPARATE,$constraintl,AND))
  <?/MIVAR>	


  <!-- ends cond any constraints specified -->


<!--** for data reverse link from publication table-->

<?MIVAR NAME=$optional_table><?/MIVAR>

<?MIBLOCK COND="$(XST,$pubId)">

  <?MIVAR COND="$(XST,$pubId)" NAME=$optional_table>, record_attribution
  <?/MIVAR>

  <?MIVAR NAME=$constraint1>
	  and  recattrib_source_zdb_id = '$pubId'
	  and  recattrib_data_zdb_id = mrkr_zdb_id
	  and  mrkr_zdb_id = clone_mrkr_zdb_id
 	  and  clone_vector_name = vector_name
  <?/MIVAR>
  <?MIVAR NAME=$constraintm><?/MIVAR>
  <?MIVAR NAME=$constraintl><?/MIVAR>
<?/MIBLOCK>

<!-- ***-->

<?MIVAR NAME=$order_clause>order by mrkr_abbrev_order, mrkr_type<?/MIVAR>
<?MIVAR NAME=$select_ending>, mrkr_abbrev_order<?/MIVAR>
<?MIVAR NAME=$tmptable_select_ending>, mrkr_abbrev_order <?/MIVAR>

<!--  Populate temp table based on user constraints.  -->

<?MISQL SQL="
	 select mrkr_abbrev, mrkr_type, mrkr_zdb_id, clone_sequence_type, vector_type_name, mrkr_abbrev_order 
	from marker m1 $clone_and_vector $optional_table
	where mrkr_type <> 'GENE'
 	  $constraint1
	into temp marker_temp with no log;">
<?/MISQL>

<?MISQL SQL="
	select mrkr_abbrev, mrkr_type, lg_location, mrkr_zdb_id, or_lg as OR_lg, panels.zdb_id as target_id, panels.abbrev as target_abbrev, private, mm.metric as metric, clone_sequence_type, vector_type_name, mrkr_abbrev_order
	from marker_temp, mapped_marker mm, panels
	where mrkr_zdb_id = marker_id
	  and refcross_id = panels.zdb_id 
	  $constraintm

	UNION

	select mrkr_abbrev, mrkr_type, NULL::numeric(8,2) as lg_location, mrkr_zdb_id, lnkg_or_lg as OR_lg, lnkg_zdb_id as target_id, NULL::varchar(20) as target_abbrev, lnkg_private as private, NULL::varchar(5) as metric, clone_sequence_type, vector_type_name, mrkr_abbrev_order
	from marker_temp m1, linkage, linkage_member
	where m1.mrkr_zdb_id = lnkgmem_member_zdb_id 
	  and lnkgmem_linkage_zdb_id = lnkg_zdb_id
	  $constraintl
	order by 12, 2
	into temp msegtemp_temp with no log; ">

<?/MISQL>
<?MIVAR NAME=$msegtable>msegtemp_temp<?/MIVAR>

<?MIBLOCK COND="$(OR,$(AND,$(EC,$lg,0),$(EC,$refcross,NULL)), $(XST,$pubId))">
  <?MISQL SQL="
	select a.mrkr_abbrev as mrkr_abbrev, a.mrkr_type as mrkr_type, lg_location, a.mrkr_zdb_id as mrkr_zdb_id, OR_lg, target_id, target_abbrev, private, metric, a.clone_sequence_type as clone_sequence_type, a.vector_type_name as vector_type_name, a.mrkr_abbrev_order as mrkr_abbrev_order
	from marker_temp a, outer msegtemp_temp b
	where a.mrkr_zdb_id = b.mrkr_zdb_id
	order by 12, 2
	into temp mseglister_temp with no log; ">

  <?/MISQL>
 <?MIVAR NAME=$msegtable>mseglister_temp<?/MIVAR>
<?/MIBLOCK>


<!--  Count the number of marker names that will be returned. -->
<!--  query count(*) -->
<?MISQL SQL="
  select distinct mrkr_abbrev, mrkr_type
    from $msegtable;">
<?/MISQL>
<?MIVAR NAME=$num_recs>$MI_ROWCOUNT<?/MIVAR>

<!-- NOW JUST RETRIEVE AND DISPLAY ALL MATCHING ENTRIES. -->

<?MIBLOCK COND="$(=,$num_recs,0)">
    
  <!-- look to see if replaced zdb_id -->

  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-zdb_history.apg';">$1<?/MISQL>

<?/MIBLOCK>

<!--***-->
<?MIBLOCK COND="$(AND,$(NXST,$new_oid),$(XST,$pubId))">
 <table width=100%>
  <tr>
    <td align=center>	
      <?MIVAR>
        <font size="+1">
	  Molecular Probes and Segments List
	  (<b>$num_recs</b> records)
        </font>
      <?/MIVAR>
    </td>
   </tr>
 </table>

<?MIELSE COND="$(NXST,$new_oid)">
 <table width=100% border=0>
  <tr>
    <td width=20%>&nbsp;</td>
    <td width=60% align=center>
      <?MIVAR><font size="+1">
        Molecular Segment Search Results (<b>$num_recs</b> records found.)
      </font><?/MIVAR>
    </td>
    <td width=20% align=center>
      <a href=#modify>Modify Search</a>
      
      <!-- Insert a form with one button. Label button Your Input Welcome -->
        <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
    </td>
  </tr>
</table>
<?/MIBLOCK>

<?MIVAR COND="$(NC,$lg,0)">
  <br>
  <font color="red">PLEASE NOTE:</font> 
  <font size=2> 
  Because you have constrained this search to a specific 
  linkage group, the results shown below <b>do not</b> include 
  confidential mapping results. This is to avoid tacitly giving away 
  linkage group information for these markers.
  </font>
<?/MIVAR>

<br>


<!-- Stuff to control retrieval volume -->
<form method=post 
      name=mseglister 
      action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">
  <?MIVAR>
    <input type=hidden name=MIval value=aa-msegselect.apg>
    
    <input type=hidden name=userid value="$userid">
    <input type=hidden name=compare value="$compare">

  <?/MIVAR>
</FORM>

<?MIBLOCK COND="$(>,$num_recs,0)">
  (Note: cM distances are measured from most telomeric marker)
  <br>

  <TABLE width=100% border=0 cellspacing=0 cellpadding=3 >
    <TR>
      <TH>&nbsp;</TH>
      <TH align=left>Segment Name</TH> 
      <TH align=left>Sequence Type</TH> 
      <TH align=left>Vector Type</TH>
      <TH align=left>Map</TH> 
    </TR>

    <?MIVAR NAME=$ok_view_map>0<?/MIVAR>


    <!--- WALKING WINDOW --->
    <!--- Initialization --->
    <?MIVAR NAME=WINSIZE DEFAULT=25>$WINSIZE<?/MIVAR>
    <?MIVAR NAME=BEGIN DEFAULT=1>$START<?/MIVAR>


    <!--- DEFINITION OF RANGES --->
    <?MIVAR NAME=BEGIN>$(IF,$(<,$BEGIN,1),1,$BEGIN)<?/MIVAR> 
    <?MIVAR NAME=END>$(+,$BEGIN,$WINSIZE)<?/MIVAR>


    <!--- EXECUTION --->
    <!--  Set outer loop variables, row_color and ok_view_map -->
    <?MIVAR name=$row_color>$highlight<?/MIVAR>
    <?MIVAR NAME=$ok_view_map>0<?/MIVAR>
    <?MIVAR name=$first_row>1<?/MIVAR>
    <?MIVAR NAME=$rowNUM>$BEGIN<?/MIVAR>

    <!--- Query Database --->
    <?MISQL WINSTART=$BEGIN WINSIZE=$WINSIZE SQL="
	  select distinct mrkr_abbrev, mrkr_type, mrkr_zdb_id, private
		 $tmptable_select_ending , clone_sequence_type, vector_type_name
	    from $msegtable
	    $order_clause;">
	  <?MIVAR NAME=$abbrev>$1<?/MIVAR>
	  <?MIVAR NAME=$marker_type>$2<?/MIVAR>
	  <?MIVAR NAME=$OID>$3<?/MIVAR>
	  <?MIVAR NAME=$private>$4<?/MIVAR>
	  <?MIVAR NAME=$clone_sequence_type>$6<?/MIVAR>
	  <?MIVAR NAME=$vector_type_name>$7<?/MIVAR>
	
	  <?MIVAR NAME=$viewer>aa-markerview.apg<?/MIVAR>

      <!-- create form for each marker  -->
      <!-- get rid of dashes to avoid javascript error -->

      <?MIVAR NAME=$form_name DELIMIT="-" REPLACE="">$OID<?/MIVAR>

      <form method=post  
	    action="/<!--|CGI_BIN_DIR_NAME|-->/view_mapplet.cgi"
	    name="$form_name">

	<?MIVAR name=$first_row>1<?/MIVAR>

	  $(IF,$(>,$(POSITION,$OID,LOCUS),0),
	    $(SETVAR,$viewer,aa-locusview.apg))              

	  $(IF,$(>,$(POSITION,$OID,FISH),0),
	    $(SETVAR,$viewer,aa-fishview.apg))
<!-- Column 1, Segment Name -->

	  <?MIBLOCK COND="$(EC,$first_row,1)">
	    <!-- start new row and column -->
	    <TR bgcolor="<?MIVAR>$row_color<?/MIVAR>">
	      <TD valign=top>&nbsp;</TD>

		<?MIVAR name=$rowNUM>$(+,$rowNUM,1)<?/MIVAR>

		<?MIVAR>
		  <TD valign=top> <font size=2>
            $(IF,$(XST,$return_rec),<A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-select.apg&return_rec=$return_rec&new_oid=$OID>SELECT</A>)
		    $marker_type:<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=$viewer&OID=$OID">$abbrev</A>
		  </TD>
		<?/MIVAR>
	  <?/MIBLOCK>


	  <?MIBLOCK COND="$(EC,$first_row,0)">
	    <!--   start new row and column   -->
	    <TR bgcolor="<?MIVAR>$row_color<?/MIVAR>">
	      <TD><font size=1> &nbsp;</font></TD>
	      <TD>&nbsp;</TD>
	  <?/MIBLOCK>
<!-- /Column 1, Segment Name -->

<!-- Column 2, Sequence Type -->
	<TD> 
	 <?MIVAR>$clone_sequence_type<?/MIVAR>
        </TD> 
<!-- /Column 2, Sequence Type -->

<!-- Column 3, Vector Type -->
	<TD> 
	 <?MIVAR>$vector_type_name<?/MIVAR>
        </TD> 
<!-- /Column 3, Vector Type -->

	<TD>
<!-- also sends abbrev & marker_type -->
<?MISQL SQL="select WebExplode(object,'&mapdetails_mode=mini') from webPages where ID='aa-mappingdetail.apg';">$1<?/MISQL>
	</TD>


	  <?MIVAR name=$first_row>0<?/MIVAR>

	<!--    change row_color    -->
	<?MIBLOCK>
	  <?MIBLOCK COND="$(EC,$row_color,$highlight)">     
	    <?MIVAR name=$row_color>#FFFFFF<?/MIVAR>
	  <?MIELSE COND="$(EC,$row_color,#FFFFFF)">      
	    <?MIVAR name=$row_color>$highlight<?/MIVAR>
	  <?/MIBLOCK>
	<?/MIBLOCK>

	<!-- end form for map_marker -->         
      </FORM>

      <!-- end outer SQL -->
    <?/MISQL>

  </TABLE>

  <BR>

  <Center>
  <Table width="70%" border="0">
    <tr>
      <td width="45%" align=right valign=top>&nbsp;

	<!-- to be used by walking windows -->
        <!-- want GET string as short as possible - append only when variable exists, buffer overflow may cause segmentation fault -->
        <?MIVAR name=comment>  Build array of user data  <?/MIVAR>
	<?MIVAR name=selector>MIval=aa-msegselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
        <?MIVAR name=UserInput><?/MIVAR>
	<!--***-->
	<?MIBLOCK COND="$(NXST,$pubId)">
	<?MIVAR name=UserInput COND=$(XST,$lg)>$UserInput&lg=$lg<?/MIVAR>
	<?MIVAR name=UserInput COND=$(XST,$refcross)>$UserInput&refcross=$refcross<?/MIVAR>
	<?MIVAR name=UserInput COND=$(XST,$segment_contains_type)>$UserInput&segment_contains_type=$segment_contains_type<?/MIVAR>
	<?MIVAR name=UserInput COND=$(XST,$compare)>$UserInput&compare=$compare<?/MIVAR>
        <?MIVAR name=UserInput COND=$(XST,$return_rec)>$UserInput&return_rec=$return_rec<?/MIVAR>
        <?MIVAR name=UserInput COND=$(XST,$name)>$UserInput&name=$(URLENCODE,$name)<?/MIVAR>  
	<?MIVAR name=UserInput COND=$(XST,$sequence_type)>$UserInput&sequence_type=$sequence_type<?/MIVAR>
	<?MIVAR name=UserInput COND=$(XST,$vector_type)>$UserInput&vector_type=$vector_type<?/MIVAR>

        <?MIVAR name=UserInput COND=$(XST,$segment_contains_text)>$UserInput&segment_contains_text=$(URLENCODE,$segment_contains_text)<?/MIVAR>  
        <?MIVAR name=UserInput COND=$(XST,$query_results)>$UserInput&query_results=$(URLENCODE,$query_results)<?/MIVAR>  
	
	<?MIELSE>
         <?MIVAR name=$UserInput>$UserInput&pubId=$pubId<?/MIVAR>
        <?/MIBLOCK>


	<!--- Return to the previous set of Rows --->
	<?MIBLOCK COND="$(>,$BEGIN,1)">

	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$(-,$BEGIN,$WINSIZE)&BEGIN=$BEGIN&$selector$UserInput">Prev</A>&nbsp;&nbsp;&nbsp;&nbsp;<br>

	    <!-- If current not First Page, create link to first page. -->
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=1&BEGIN=1&$selector$UserInput">First Page</A>

	  <?/MIVAR>

	<?/MIBLOCK>

      </td>


      <!-- Calculate 3 pages before and 3 pages after current page. -->
      <?MIVAR name=$CURRENT>$(FIX,$(+,$(/,$BEGIN,$WINSIZE),1))<?/MIVAR>


      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,3)),0)">
	<td valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,3))"> $(-,$CURRENT,3)</A> <?/MIVAR>
	</td>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,2)),0)">
	<td valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,2))"> $(-,$CURRENT,2)</A><?/MIVAR>
	</td>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,1)),0)">
	<td valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,1))"> $(-,$CURRENT,1)</A><?/MIVAR>
	</td>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>,$num_recs,$WINSIZE)">
	<td align=center valign=top>
	  <?MIVAR> $CURRENT <?/MIVAR>
	</td>
      <?/MIBLOCK>


      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,1)),$num_recs)>
	<td valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$END"> $(+,$CURRENT,1)</A>
	</td>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,2)),$num_recs)>
	<td valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,2))"> $(+,$CURRENT,2)</A>
	</td>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,3)),$num_recs)>
	<td valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,3))"> $(+,$CURRENT,3)</A>
	</td>
      <?/MIVAR>

      <td width="45%" align=left valign=top>&nbsp;

	<!--- Get the next set of Rows --->
	<?MIBLOCK COND="$(<=,$(+,$BEGIN,$WINSIZE),$num_recs)">
	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$END&BEGIN=$BEGIN&$selector$UserInput">Next</A><br>
	  <?/MIVAR>


	  <!-- Calculate last page -->
	  <?MIVAR name=$START COND="$(=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(-,$(/,$num_recs,$WINSIZE),1),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR name=$START COND="$(!=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(FIX,$(/,$num_recs,$WINSIZE)),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$START&$selector$UserInput">Last Page</A>
	  <?/MIVAR>
	<?/MIBLOCK>

	&nbsp;

      </td>
    </tr>
  </Table>
  </Center>
<?/MIBLOCK>  <!-- end # rows > 0 -->

 <?MIBLOCK COND="$(AND,$(EC,$lg,0),$(EC,$refcross,NULL))"> 
  <?MISQL SQL="
  -- insert (actually any statement will do) is necessary to avoid an error
  insert into mseglister_temp (mrkr_abbrev) values (NULL);
  drop table mseglister_temp;">
  <?/MISQL>
 <?/MIBLOCK>

 <?MISQL SQL="
  -- insert (actually any statement will do) is necessary to avoid an error
  insert into marker_temp (mrkr_abbrev) values (NULL);
  drop table marker_temp;">
 <?/MISQL>

 <?MISQL SQL="
  -- insert (actually any statement will do) is necessary to avoid an error
  insert into msegtemp_temp (mrkr_zdb_id) values (NULL);
  drop table msegtemp_temp;">
 <?/MISQL>

<?/MIBLOCK>

 <!----------------- /Results ------------------->



 <!----------------- Query Form ----------------->  
<!--***-->
<?MIBLOCK COND="$(NXST,$pubId)">
 <TABLE class="search" width=100% border=0 cellpadding=1 cellspacing=0>
    <TR>
      <TD colspan=2 class=titlebar>
        &nbsp;&nbsp;

        <?MIBLOCK COND="$(NXST,$query_results)">
	 <b>Search for MOLECULAR SEGMENTS</b>
        <?MIELSE>
	 <a name="modify"></a><b>Modify your search.</b>
        <?/MIBLOCK>
      </TD>
     </TR>
     <FORM name="msegform" method="post" action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->" >
      <?MIVAR COND="$(NXST,$compare)" NAME=$compare>contains<?/MIVAR>
      <?MIVAR COND="$(NXST,$lg)" NAME=$lg>0<?/MIVAR>
      <?MIVAR COND="$(NXST,$segment_contains_type)" NAME=$segment_contains_type>NULL<?/MIVAR>
      <?MIVAR NAME=$refcross COND="$(NXST,$refcross)">NULL<?/MIVAR>
      <?MIVAR COND="$(NXST,$sequence_type)" NAME=$sequence_type>NULL<?/MIVAR>
      <?MIVAR COND="$(NXST,$vector_type)" NAME=$vector_type>NULL<?/MIVAR>
      <?MIVAR NAME=$START>1<?/MIVAR>

      <?MIVAR>
     <TR>
      <TD class=halfwidth>
       <b>Segment Name</b> <SELECT name="compare" onChange='document.msegform.START.value = "";'>
	<option $(IF,$(EC,$compare,contains),SELECTED) value=contains>contains
	<option $(IF,$(EC,$compare,starts),SELECTED) value=starts>begins with
       </SELECT>
       <input type=text name=name size=10 onChange='document.msegform.START.value = "";' $(IF,$(XST,$name),value='$name')>
      </TD>
      <TD class=halfwidth>
       <B>LG:</B>
       <SELECT name=lg onChange='document.msegform.START.value = "";'>
	<?MISQL SQL="select distinct lg_name,lg_order from linkage_group order by lg_order"> 
	 <option value="$1" $(IF,$(EC,$lg,$1),SELECTED) >$(IF,$(EC,$1,0),any,$1)
	<?/MISQL>
       </SELECT>
       	&nbsp;<b>Panel:</b> 
	<SELECT name=refcross onChange='document.msegform.START.value = "";'>
	  <option select value=NULL>ANY
	  <?MISQL SQL="select zdb_id,abbrev,ptype from panels;">
	    <option $(IF,$(EC,$refcross,$1),SELECTED) value=$1>$2($3 panel)
	  <?/MISQL>
	</SELECT>
      </TD>
     </TR>
     <TR>
      <TD class=halfwidth valign=top>
	<table><tr><td align=top>
	 <b>Segment Contains:</b>
	</td>
	<td>
	 <SELECT name="segment_contains_type" onChange="check_syns(this)"> 
	  <option $(IF,$(EC,$segment_contains_type,NULL),SELECTED) value="any">All types
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,GENE),0),SELECTED) >GENE
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,MUTANT),0),SELECTED) >MUTANT
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,EST),0),SELECTED)>EST
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,SSLP),0),SELECTED) >SSLP
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,RAPD),0),SELECTED)>RAPD
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,STS),0),SELECTED)>STS
	  <option $(IF,$(>,$(POSITION,$segment_contains_type,SSR),0),SELECTED)>SSR
	  <option value="SSLP">MicroSatellite
	  <option value="SSLP">CA-repeat
	 </SELECT>
	<INPUT type=text name=segment_contains_text size=10  $(IF,$(XST,$segment_contains_text),value='$segment_contains_text')  >
	</td>
       </tr></table>
      </TD>
      <TD class=halfwidth>
	<B>Sequence Type:</B>
	<SELECT name="sequence_type">
	  <OPTION SELECTED value="any">Any
	 <?MISQL SQL="select seqtype_name from sequence_type;">
          <OPTION $(IF,$(>,$(POSITION,$sequence_type,$1),0),SELECTED) value="$1">$1
         <?/MISQL>
        </SELECT>
      </TD>
     </TR>
     <TR>
    <?/MIVAR>
     <TD class=resultcount>
	Display results in groups of 
	<input type="text" name="WINSIZE" size="3" value="20" 
	       onChange='document.msegform.START.value = "";' 
	       $(IF,$(XST,$WINSIZE),value='$WINSIZE')>.

	<?MIBLOCK COND="$(AND,$(NOT,$(ISNULL,$WINSIZE)),$(XST,$WINSIZE))">
	  <?MIVAR> 
	    <SCRIPT> 
	      document.msegform.WINSIZE.value = "$WINSIZE" 
	    </SCRIPT>
	  <?/MIVAR> 
	<?/MIBLOCK>
      </TD>
      <TD class=halfwidth>
	<b>Vector Type:</b>&nbsp;
	<SELECT name="vector_type">
	  <OPTION SELECTED value="any">Any
	 <?MISQL SQL="select vectype_name from vector_type;">
          <OPTION $(IF,$(>,$(POSITION,$vector_type,$1),0),SELECTED) value="$1">$1
         <?/MISQL>
        </SELECT>
      </TD>
    </tr>
    <tr>
      <TD class=submitbar colspan=2 align="right">
       <?MIVAR>

        <input type=hidden name=MIval value=aa-msegselect.apg>
        <input type=hidden name=query_results value="exist">
       <?/MIVAR>
	<input type=submit name=action value="SEARCH" 
	       onSubmit="document.msegform.submit();">
	<input type=button value="RESET" onClick="call_reset()";>  
      </TD>
    </TR>
    </TABLE>

    <?MIVAR>
      <input type=hidden NAME="START" value=1>
    <?/MIVAR>
      </form>
  <?/MIBLOCK>
    <?MIBLOCK COND="$(NXST,$accession)">
    <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>
    <?/MIBLOCK>
</HTML>
