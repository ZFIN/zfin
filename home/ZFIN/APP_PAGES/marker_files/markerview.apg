<?MICOMMENT>

FILE: markerview.apg
PREFIX: mrkrview_ (but none replaced as of Feb. 2005)

DESCRIPTION:
This file implements a viewer for MARKER records.

INPUT VARS:
OUTPUT VARS:

EFFECTS:

NOTE:
Because this page drops temporary tables it cannot be webexploded from
inside a select statement.  This page must first be retrieved with a 
select statement and then passed to webexplode from an execute function 
statement.  See discussion of the MIqry2pass variable in the Web
Datablade documentation.
<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>

<?/MIERROR>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<HTML>
<head>
  <META HTTP-EQUIV="EXPIRES" CONTENT="Wed Sep 11 09:35:25 PDT 1996">

  <SCRIPT>
  function start_note() {
    top.zfinhelp=open("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect_note.apg","notewindow","scrollbars=no,toolbar=no,directories=no,menubar=no,status=no,resizable=yes,width=400,height=325");
  }
  
  function call_mapplet() {
	document.mapper.submit();
  }

  function call_zmapplet() {
	document.mapper.action='/<!--|CGI_BIN_DIR_NAME|-->/view_zmapplet.cgi';
	document.mapper.submit();
  }

  function edit_linkage(link_id,oid) {
	window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-edit_linkage.apg&link_id='+link_id+'&OID='+oid)
  }

  function edit_go(oid) {
	window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID='+oid)
  }

  function get_spdesc(oid) {
	window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerspcomments.apg&OID='+oid)
  }
  function start_help() {
   top.zfinhelp=open('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-helpframes.html&calling_page=sequence_tools_help.html',"helpwindow","scrollbars=yes,toolbar=no,directories=no,menubar=no,status=no,resizable=yes,width=800,height=600");
  }
  </SCRIPT>

  <?MIVAR COND="$(AND,$(NXST,$OID),$(XST,$temp_oid))" NAME=$OID>$temp_oid<?/MIVAR>

  <?MISQL SQL="select object from webPages where ID='aa-chromoscripts.apg';">$1  <?/MISQL>


  <SCRIPT>
   function info() {
	window.alert('ANONYMOUS LINKAGE:\n This linkage has not been published yet. ZFIN supports anonymous linkages to promote scientific \ncollaboration; you should contact the submitter of this mapping data (just click the link) \nto negotiate access to this information.');
   }
  //  initialize view_mapplet parameters   
   marker = '';

  </SCRIPT>
</HEAD>


<!------------------------------------------------------>   
<BODY>

<basefont size=2>
<?MIVAR name=$highlight><!--|HIGHLIGHT_COLOR|--><?/MIVAR>

<?MIVAR NAME=$MI_NOVALUE><?/MIVAR>
<?MIVAR NAME=$MI_NULL><?/MIVAR>

<?MIBLOCK COND="$(NXST,$OID)">
  <p>
  ERROR -- something bad happened -- no OID passed in!
<?/MIBLOCK>

<!-- One block till </body> ---------------------------->
<?MIBLOCK COND="$(XST,$OID)">

  <!-- set default value for variables ----------------->
  <?MIVAR COND="$(NXST,$distance)" NAME=$distance><?/MIVAR>
  <?MIVAR COND="$(NXST,$lod)" NAME=$lod><?/MIVAR>
  <?MIVAR COND="$(NXST,$metric)" NAME=$metric><?/MIVAR>
  <?MIVAR COND="$(NXST,$lg)" NAME=$lg><?/MIVAR>
  <?MIVAR COND="$(NXST,$map_comments)" NAME=$map_comments><?/MIVAR>	
  <?MIVAR NAME=$ref_map><?/MIVAR>

  <!-- default user as GUEST---------------------->
  <?MIVAR NAME=$userid>GUEST<?/MIVAR>

  <!-- NOW a slight ugliness that would go away if/when we re-implement the MAP_MARKER stuff as hierarchical classes: we don't know what type up marker we are trying to view, and yet we need to know exactly that in order to know what table to select from. So we first look at ZFIN id to determine type, which determines table
  -->

  <?MIVAR NAME=$target_table COND="$(>,$(POSITION,$OID,GENE),0)">marker<?/MIVAR>
  <?MISQL SQL="
    select mrkr_name, mrkr_type, mrkrtype_type_display, mrkr_abbrev, mrkr_comments 
      from marker, marker_types 
      where mrkr_zdb_id = '$OID'
	and mrkr_type = marker_type;">
  <?/MISQL>
  <?MIVAR NAME=$name>$1<?/MIVAR>
  <?MIVAR NAME=$marker_type>$2<?/MIVAR>
  <?MIVAR NAME=$marker_type_display>$3<?/MIVAR>
  <?MIVAR NAME=$abbrev>$4<?/MIVAR>
  <?MIVAR NAME=$comments>$5<?/MIVAR>
  <?MIVAR NAME=$id_exist COND="$(>,$MI_ROWCOUNT,0)">t<?/MIVAR>

  <?MISQL SQL="
	select * from marker_type_group_member
	 where mtgrpmem_mrkr_type_group='GENEDOM'
	   and mtgrpmem_mrkr_type = '$marker_type';
	">
  <?/MISQL>
  <?MIVAR COND="$(>,$MI_ROWCOUNT,0)" NAME=type_of_genedom>t<?/MIVAR>

  <?MISQL SQL="
	select 't'
          from marker_type_group_member
	 where mtgrpmem_mrkr_type_group='KNOCKDOWN_REAGENT'
	   and mtgrpmem_mrkr_type = '$marker_type'; ">
     <?MIVAR NAME=type_of_knockdown_reagent>t<?/MIVAR>
  <?/MISQL>
  
  <!-- if no match for the entered ID, display not found msg ------>
  <?MIBLOCK COND="$(OR,$(EC,$name,$MI_NOVALUE),$(NXST,$id_exist))">
     <!-- page header display ----------------->
     <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>
     <!-- look to see if replaced zdb_id -->
     <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-zdb_history.apg';">$1<?/MISQL>
    
     <?MIBLOCK COND="$(NXST,$new_oid)">
       <form><center><font size=4>
        <?MIVAR> <b>Requested ID not found on ZFIN.<?/MIVAR></font>      
       </form>
     <?/MIBLOCK>  
 
 
  <?MIELSE> <!-- if entered ID has an entry in ZFIN------------------------>

      <SCRIPT> <!-- functions for update--------------------->
      <?MIVAR COND="$(XST,$UPDATE)">
	function doit(attr,attr_type,print_name) {
		doit(attr,attr_type,print_name,'');
	}
	function doit(attr,attr_type,print_name,xtra_param) {
		window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerupdate.apg&OID=$OID&attr='+attr+'&attr_type='+attr_type+'&print_name='+print_name+'&xtra_param='+xtra_param+'&target_table=marker');
	}

	function Delete_listitem(item_name,item_id) {
		window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr='+item_name+'&attr_type=special-listitem&old_value='+item_id+'&comments=Deleted&target_table=marker');
	}

	function Delete_alias(alias,marker_id) {
 		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=dalias_alias&attr_type=delete-alias&old_value='+alias+'&comments=Deleted&target_table=marker');
	}

        <?MISQL SQL="select WebExplode(object,'jsdelatt_OID=$OID&jsdelatt_Mival=aa-do-markerupdate.apg&jsdelatt_page_var=__attr_type=special-listitem__comments=Deleted__target_table=marker') 
        from webPages where ID='aa-js-delete_attrib.apg';">$1<?/MISQL>
        
        
	function Delete_mrel(mrel_partner_id, type) {
 		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=marker_relationship&attr_type=delete-mrkrrelation&old_value='+mrel_partner_id+'&comments=Deleted&target_table=marker&info='+type);
	}

	function new_ortho() {
		var speciesind=document.updater1.species.selectedIndex;
		var species=document.updater1.species[speciesind].value;
		var oname=document.updater1.oname.value;
		var oabbrev=document.updater1.oabbrev.value;
		if ((oname != '') && (oabbrev != '')) {
  		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=orthologue&attr_type=special-newortho&old_value='+species+'&new_value='+escape(oname)+'&target_table=marker&info='+oabbrev);
  		}
	}

	function new_seqnum() {
		var dbind=document.updateseq.seqdb.selectedIndex;
		var dbname=document.updateseq.seqdb[dbind].value;
		var seq_acc=document.updateseq.seq_acc.value;
		var dbind=document.updateseq.seq_super.selectedIndex;
		var seq_type=document.updateseq.seq_super[dbind].value;
		if ((seq_acc != '')&& (dbname == 'GenBank')) {
  		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&ancor=sequence&OID=$OID&attr=seqnum&attr_type=special-check-newseqnum&old_value='+dbname+'&new_value='+seq_acc+'&target_table=marker&fdbcont_super='+seq_type);
  		}
		else if (seq_acc != '') {
		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&ancor=sequence&OID=$OID&attr=seqnum&attr_type=special-newseqnum&old_value='+dbname+'&new_value='+seq_acc+'&target_table=marker&fdbcont_super='+seq_type);
  		}
	}

	function update_seqnum() {
		var dbind=document.updateseq.upd_seq_zdb.selectedIndex;
		var seq_zdb=document.updateseq.upd_seq_zdb[dbind].value;
		var seq_len=document.updateseq.upd_seq_length.value;
		var dbind=document.updateseq.upd_seq_type.selectedIndex;
		var seq_type=document.updateseq.upd_seq_type[dbind].value;
		if (seq_zdb != '') {
  		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&anchor=sequence&OID=$OID&attr=seqnum&attr_type=special-updateseqnum&old_value=dblink_length&new_value='+seq_len+'&target_table=marker&dataOID='+seq_zdb+'&xtra_param='+seq_type);
  		}
	}
	function new_othernum() {
		var dbind=document.updateother.seqdb.selectedIndex;
		var dbname=document.updateother.seqdb[dbind].value;
		var seq_acc=document.updateother.seq_acc.value;
		var dbind=document.updateother.seq_super.selectedIndex;
		var seq_type=document.updateother.seq_super[dbind].value;
		if (seq_acc != '') {
		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&ancor=other&OID=$OID&attr=seqnum&attr_type=special-newseqnum&old_value='+dbname+'&new_value='+seq_acc+'&target_table=marker&fdbcont_super='+seq_type);
		}
	}
	function setChimericism(old_value) {
	<?MICOMMENT> index 0 = true; index 1 = false <?/MICOMMENT>
				
		if (document.updateseq.chimericism[0].checked) {
		  var isChimeric = 't';
		}
		else {
		  var isChimeric = 'f';
		}
		
		if (isChimeric != old_value) {
  		 window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&anchor=sequence&OID=$OID&attr=clone_is_chimeric&attr_type=boolean&old_value='+old_value+'&new_value='+isChimeric+'&target_table=clone');
  		}
	}
	function new_proseqnum() {
		var dbind=document.updateps.prt_seqdb.selectedIndex;
		var dbname=document.updateps.prt_seqdb[dbind].value;
		var seq_acc=document.updateps.prt_seq_acc.value;
		if (seq_acc != ''){
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=seqnum&attr_type=special-newseqnum&old_value='+dbname+'&new_value='+seq_acc+'&target_table=marker&fdbcont_super=protein&fdbcont_data=domain');
  		}
	}	
	function new_mrkrrel(mrkrrel_type, mrkr_abbrev_value) {
		var mrkr_abbrev = escape(mrkr_abbrev_value);
		mrkrrel_type.replace(/ /,"%20");
		if (mrkr_abbrev != '') {
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=mrkrrel&attr_type=special-newmrkrrel&old_value='+mrkrrel_type+'&new_value='+mrkr_abbrev+'&target_table=marker');
  		}
	}


	function update_nomen_comments(nomen_zdb,comments_obj) {
        	var new_comments = escape(comments_obj.value);
		if ((nomen_zdb != '') && (new_comments != '')) {
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID='+nomen_zdb+'&attr=comments&attr_type=textarea&old_value=$OID&new_value='+new_comments+'&target_table=marker_history&info=mhist_');
  		}
	}


        <?MICOMMENT> Note Can Be Blank. However, the xtra_param variable is set to alias 
          by the updating page when xtra_param is null. An edit has occured, so set 
          note = 'sequence modified'.
        <?/MICOMMENT>
 	function update_mrkrsequence(mrkrseq_zdb,old_seq,new_seq,note) {
 	        if (note == '') {note = 'Sequence Modified';}
 	        note = escape(note.replace(/\n/g, "<br>"));
 		if ((new_seq != '')) {
 		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&dataOID='+mrkrseq_zdb+'&attr=mrkrseq_sequence&attr_type=special&old_value='+old_seq+'&new_value='+new_seq+'&target_table=marker_sequence&xtra_param='+note);
 		}
        }


	function new_attrib_nomen(nomen_zdb,pub_obj) {
        	var pub_id = escape(pub_obj.value);
		if ((nomen_zdb != '') && (pub_id != '')) {
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+nomen_zdb+'&new_value='+pub_id+'&target_table=marker&info=nomen');
  		}
	}

	function new_attrib_mrel(attrmrelform) {
		var mrkr_abbrev=escape(attrmrelform.attrib_mrkr_abbrev.value);
		var pub_id=attrmrelform.attrib_mrel_pubid.value.toUpperCase();
		if ((mrkr_abbrev != '') && (pub_id != '')) {
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+mrkr_abbrev+'&new_value='+pub_id+'&target_table=marker&info=mrel');
  		}
	}
	
	function new_attrib_ssprevname(objform) {
		var prev_name=escape(objform.attrib_ssprevname.value);
		var pub_id=objform.attrib_ssprevname_pubid.value.toUpperCase();
		if ((prev_name != '') && (pub_id != '')) {
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+prev_name+'&new_value='+pub_id+'&target_table=marker&info=namealias');
  		}
	}

	function new_attrib_prevname(objform) {
		var prev_name=escape(objform.attrib_prevname.value);
		var pub_id=objform.attrib_prevname_pubid.value.toUpperCase();
		
		if ((prev_name != '') && (pub_id != '')) {
		  window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+prev_name+'&new_value='+pub_id+'&target_table=marker&info=namealias');
  		}
	}

	function new_attrib_prtnseq() {
		var seq_acc = document.updateps.attrib_prtn_seqacc.value;
		var pub_id = document.updateps.attrib_prtn_pubid.value.toUpperCase();
		if((seq_acc != '')&&(pub_id != '')) {
			window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+seq_acc+'&new_value='+pub_id+'&target_table=marker&info=seqacc');
		}
	}	
	function new_attrib_seq() {
		var seq_acc = document.updateseq.attrib_seq_acc.value;
		var pub_id = document.updateseq.attrib_seq_pubid.value.toUpperCase();
		if((seq_acc != '')&&(pub_id != '')) {
			window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+seq_acc+'&new_value='+pub_id+'&target_table=marker&info=seqacc');
		}
	}
	function new_attrib_other() {
		var seq_acc = document.updateother.attrib_seq_acc.value;
		var pub_id = document.updateother.attrib_seq_pubid.value.toUpperCase();
		if((seq_acc != '')&&(pub_id != '')) {
			window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+seq_acc+'&new_value='+pub_id+'&target_table=marker&info=seqacc');
		}
	}

	function new_attrib_mutant(dataid, objform) {
		var pub_id = objform.attrib_mutant_pubid.value.toUpperCase();
		if((dataid != '')&&(pub_id != '')) {
			window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+dataid+'&new_value='+pub_id+'&target_table=marker&info=cloned_gene');
		}
	}

 	function new_attrib_mrkrseq(dataid) {
 		var pub_id = document.newdata.mrkrview_seq_pubid.value.toUpperCase();
 		if((dataid != '')&&(pub_id != '')) {
 			window.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-markerupdate.apg&OID=$OID&attr=recattrib&attr_type=special-newattrib&old_value='+dataid+'&new_value='+pub_id+'&target_table=marker&info=marker_sequence');
 		}
 	}

        <?/MIVAR> 
      </SCRIPT>

     <!-- user authorization check-------------------------------> 
 
      <?MISQL COND="$(NXST,$UPDATE)" SQL="select WebExplode(object,'page_title=View $marker_type') from webPages where ID='aa-secure_navigation.apg';">$1
      <?/MISQL>
     
      <!-- If updating, only let owner update anything -->
      <?MISQL COND="$(XST,$UPDATE)" SQL="select WebExplode(object,'page_title=Update Gene&permission=owns&rtype=marker') from webPages where ID='aa-secure_navigation.apg';">$1
      <?/MISQL>


      <?MIBLOCK COND="$(NC,$AUTHORIZED,false)"> <!-- if authorized---------->

	  <!-- title for webpage history ----------->	
          <?MIBLOCK COND="$(XST,$UPDATE)">
		<?MIVAR>
 			<TITLE>ZFIN Update: $abbrev</title>
		<?/MIVAR>
	  <?MIELSE>
		<?MIVAR>
 			<TITLE>ZFIN: $marker_type_display: $abbrev </title>
		<?/MIVAR>
          <?/MIBLOCK>
          
	  <!-- page header display ----------------->
  	  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>

	  <!-- NOW JUST TOSS OUT THE RETRIEVED DATA IN A TABLE -->
	  <!-- FIRST THROW UP THE ZDB DATA MANAGER FOR THE RECORD -->

  	   <?MISQL COND="$(NXST,$UPDATE)" SQL="select WebExplode(object,'rtype=marker') from webPages where ID='aa-data_mgr.apg';">$1
	   <?/MISQL>

	  <!----- OKAY, NOW  THROW UP THE  MARKER INFO ------------------>

<!----------------------------------------------------------->       	   
<p>

<?MIVAR COND="$(XST,$UPDATE)"> <!---- define button to go back------>
  
   <form>
     <center><font size=+2>
     <input type=button 
          value=" DONE UPDATING. Back to Viewing! " onClick="document.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$OID')"> 
     </font></center>
   </form> 
<?/MIVAR>

<?MICOMMENT>=========================================================
            ==     Name    &   Input Welcome button
            ==     Symbol (if genedom)
	    =========================================================
<?/MICOMMENT> 
<?MICOMMENT> use table to line up title and your input welcome button
<?/MICOMMENT> 
<table width=100% cellspacing=0>
  <tr>
   <td width=85%>
    <?MIVAR COND="$(XST,$UPDATE)">
    	<INPUT TYPE=button value=Update onClick="doit('mrkr_name','text','$marker_type_display+Name')">
    <?/MIVAR>

    <?MIVAR NAME=$title>$marker_type_display Name<?/MIVAR>
    <FONT size=+1><b>
      <?MIVAR>$title: $(IF,$(XST,$type_of_genedom),<i>$name</i>,$name)<?/MIVAR>
    </b></FONT>
   </td>
   <?MIBLOCK COND="$(NXST,$UPDATE)"> 
    <td width=15% align=right>
     <?MIVAR>
        <form method=post 
              action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->" 
              target=comments>
           <input type=hidden name=subject value="$abbrev">
           <input type=hidden name=marker_id value="$OID">
           <input type=hidden name=MIval value="aa-your_input_welcome.apg">
           <input type=hidden name=page_id value="$OID">
           <td><input type=submit value="Your Input Welcome"></td>         
         </form>
      <?/MIVAR>
    </td>
   <?/MIBLOCK>
  </tr>
  <?MIVAR COND="$(XST,$type_of_genedom)">
    <tr><td colspan=2>
      <?MIVAR COND="$(XST,$UPDATE)">
        <INPUT TYPE=button value=Update onClick="doit('mrkr_abbrev','text','$marker_type_display+Abbrev')">
      <?/MIVAR>
      <FONT size=+1><b>
	$marker_type_display Symbol:&nbsp;<i>$abbrev</i>
      </b></FONT>
    </td></tr>
  <?/MIVAR>
</table>

  
<?MICOMMENT>=========================================================
            ==     Previous Names
	    =========================================================
<?/MICOMMENT> 
<?MIVAR COND="$(XST,$UPDATE)">
  <INPUT TYPE=button 
    value=Add
    onClick="doit('dalias_alias','text','Alias','alias')">
  <b>Previous Names:</b>
<?/MIVAR> 

<?MISQL SQL="
  select dalias_alias, dalias_zdb_id
    from data_alias
    where dalias_data_zdb_id = '$OID' and dalias_group = 'alias';">

  <?MIVAR COND="$(AND,$(=,$MI_CURRENTROW,1),$(NXST,$UPDATE))">
    <b>Previous Names:</b>
  <?/MIVAR>

  <?MIVAR COND="$(AND,$(=,$MI_CURRENTROW,1),$(XST,$UPDATE))">
    <form>
    <br><b>Add Reference:</b> 
    Previous name:<input type=text name=attrib_prevname>	
    Reference:<input type=text name=attrib_prevname_pubid>
    <input type=button value="Add" onClick=new_attrib_prevname(this.form);> 
    </form>
  <?/MIVAR>

  <?MIVAR NAME=$alias>$1<?/MIVAR>
  <?MIVAR NAME=$aliasId>$2<?/MIVAR>
  <?MIVAR COND="$(XST,$alias)" NAME=$alias_plus>$(URLENCODE,$alias)<?/MIVAR>
  <?MIVAR COND="$(XST,$UPDATE)">
    <br> 
    <INPUT TYPE=button 
      value=Delete 
      onClick="Delete_alias('$alias_plus','$OID')">
  <?/MIVAR>
  $(IF,$(AND,$(NXST,$UPDATE),$(>,$MI_CURRENTROW,1)),;) $alias

  <?MIBLOCK COND="$(XST,$aliasId)">	
      <?MISQL SQL="select WebExplode(object,'dataId=$aliasId&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
  <?/MIBLOCK>
	
<?/MISQL>
<?MIVAR COND="$(>,$MI_ROWCOUNT,0)">
    <br>
<?/MIVAR>


<?MICOMMENT>=========================================================
            ==     Sequence Similarities
	    =========================================================
<?/MICOMMENT> 
<?MIVAR NAME="display_sequence_similarity">false<?/MIVAR>

<?MISQL SQL="select count(*) 
	     from data_alias 
	     where dalias_data_zdb_id = '$OID' 
	       and dalias_group = 'sequence similarity';">
  <?MIVAR COND="$(>,$1,0)" NAME="display_sequence_similarity">true<?/MIVAR>
<?/MISQL>

<?MIBLOCK COND="$(EQ,$display_sequence_similarity,true)">

  <?MIVAR COND="$(XST,$UPDATE)">
      <INPUT TYPE=button 
        value=Add
        onClick="doit('dalias_alias','text','Alias','sequence+similarity')">
  <?/MIVAR> 
 
  <b>Keywords and Sequence Similarities:</b>

 <?MISQL SQL="
  select dalias_alias, dalias_zdb_id
    from data_alias
    where dalias_data_zdb_id = '$OID' and dalias_group = 'sequence similarity';">

  <?MIVAR COND="$(AND,$(=,$MI_CURRENTROW,1),$(XST,$UPDATE))">
    <form>
    <br><b>Add Reference:</b> 
    Sequence similarity:<input type=text name=attrib_ssprevname>	
    Reference:<input type=text name=attrib_ssprevname_pubid>
    <input type=button value="Add" onClick=new_attrib_ssprevname(this.form);> 
    </form>
  <?/MIVAR>


  <?MIVAR NAME=$alias>$1<?/MIVAR>
  <?MIVAR NAME=$aliasId>$2<?/MIVAR>
  <?MIVAR COND="$(XST,$alias)" NAME=$alias_plus>$(URLENCODE,$alias)<?/MIVAR>
  <?MIVAR COND="$(XST,$UPDATE)">
    <br> 
    <INPUT TYPE=button 
      value=Delete 
      onClick="Delete_alias('$alias_plus','$OID')">
  <?/MIVAR>
  $(IF,$(AND,$(NXST,$UPDATE),$(>,$MI_CURRENTROW,1)),;) $alias

  <?MIBLOCK COND="$(XST,$aliasId)">	
      <?MISQL SQL="select WebExplode(object,'dataId=$aliasId&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
  <?/MIBLOCK>
	
<?/MISQL>
<?MIVAR COND="$(>,$MI_ROWCOUNT,0)">
    <br>
<?/MIVAR>
<?/MIBLOCK> <?MICOMMENT> end display_sequence_similarity <?/MICOMMENT>


 <?MICOMMENT> 
              ===================
                Marker Sequence  
              ===================
 <?/MICOMMENT>
        
 <?MIVAR NAME=$mrkrview_sequence><?/MIVAR>
 <?MIVAR NAME=$mrkrview_mrkrseq_zdb_id><?/MIVAR>  

 <?MISQL SQL="
   select mrkrseq_sequence, mrkrseq_zdb_id
     from marker_sequence
    where mrkrseq_mrkr_zdb_id = '$OID';">
    <?MIVAR NAME=$mrkrview_sequence>$1<?/MIVAR>
    <?MIVAR NAME=$mrkrview_mrkrseq_zdb_id>$2<?/MIVAR>        
 <?/MISQL>
 
 <?MICOMMENT> get blast linkout url <?/MICOMMENT>
 <?MISQL SQL="select fdb_db_query 
	      from foreign_db 
	     where fdb_db_name ='BLAST';">
    <?MIVAR NAME=fdb_url_blast>$1<?/MIVAR>
 <?/MISQL>
 <?MIVAR NAME=blast_option>&EXPECT=1000&WORD_SIZE=7&ENTREZ_QUERY=Danio rerio [ORGN]&FORMAT_ENTREZ_QUERY=All organisms<?/MIVAR>
 
  <?MIBLOCK COND="$(AND,$(XST,$UPDATE),$(XST,$type_of_knockdown_reagent))">
      </form>
      <form name=newdata>

      <br>
        <b>Sequence:</b>
   
      <table border=0 bgcolor="<!--|HIGHLIGHT_COLOR|-->">
        <tr><td> 
        <?MISQL SQL="select WebExplode(object,'seqdata_sequence=$mrkrview_sequence') from webPages where ID='aa-sequence_data_entry.apg';">$1<?/MISQL>        

      <INPUT TYPE=button 
        value="Update Sequence"
        <?MIVAR>
        onClick="if (validSequence(document.newdata.seqdata_DisplaySequence.value) ){update_mrkrsequence('$mrkrview_mrkrseq_zdb_id','$mrkrview_sequence',document.newdata.seqdata_DisplaySequence.value,document.newdata.seqdata_CuratorNote.value)}">
        <?/MIVAR>
        <br>
        </td></tr>
      </table>
        
      <?MIVAR COND="$(NC,$mrkrview_mrkrseq_zdb_id,)">
         <br>Add Sequence Reference:	
         <input type=text name=mrkrview_seq_pubid>
         <input type=button value="Add" onClick=new_attrib_mrkrseq('$mrkrview_mrkrseq_zdb_id');> 
        <?MISQL SQL="select WebExplode(object,'dataId=$mrkrview_mrkrseq_zdb_id&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
        <p>
      <?/MIVAR>
      </form>
      
  <?MIELSE COND="$(NC,$mrkrview_mrkrseq_zdb_id,)">

      <br> <?MICOMMENT> for display purpose <?/MICOMMENT>
      <?MICOMMENT>use table to align sequence and disclaimer<?/MICOMMENT>
      <table width=100% cellspacing=0> 
 
       <tr>
        <td width=7%>
          <b>Sequence:</b>
        </td>
        <td>
          <?MIVAR>&nbsp;5' - $mrkrview_sequence - 3'<?/MIVAR>
          <?MISQL SQL="select WebExplode(object,'dataId=$mrkrview_mrkrseq_zdb_id&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
        
          <?MIVAR>
            &nbsp;  <input type=button value="BLAST IT" onClick="window.open('$(CONCAT,$fdb_url_blast,$mrkrview_sequence,$blast_option)');">
          <?/MIVAR>
        </td>
      </tr>
      <tr>
        <td> &nbsp; </td>
        <td>
         <?MICOMMENT>in checkedout branch, a sequence_disclaimer.apg page is added.
               we are hardcoding now, and will update when merge.
         <?/MICOMMENT> 
         <font size=-1>
           &nbsp;(Although ZFIN verifies reagent sequence data, we recommend that you conduct independent sequence analysis before ordering any reagent.)
         </font>
        </td> 
      </tr>
     </table>

     <br>
  <?/MIBLOCK>      


<?MICOMMENT>=========================================================
            ==     Target Gene
	    =========================================================
<?/MICOMMENT>
<?MIBLOCK COND="$(XST,$type_of_knockdown_reagent)">
  <?MIBLOCK COND="$(XST,$UPDATE)">
     <form>
     Add Target Gene:
     Symbol: <input type=text size=15 name=mrkr_abbrev>
     <input type=button value="Add it!" onClick="new_mrkrrel('1to2-knockdown reagent targets gene',this.form.mrkr_abbrev.value)">
     <br>
     Add Reference:
     Gene symbol:<input type=text name=attrib_mrkr_abbrev>	
     Reference:<input type=text name=attrib_mrel_pubid>
     <input type=button value="Add" onClick=new_attrib_mrel(this.form);> 
     </form>
  <?/MIBLOCK>

  <?MISQL SQL="select mrkr_zdb_id, mrkr_abbrev, mrel_zdb_id
	       from marker_relationship
		    join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id
	      where mrel_mrkr_1_zdb_id = '$OID'
		and mrel_type = 'knockdown reagent targets gene';">

    <?MIVAR NAME=mrkrview_trg_gene_zdb_id>$1<?/MIVAR>
    <?MIVAR NAME=mrkrview_trg_gene_sym>$2<?/MIVAR>
    <?MIVAR NAME=mrkrview_trg_mrel_zdb_id>$3<?/MIVAR>
    <?MIBLOCK COND="$(=,$MI_CURRENTROW,1)">
	<b> Target Gene: </b>
    <?MIELSE>
	, &nbsp;
    <?/MIBLOCK>

    <?MIVAR COND="$(XST,$UPDATE)">
       <input type=button value=Delete
         onClick="Delete_mrel('$mrkrview_trg_gene_zdb_id','knockdown reagent targets gene')">
    <?/MIVAR>

    <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$mrkrview_trg_gene_zdb_id">$mrkrview_trg_gene_sym</a>
    <?MISQL SQL="select WebExplode(object,'dataId=$mrkrview_trg_mrel_zdb_id&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>	
  <?/MISQL>
  <?MIBLOCK COND="$(!=,$MI_ROWCOUNT,0)">
    <p> <?MICOMMENT> for display purpose <?/MICOMMENT>
  <?/MIBLOCK>
<?/MIBLOCK> <?MICOMMENT> end of type_of_knockdown_reagent<?/MICOMMENT>



<?MICOMMENT>=========================================================
            ==     Nomenclature History
	    =========================================================
<?/MICOMMENT>


<?MISQL SQL="select * from marker_history where mhist_mrkr_zdb_id = '$OID'">
<?/MISQL>
<?MIVAR COND="$(AND,$(XST,$type_of_genedom),$(>,$MI_ROWCOUNT,0))">
    <font size=-1><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-nomenview.apg&OID=$OID&abbrev=$abbrev$(IF,$(XST,$UPDATE),&UPDATE=1)">Nomenclature History</A>
    </font>
    <br>
<?/MIVAR>


<?MICOMMENT>=========================================================
            ==    Curator Note
	    =========================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(EC,$AUTHORIZED,root)">
  <br>
  <B>Curator Notes:</B>
  <?MISQL SQL="select count(*) 
		from data_note
		where dnote_data_zdb_id = '$OID' ;">
  
  <?MIVAR COND="$(NC,$1,0)">
    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-curatornote.apg&OID=$OID">Notes</A>
  <?/MIVAR>
  <?MIVAR COND="$(EC,$1,0)">

    <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-curatornote.apg&OID=$OID">Add Notes</a> 
  <?/MIVAR>
 <?/MISQL>
 <br>
<?/MIBLOCK>


<?MICOMMENT>=========================================================
            ==    Note
	    =========================================================
<?/MICOMMENT>

<?MISQL SQL="
     select mrkr_comments 
       from marker 
      where mrkr_Zdb_id='$OID'
        and mrkr_comments is not null
        and mrkr_comments != '';">

  <?MIVAR NAME=$mrkrview_mrkr_comments>$1<?/MIVAR>

  <?MIVAR COND="$(AND,$(=,$MI_CURRENTROW,1),$(OR,$(>,$(POSITION,$OID,BAC),0),$(>,$(POSITION,$OID,PAC),0)))">
    <b>EMBL:</b>
  <?/MIVAR>

  <?MIVAR COND="$(>,$MI_CURRENTROW,0)">
     <b>Note:</b>
     &nbsp;$mrkrview_mrkr_comments
     <?MIVAR COND="$(XST,$UPDATE)">
	  <INPUT TYPE=button value="Update Note" onClick="doit('mrkr_comments','textarea','Note')"> 
     <?/MIVAR> 
     <br>
  <?/MIVAR>
<?/MISQL>

<?MIVAR COND="$(=,$MI_ROWCOUNT,0)">
   <?MIVAR COND="$(XST,$UPDATE)">
      <INPUT TYPE=button value="Add New Marker Note" onClick="doit('mrkr_comments','textarea','Note')"> 
      <br>
   <?/MIVAR> 
<?/MIVAR>



<?MICOMMENT>=========================================================
            ==    Clone box
	    =========================================================
<?/MICOMMENT>
<?MIVAR NAME="SOURCE"> <?/MIVAR>
<?MISQL SQL="select WebExplode(object,'CLONE_MARKER_ID=$OID') from webPages where ID='aa-clonebox.apg' 
	     and exists (select 'x' from clone where clone_mrkr_zdb_id = '$OID');">
	<hr width=80%>
        <b>CLONE DATA: </b> $1
<?/MISQL>


<?MICOMMENT>=========================================================
            ==    MUTANTS AND TARGETED KNOCKDOWNS
	    =========================================================
<?/MICOMMENT>
<?MIVAR NAME=display_mut_trg_title>f<?/MIVAR>

<?MICOMMENT>=========================================================
This section of the code has been commented..see FogBugz 743. The update feature for adding knockdown reagents is no longer necessary.
I am commenting this part of the code rather than deleting it. If no flags are raised in a month from today (7/14/05), this section can be deleted by the next person who touches markerview.apg (Prita)
---------------------------------------------------------------------
 
<?MIBLOCK COND="$(AND,$(XST,$type_of_genedom),$(XST,$UPDATE))">
     <?MIVAR COND="$(EC,$display_mut_trg_title,f)">
         <hr width=80%>
	 <b>
		MUTANTS AND TARGETED KNOCKDOWNS: 
         </b> <br>
         $(SETVAR,$display_mut_trg_title,t)
     <?/MIVAR>
     <form>
     <b> Add Knockdown Reagent: </b>
     Name: <input type=text size=15 name=mrkr_abbrev>
     <input type=button value="Add it!" onClick="new_mrkrrel('2to1-knockdown reagent targets gene',this.form.mrkr_abbrev.value)">
     <br>
     <b>Add Reference:</b> 
     Reagent name:<input type=text name=attrib_mrkr_abbrev>	
     Reference:<input type=text name=attrib_mrel_pubid>
     <input type=button value="Add" onClick=new_attrib_mrel(this.form);> 
     </form>
<?/MIBLOCK>
<?/MICOMMENT>

   <?MICOMMENT>==============================
               ==    Mutant Locus
	       ==============================
   <?/MICOMMENT>

<?MISQL SQL="
   select zdb_id, locus_name, abbrev 
     from locus 
    where cloned_gene='$OID';">
<?/MISQL>
<?MIVAR NAME=$mrkrview_locus_zdb_id>$1<?/MIVAR>
<?MIVAR NAME=$mrkrview_locus_name>$2<?/MIVAR>
<?MIVAR NAME=$mrkrview_locus_abbrev>$3<?/MIVAR>

<?MIBLOCK COND="$(!=,$MI_ROWCOUNT,0)">
  <?MIVAR COND="$(EC,$display_mut_trg_title,f)">
      <hr width=80%>
      <b>
	MUTANTS AND TARGETED KNOCKDOWNS: 
      </b> <br>
      $(SETVAR,$display_mut_trg_title,t)
  <?/MIVAR> 
  <?MIVAR><?MICOMMENT>to have backgroup color<?/MICOMMENT>
    <table width =100% border=0 bgcolor=$highlight>
  <?/MIVAR>
  <tr>
    <td>
      <b>Mutant locus: </b>
 
    <?MIVAR COND="$(XST,$UPDATE)">
      <form>
      <br><b>Add reference:</b>
      Reference:<input type=text name=attrib_mutant_pubid>
      <input type=button value="Add" onClick=new_attrib_mutant("$1", this.form);><br>
      </form> 
    <?/MIVAR>
	 
    <?MIVAR> 
      <A HREf="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-locusview.apg&OID=$1">
   	   $mrkrview_locus_name ($3) 
      </A> has been shown to correspond to gene <i>$abbrev</i>. 
    <?/MIVAR>

    <?MISQL SQL="select WebExplode(object,'dataId=$mrkrview_locus_zdb_id&type=recattrib&info=cloned_gene') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
  </td></tr>
  </table>
<?/MIBLOCK>

    <?MICOMMENT>================================
                ==    Knockdown Reagent
	        =================================
    <?/MICOMMENT>
<?MIBLOCK COND="$(XST,$type_of_genedom)">
  <?MISQL SQL="select count(*)::integer
	       from marker_relationship
	      where mrel_mrkr_2_zdb_id = '$OID'
		and mrel_type = 'knockdown reagent targets gene';">

     <?MIVAR NAME=$mrkrview_agt_plural>$(IF,$(>,$1,1),<b>s</b>,)<?/MIVAR>
  <?/MISQL>

  <?MISQL SQL="select mrkr_zdb_id, mrkr_abbrev, mrel_zdb_id
	       from marker_relationship
		    join marker on mrel_mrkr_1_zdb_id = mrkr_zdb_id
	      where mrel_mrkr_2_zdb_id = '$OID'
		and mrel_type = 'knockdown reagent targets gene'
	      order by mrkr_abbrev_order;">

    <?MIVAR NAME=mrkrview_agt_zdb_id>$1<?/MIVAR>
    <?MIVAR NAME=mrkrview_agt_name>$2<?/MIVAR>
    <?MIVAR NAME=mrkrview_agt_mrel_zdb_id>$3<?/MIVAR>
    <?MIBLOCK COND="$(=,$MI_CURRENTROW,1)">
        <?MIVAR COND="$(EC,$display_mut_trg_title,f)">
	   <hr width=80%>
	   <b>MUTANTS AND TARGETED KNOCKDOWNS: </b> <br>         
        <?/MIVAR> 
	<?MIVAR> 
	  <table width=100% border=0 bgcolor=$highlight>
           <tr><td>
  	     <b> Knockdown reagent$mrkrview_agt_plural: </b>
	<?/MIVAR>
    <?MIELSE>	
	, &nbsp;
    <?/MIBLOCK>

    <?MIVAR COND="$(XST,$UPDATE)">
       <input type=button value=Delete
         onClick="Delete_mrel('$mrkrview_agt_zdb_id','knockdown reagent targets gene')">
    <?/MIVAR>

    <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$mrkrview_agt_zdb_id">
	$mrkrview_agt_name
    </a>
    <?MISQL SQL="select WebExplode(object,'dataId=$mrkrview_agt_mrel_zdb_id&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>	
  <?/MISQL>
  <?MIBLOCK COND="$(!=,$MI_ROWCOUNT,0)">
    </td></tr></table>
  <?/MIBLOCK>
<?/MIBLOCK><?MICOMMENT>end of type_of_genedom<?/MICOMMENT>



<?MICOMMENT>=========================================================
            ==    GENE PRODUCT
	    =========================================================
<?/MICOMMENT>
<?MIBLOCK COND="$(XST,$type_of_genedom)">

    <?MIVAR NAME=qualifier>false<?/MIVAR>
    <?MIVAR NAME=$molgoid><?/MIVAR>
    <?MIVAR NAME=$moldisp><?/MIVAR>
    <?MIVAR NAME=$molterm><?/MIVAR>
    <?MIVAR NAME=$molmrkrgoevid><?/MIVAR>


  <?MIVAR NAME=$titledisplay>0<?/MIVAR>
  <?MISQL SQL="select fdb_db_query from foreign_db where fdb_db_name='QuickGO'">
     <?MIVAR NAME=$dbquery>$1<?/MIVAR>
  <?/MISQL>

<!-- use vector storing the three ontology and loop through -->
<?MIVAR NAME=ontologies><?/MIVAR>
<?MISQL SQL="select gont_ontology_name from go_ontology order by gont_order"> 
	$(SETVAR,$ontologies[$MI_CURRENTROW],$1)
<?/MISQL>
<?MIBLOCK INDEX=$ontology FOREACH=$ontologies>
    <?MISQL SQL="
      select first 1 mrkrgoev_zdb_id 
        from go_term,go_evidence_code, marker_go_term_evidence
        where mrkrgoev_mrkr_zdb_id = '$OID' 
          and mrkrgoev_go_term_zdb_id = goterm_zdb_id
          and mrkrgoev_evidence_code = goev_code
          and goterm_ontology = '$ontology'
        order by goev_display_order">
    <?/MISQL>
   <?MIVAR NAME=$evid>$1<?/MIVAR>
   <?MISQL SQL="select count(*) from go_evidence_flag where goevflag_mrkrgoev_zdb_id='$evid'">
   <?MIBLOCK COND="$(>,$1,0)">
    <?MIVAR NAME=qualifier>true<?/MIVAR>
   <?/MIBLOCK>
  <?/MISQL>
<?/MIBLOCK>

  <?MISQL SQL="
        select count(distinct mrkrgoev_go_term_zdb_id) :: integer
          from marker_go_term_evidence
         where mrkrgoev_mrkr_zdb_id = '$OID'  ;">
  <?/MISQL>


 <?MIVAR NAME=$rowcount>$1<?/MIVAR> 
 <?MIBLOCK COND="$(>,$rowcount,0)">  
	<hr width = "80%"> 
  	<b>GENE PRODUCTS: </b> 
        <?MIVAR>$(SETVAR,$titledisplay,1)<?/MIVAR>
    <?MIVAR>
	<p><b>Gene Ontology</b><?/MIVAR>
      <?MIVAR COND="$(XST,$UPDATE)">
      <INPUT TYPE=button value="Update" onClick="edit_go('$OID')"> 
    <?/MIVAR> 
 <?MIELSE>

      <?MIBLOCK COND="$(XST,$UPDATE)">

	<hr width = "80%"> 
  	<b>GENE PRODUCTS: </b> 
        <?MIVAR>$(SETVAR,$titledisplay,1)<?/MIVAR>
	<p><b>Gene Ontology</b>
      <?MIVAR>
      <INPUT TYPE=button value="Update" onClick="edit_go('$OID')"><?/MIVAR> 
     <?/MIBLOCK>
  <?/MIBLOCK>

    <?MIBLOCK COND="$(>,$rowcount,0)">  
    <?MIVAR><TABLE width =100% border=0 bgcolor=$highlight><?/MIVAR>
    <TR bgcolor=#ccccccc>
         <TD align=left width = 15%><b><A HREF="/zf_info/GO.html">Ontology</A></b></TD>
        <?MIBLOCK COND="$(EC,$qualifier,true)">
        <TD align=left width = 13%><b>Qualifier</b></TD>           
        <?/MIBLOCK> 
         <TD><b>GO Term</b></TD> 


<!-- use vector storing the three ontology and loop through for display -->

<?MIBLOCK INDEX=$ontology FOREACH=$ontologies>
    
    <?MIVAR NAME=flgct>0<?/MIVAR>
    <?MIVAR NAME=flag><?/MIVAR>
    <?MIVAR NAME=isnot>f<?/MIVAR>
    <?MIVAR NAME=contribs>f<?/MIVAR>

    <?MISQL SQL="
      select first 1 goterm_go_id, goev_display_order, goterm_name, mrkrgoev_zdb_id
        from go_term, go_evidence_code, marker_go_term_evidence
        where mrkrgoev_mrkr_zdb_id = '$OID'
          and mrkrgoev_go_term_zdb_id = goterm_zdb_id
          and mrkrgoev_evidence_code = goev_code
          and goterm_ontology = '$ontology'
        order by goev_display_order, goterm_name">
    <?/MISQL>

    <?MIVAR NAME=$molgoid>$1<?/MIVAR>
    <?MIVAR NAME=$moldisp>$2<?/MIVAR>
    <?MIVAR NAME=$molterm>$3<?/MIVAR>
    <?MIVAR NAME=$molmrkrgoevid>$4<?/MIVAR>

    <?MISQL SQL="select goevflag_gflag_name from go_evidence_flag where goevflag_mrkrgoev_zdb_id='$molmrkrgoevid'"><?/MISQL>
    <?MIVAR NAME=flgct>$MI_ROWCOUNT<?/MIVAR>
    <?MIVAR NAME=flag>$1<?/MIVAR>
    
    <?MICOMMENT>??? donot know what "'f' as mrkrgo_is_false_ref" is for ???<?/MICOMMENT> 
    <?MISQL SQL="select distinct goterm_go_id,goev_display_order,goterm_name,'f' as mrkrgo_is_false_ref from go_term,go_evidence_code,marker_go_term_evidence where mrkrgoev_mrkr_zdb_id='$OID' and mrkrgoev_go_term_zdb_id=goterm_zdb_id and mrkrgoev_evidence_code=goev_code and goterm_ontology='$ontology' order by goev_display_order"><?/MISQL>
    <?MIVAR NAME=$anncount>$MI_ROWCOUNT<?/MIVAR>
    
    <?MIBLOCK COND="$(>,$flgct,0)">
       <?MIBLOCK COND="$(=,$flgct,2)">
     	<?MIVAR NAME=$isnot>t<?/MIVAR>
     	<?MIVAR NAME=$contribs>t<?/MIVAR>
      <?MIELSE>
        <?MIBLOCK COND="$(EC,$flag,not)">
           <?MIVAR NAME=$isnot>t<?/MIVAR>
        <?/MIBLOCK>
        <?MIBLOCK COND="$(EC,$flag,contributes to)">
        	<?MIVAR NAME=$contribs>t<?/MIVAR>
        <?/MIBLOCK>
     <?/MIBLOCK>
   <?/MIBLOCK>
   <?MIBLOCK COND="$(EC,$isnot,t)">
  	<?MIVAR NAME=not><i>NOT</i><?/MIVAR>
   <?MIELSE>
  	<?MIVAR NAME=not><?/MIVAR>
   <?/MIBLOCK>
   <?MIBLOCK COND="$(>,$anncount,0)">
	<TR><TD nowrap><?MIVAR>$ontology<?/MIVAR></TD>
   <?/MIBLOCK>
   <?MIBLOCK COND="$(OR,$(EC,$contribs,t),$(EC,$isnot,t))">
     <?MIBLOCK COND="$(EC,$contribs,t)">
      <td nowrap><?MIVAR>$not<?/MIVAR><i>Contributes to</i></td>
     <?MIELSE>
      <td nowrap><i><?MIVAR>$not<?/MIVAR></i></td>
     <?/MIBLOCK>
   <?MIELSE>
     <?MIBLOCK COND="$(EC,$qualifier,true)">
       <td></td>
     <?/MIBLOCK>
   <?/MIBLOCK>

   <?MIBLOCK COND="$(>,$anncount,1)">
       <?MIVAR><TD align=left><A HREF=$dbquery$molgoid>$(TRIM,$molterm)</a>
     (<a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoview.apg&OID=$OID"><i>more</i></a>)</TD><?/MIVAR>
   <?/MIBLOCK>

   <?MIBLOCK COND="$(=,$anncount,1)">
     <?MIVAR><TD align=left><A HREF=$dbquery$molgoid>$molterm</a>
     <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoview.apg&OID=$OID"></a></TD><?/MIVAR>
   <?/MIBLOCK>
   </TR>
<?/MIBLOCK>  <?MICOMMENT> end for each ontoloty <?/MICOMMENT>

</TABLE>
  <?MIBLOCK COND="$(>,$rowcount,0)">
    <?MIVAR><TABLE width =100% border=0 bgcolor=$highlight><?/MIVAR>
	<?MIVAR><TR><TD><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoview.apg&OID=$OID">All GO Terms (<?MIVAR>$rowcount)</A><?/MIVAR><?/MIVAR></TD>
</TR></TABLE>
  <?/MIBLOCK>
<?/MIBLOCK> <?MICOMMENT> end rowcount > 0 (found some go terms) <?/MICOMMENT>
  <!--------------- end of Gene Ontology --------------->


  <!-----------------  Protein Sequence  -------------->
  <?MIVAR NAME=$lastitem><?/MIVAR>
  <?MISQL SQL="
    select fdb_db_name, 
	   fdb_db_query || dblink_acc_num || 
	     (case fdb_url_suffix when NULL then '' else fdb_url_suffix end),
           dblink_acc_num_display, fdb_db_significance, dblink_zdb_id
      from db_link, foreign_db, foreign_db_contains 
      where dblink_linked_recid = '$OID' 
        and dblink_fdbcont_zdb_id = fdbcont_zdb_id
        and fdbcont_fdb_db_name = fdb_db_name
        and fdbcont_fdbdt_super_type = 'protein'
      order by fdb_db_significance, fdb_db_name, dblink_acc_num_display;">

    <?MIVAR NAME=$dblinkZdbId>$5<?/MIVAR>
    
    <?MIBLOCK COND="$(=,$MI_CURRENTROW,1)">
	
        <?MIBLOCK COND="$(=,$titledisplay,0)">
		<hr width = "80%">
  		<b>GENE PRODUCTS: </b> 
		<?MIVAR>$(SETVAR,$titledisplay,1)<?/MIVAR>
	<?/MIBLOCK>
	<p><b>Protein Families, Domains and Sites: </b>
  	<?MIVAR>
	 <?MIBLOCK COND="$(XST,$UPDATE)">
          <form name=updateps>
          <br>
  	  <b>Add link to Protein Seq DB:</b> &nbsp;
  	  DBname:<SELECT name=prt_seqdb>
  	  <?MISQL SQL="
	    select fdbcont_fdb_db_name 
	      from foreign_db_contains
	      where fdbcont_fdbdt_super_type = 'protein'
	      order by fdbcont_fdb_db_name;">
	    <option value="$1">$1</option>
  	  <?/MISQL>
  	  </SELECT>
 	   Accession:<input type=text size=15 name=prt_seq_acc> 
  	   <input type=button value="Add it!" onClick=new_proseqnum();>
     
 	   <?MIVAR><br>
  	  <b>Add reference to Protein Seq:</b> &nbsp;
  	   Accession: <input type=text size=15 name=attrib_prtn_seqacc>
 	   Reference: <input type=text size=15 name=attrib_prtn_pubid> 
  	   <input type=button value="Add it!" onClick=new_attrib_prtnseq();>
           <?/MIVAR>
           </form>
 	 <?/MIBLOCK> <?MICOMMENT>end of update <?/MICOMMENT>
	<TABLE width = "100%" border = 0 bgcolor = "$highlight">
 	 <?/MIVAR>
        <TR> 
    <?/MIBLOCK>  <?MICOMMENT> end of first row <?/MICOMMENT>
    $(IF,$(AND,$(NC,$lastitem,$1),$(>,$MI_CURRENTROW,1)),</TD>)
    $(IF,$(NC,$lastitem,$1),<TD align=left>)
    <li>

    $(IF,$(XST,$UPDATE),"<input type=button value=delete onClick=Delete_listitem('db_link','"$(URLENCODE,$1:$3)"')>")
    <A HREF="$2">$1:$3</A> <?MISQL SQL="select WebExplode(object,'dataId=$5&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>

    $(SETVAR,$lastitem,$1)
 <?/MISQL>
 <?MIBLOCK COND=$MI_ROWCOUNT>
   </TD></TR></TABLE>
 <?/MIBLOCK>

  <!--------------end of Protein Sequences --------->

  <!--------------- Gene Product Description ------->
  <?MISQL SQL="select dblink_linked_recid 
		 from external_note, db_link
		where extnote_data_zdb_id = dblink_zdb_id
		  and dblink_linked_recid = '$OID';">
  <?/MISQL>	
  <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">	
        <?MIBLOCK COND="$(=,$titledisplay,0)">
		<hr width = "80%">
  		<b>GENE PRODUCTS: </b> 
		<?MIVAR>$(SETVAR,$titledisplay,1)<?/MIVAR>
	<?/MIBLOCK>
	<p><?MIVAR><A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-geneprddescription.apg&OID=$OID><b>Gene Product Description</b></A><?/MIVAR>

  <?/MIBLOCK>
  <!-----------end of Gene Product Description ------->

<?/MIBLOCK> <?MICOMMENT> marker is a gene ($type_of_genedom exists) <?/MICOMMENT>

<!------------------ end of GENE PRODUCT ---------------------->


<?MICOMMENT>=========================================================
            ==  GENE EXPRESSION 
            ==========================================================
<?/MICOMMENT>
<?MICOMMENT> check data existence, and count total pubs<?/MICOMMENT>
<?MIBLOCK COND="$(OR,$(EQ,$marker_type,EST),$(EQ,$marker_type,CDNA),$(EQ,$marker_type,GENE))">
<?MISQL SQL="
    select count(distinct xpatex_source_zdb_id)::integer
      from expression_experiment 
     where '$OID' in (xpatex_gene_zdb_id, xpatex_probe_feature_zdb_id)
     and xpatex_zdb_id in (select distinct xpatres_xpatex_zdb_id from expression_result)">
<?/MISQL>
<?MIVAR NAME=mrkrview_xpatsource_count>$1<?/MIVAR>
    <HR width="80%">
    <b>GENE EXPRESSION:</b><font size=-1>(<a href="javascript:start_note();">current status</a></font>)

<?MIBLOCK COND="$(!=,$mrkrview_xpatsource_count,0)">
    <table width="100%" border="0" <?MIVAR>bgcolor="$highlight"<?/MIVAR>>

    <?MICOMMENT> query literature pub <?/MICOMMENT>
    <?MISQL SQL="
	select distinct pub_mini_ref
          from expression_experiment 
	       join publication
                    on xpatex_source_zdb_id = zdb_id
         where '$OID' in (xpatex_gene_zdb_id, xpatex_probe_feature_zdb_id)
	   and jtype <> 'Unpublished'; ">

	<?MIVAR NAME=mrkrview_xpatsource_desc>$1<?/MIVAR>
    <?/MISQL>    
    <?MICOMMENT> 
      ========= if literature pub involved, display total figures ==========
    <?/MICOMMENT>
    <?MIBLOCK COND="$(!=,$MI_ROWCOUNT,0)">

      <?MICOMMENT> if more than one pub, show count, 
	         in case of one pub, show pub miniref 
      <?MIVAR COND="$(!=,$MI_ROWCOUNT,1)" NAME=mrkrview_xpatsource_desc>
		$mrkrview_xpatsource_count publications
      <?/MIVAR>     
      <?/MICOMMENT>  
      <?MIVAR COND="$(>,$mrkrview_xpatsource_count,1)" NAME=mrkrview_xpatsource_desc>
		$mrkrview_xpatsource_count publications
      <?/MIVAR>     

      <?MISQL SQL="
	 select count(distinct xpatfig_fig_zdb_id)::integer
           from expression_pattern_figure
                join expression_result 
			on xpatfig_xpatres_zdb_id = xpatres_zdb_id
                join expression_experiment 
			on xpatex_zdb_id = xpatres_xpatex_zdb_id 
	  where '$OID' in (xpatex_gene_zdb_id, xpatex_probe_feature_zdb_id); ">
       <?/MISQL>
       <?MIVAR NAME=mrkrview_xpatfig_count>$1<?/MIVAR>     
         <tr><td><b>All expression data: </b> </td>

           <td> <?MIVAR> 
     	       <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect.apg&query_results=true&gene_name=$abbrev&xpatsel_geneZdbId=$OID">$mrkrview_xpatfig_count figure(s)</a> from $mrkrview_xpatsource_desc
	        <?/MIVAR>	
           </td>
         </tr>
     <?/MIBLOCK>

     <?MICOMMENT>
	=========   query for figures from direct submission  ===============
	 <?MISQL SQL="select count(distinct fimg_zdb_id)::integer 
           from fish_image, expression_pattern_figure,
                expression_result, expression_experiment, 
                publication
	   where
		fimg_fig_zdb_id=xpatfig_fig_zdb_id
           and  xpatfig_xpatres_zdb_id=xpatres_zdb_id
           and  xpatex_zdb_id=xpatres_xpatex_zdb_id
           and  zdb_id = xpatex_source_zdb_id
	   and '$OID' in (xpatex_gene_zdb_id, xpatex_probe_feature_zdb_id)
           and jtype = 'Unpublished'"><?/MISQL>
      <?MIVAR NAME=mrkrview_image_count>$1<?/MIVAR>
     <?/MICOMMENT>
     <?MISQL SQL="
	 select count(distinct xpatfig_fig_zdb_id)::integer, 
		pub.zdb_id, pub.pub_mini_ref,xpatex_probe_feature_zdb_id
           from expression_pattern_figure
                join expression_result on xpatfig_xpatres_zdb_id = xpatres_zdb_id
                join expression_experiment 
			on xpatex_zdb_id = xpatres_xpatex_zdb_id 
                join publication pub on pub.zdb_id = xpatex_source_zdb_id
	  where '$OID' in (xpatex_gene_zdb_id, xpatex_probe_feature_zdb_id)
            and pub.jtype = 'Unpublished'
         group by xpatex_probe_feature_zdb_id, pub.zdb_id, pub.pub_mini_ref; ">

         <?MIVAR NAME=mrkrview_xpatsubfig_count>$1<?/MIVAR>
	 <?MIVAR NAME=mrkrview_xpatsubpub_id>$2<?/MIVAR>
	 <?MIVAR NAME=mrkrview_xpatsubpub_miniref>$3<?/MIVAR>
	 <?MIVAR NAME=mrkrview_xpatsub_probe_id>$4<?/MIVAR>
	 
	 <?MIBLOCK COND="$(EC,$MI_CURRENTROW,1)">

	    <tr><td><b>Directly submitted expression data: </b></td>
              
         <?MIELSE>
	    <tr><td>&nbsp;</td>
         <?/MIBLOCK>
	 <?MISQL SQL="select count(distinct fimg_zdb_id)::integer 
           from fish_image, expression_pattern_figure,
                expression_result, expression_experiment 
	   where
		fimg_fig_zdb_id=xpatfig_fig_zdb_id
           and  xpatfig_xpatres_zdb_id=xpatres_zdb_id
           and  xpatex_zdb_id=xpatres_xpatex_zdb_id
           and  xpatex_source_zdb_id= '$mrkrview_xpatsubpub_id'
	   and  xpatex_probe_feature_zdb_id='$mrkrview_xpatsub_probe_id'
           ">
      <?MIVAR NAME=mrkrview_image_count>$1<?/MIVAR>
	 <?MISQL SQL="
		     select mrkr_name
                       from marker
                      where mrkr_zdb_id = '$mrkrview_xpatsub_probe_id';">

	    <?MIVAR NAME=mrkrview_xpatsub_probe_name>$1<?/MIVAR>
	 <?/MISQL>

         <?MIVAR NAME=mrkrview_xpatsubfig_count_html>  
	   <a href="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-fxallfigures.apg&OID=$mrkrview_xpatsubpub_id&fxallfig_probe_zdb_id=$mrkrview_xpatsub_probe_id">$mrkrview_xpatsubfig_count figure(s) ($mrkrview_image_count images)</a>
	 <?/MIVAR>

         <td>
	   $mrkrview_xpatsubfig_count_html from $mrkrview_xpatsubpub_miniref [$mrkrview_xpatsub_probe_name] 
	 </td></tr>
<?/MISQL>	
     <?/MISQL><?MICOMMENT>query figure count for direct submission xpat<?/MICOMMENT>
     
     </table> <?MICOMMENT>close xpat section table<?/MICOMMENT>

<?/MIBLOCK> <?MICOMMENT>block for gene xpat if exist<?/MICOMMENT>
<?/MIBLOCK> <?MICOMMENT>block for marker type=gene<?/MICOMMENT>



 
<?MICOMMENT>=========================================================
            ==    MARKER RELATIONSHIP
	    =========================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(NXST,$type_of_knockdown_reagent)">
<?MIVAR NAME=$mrel_mtype><?/MIVAR>
<?MIVAR NAME=$mrel_count><?/MIVAR>

<?MISQL SQL="select count(*)::Integer 
               from marker_relationship 
              where (mrel_mrkr_1_zdb_id = '$OID' 
                     or mrel_mrkr_2_zdb_id = '$OID')
                and mrel_type <> 'knockdown reagent targets gene';">
     <?MIVAR NAME=$mrel_count>$1<?/MIVAR>
<?/MISQL>
<?MIBLOCK COND="$(OR,$(NC,$mrel_count,0),$(XST,$UPDATE))">
  <HR width="80%">
  <b>
  <?MIBLOCK COND="$(XST,$type_of_genedom)">
    SEGMENT (CLONE AND PROBE) RELATIONSHIPS:
  <?MIELSE>
    MARKER RELATIONSHIPS
  <?/MIBLOCK>
  </b>
<?/MIBLOCK>

<?MIBLOCK COND="$(XST,$UPDATE)">
 <br><form name=updaterrel>
 <b>Add relationship:</b> &nbsp;
 Relationship:<SELECT name=relship>
 <?MISQL SQL="select unique mreltype_name, mreltype_1_to_2_comments 
	       from marker_relationship_type
	            join marker_type_group_member
		      on mreltype_mrkr_type_group_1 = mtgrpmem_mrkr_type_group
	      where get_obj_type('$OID') = mtgrpmem_mrkr_type
		and mreltype_name <> 'knockdown reagent targets gene' ">
   <option value="1to2-$1">$1-$2
 <?/MISQL>
  
 <?MISQL SQL="select unique mreltype_name, mreltype_2_to_1_comments 
	       from marker_relationship_type
	            join marker_type_group_member
	              on mreltype_mrkr_type_group_2 = mtgrpmem_mrkr_type_group
	      where get_obj_type('$OID') = mtgrpmem_mrkr_type
                and mreltype_name <> 'knockdown reagent targets gene'  ">
   <option value="2to1-$1">$1-$2
 <?/MISQL>
 </SELECT>
 partner Symbol:<input type=text size=15 name=mrkr_abbrev> 
 <?MICOMMENT>new_mrkrrel() function is also used by target gene and 
             knockdown reagent section. That is the reason why we 
             need to send values as parameters. There possibly is nicer
             solution...
 <?/MICOMMENT> 
 <input type=button value="Add it!" onClick=new_mrkrrel(this.form.relship.options[this.form.relship.selectedIndex].value,this.form.mrkr_abbrev.value);>
 
  <?MIVAR COND="$(AND,$(>,$mrel_count,0),$(XST,$UPDATE))">
     <br><b>Add Reference:</b> 
     Marker abbrev:<input type=text name=attrib_mrkr_abbrev>	
     Reference:<input type=text name=attrib_mrel_pubid>
     <input type=button value="Add" onClick=new_attrib_mrel(this.form);> 
  <?/MIVAR>
  
<?/MIBLOCK>  <?MICOMMENT> end if update <?/MICOMMENT>


<TABLE border=0 width=100%>
	<?MISQL SQL="select WebExplode(object,'mrkrrel_mrkr_zdb_id=$OID&mrkrrel_rel_direction=2_to_1') from webPages where ID='aa-markerrelationship.apg' ;">
       $1
    <?/MISQL>
	<?MISQL SQL="select WebExplode(object,'mrkrrel_mrkr_zdb_id=$OID&mrkrrel_rel_direction=1_to_2')
				   from webPages
             	  where ID='aa-markerrelationship.apg' ;">
       $1
    <?/MISQL>
</TABLE>

<?MIBLOCK COND="$(XST,$UPDATE)">
  </form> <?MICOMMENT> end form updaterrel <?/MICOMMENT>
<?/MIBLOCK>

<?/MIBLOCK> <?MICOMMENT>end of not type_of_knockdown_reagent<?/MICOMMENT>

<!------------------ end of MARKER RELATIONSHIP --------------->


<?MICOMMENT> ceate a list of chimeric clones <?/MICOMMENT>
<?MIVAR NAME=chimeric_clone_list><?/MIVAR>
<?MISQL SQL="select clone_mrkr_zdb_id from clone where clone_is_chimeric = 't';">
  $(VECAPPEND,$chimeric_clone_list,$1)
<?/MISQL>
<?MIVAR NAME=chimeric_clone_list>$(SEPARATE,$chimeric_clone_list,"','")<?/MIVAR>  


<?MICOMMENT>
  ------------- SEQUENCE INFOMATION -------------------------------
<?/MICOMMENT>

<?MICOMMENT> Get count of # of sequence links.  Union gets rid of dups <?/MICOMMENT>
<?MISQL SQL="
  select dblink_acc_num, fdbcont_fdb_db_name
  from db_link, foreign_db_contains
  where dblink_linked_recid = '$OID'
    and dblink_fdbcont_zdb_id = fdbcont_zdb_id
    and fdbcont_fdbdt_super_type = 'sequence'
  UNION 
  select dblink_acc_num, fdbcont_fdb_db_name
  from db_link, foreign_db_contains, marker_relationship
  where mrel_mrkr_1_zdb_id = '$OID'
    and dblink_linked_recid = mrel_mrkr_2_zdb_id
    and dblink_fdbcont_zdb_id = fdbcont_zdb_id
    and fdbcont_fdbdt_super_type = 'sequence'
    and mrel_type in ('gene contains small segment', 
		      'clone contains small segment',
		      'gene encodes small segment')
    and mrel_mrkr_2_zdb_id not in ('$chimeric_clone_list')
  UNION 
  select dblink_acc_num, fdbcont_fdb_db_name
  from db_link, foreign_db_contains, marker_relationship
  where mrel_mrkr_2_zdb_id = '$OID'
    and dblink_linked_recid = mrel_mrkr_1_zdb_id
    and dblink_fdbcont_zdb_id = fdbcont_zdb_id
    and fdbcont_fdbdt_super_type = 'sequence'
    and mrel_type in ('clone contains gene') 
    and mrel_mrkr_1_zdb_id not in ('$chimeric_clone_list')  
  ;"> 
<?/MISQL>
<?MIVAR NAME=$mrkrview_nSequenceLinks>$MI_ROWCOUNT<?/MIVAR>


<?MIBLOCK COND="$(OR,$mrkrview_nSequenceLinks,$(XST,$UPDATE))">
    <HR width="80%">
    <a name=sequence><b>SEQUENCE INFORMATION:</b></a>
<?/MIBLOCK>

<?MIBLOCK COND="$(XST,$UPDATE)">
  <form name=updateseq>
  <?MIVAR NAME=seq_tab>&nbsp;&nbsp;&nbsp;<?/MIVAR>
  <br><br>
  <?MIVAR>$seq_tab<?/MIVAR>
  <b>Link to Seq DB:</b> &nbsp;
  DBname:<SELECT name=seqdb>
  <?MISQL SQL="
    select distinct fdbcont_fdb_db_name 
      from foreign_db_contains
     where fdbcont_fdbdt_super_type = 'sequence' 
     order by fdbcont_fdb_db_name;">
    <option value="$1" $(IF,$(EC,$1,GenBank),SELECTED)>$1</option>
  <?/MISQL>
  </SELECT>
  Type:<SELECT name=seq_super>
    <?MISQL SQL="
      select distinct fdbdt_data_type, fdbdt_super_type 
        from foreign_db_data_type
       where fdbdt_super_type = 'sequence' 
      order by fdbdt_data_type;">
    <option value="$2&fdbcont_data=$1" $(IF,$(EC,$1,cDNA),SELECTED)>$1</option>
    <?/MISQL>
  </SELECT>
  Accession:<input type=text size=15 name=seq_acc> 
  <input type=button value="Add it!" onClick=new_seqnum();>

  <br>
  <?MIVAR>$seq_tab<?/MIVAR>
  <b>Update Sequence:</b> &nbsp;
  AccNum:<SELECT name=upd_seq_zdb>
  <?MISQL SQL="
    select distinct fdbcont_fdb_db_name, dblink_acc_num_display, dblink_zdb_id
      from foreign_db_contains, db_link
     where fdbcont_fdbdt_super_type = 'sequence'
       and fdbcont_zdb_id = dblink_fdbcont_zdb_id
       and dblink_linked_recid = '$OID'
     order by fdbcont_fdb_db_name, dblink_acc_num_display;">
    <option value="$3">$1:$2</option>
  <?/MISQL>
  </SELECT>
  Type:<SELECT name=upd_seq_type>
  <?MISQL SQL="
    select distinct fdbdt_data_type
      from foreign_db_data_type
     where fdbdt_super_type = 'sequence' 
     order by fdbdt_data_type;">
    <option value="$1"  $(IF,$(EC,$1,cDNA),SELECTED)>$1</option>
  <?/MISQL>
  </SELECT>
  Length: <input type=text size=10 name=upd_seq_length>
  <input type=button value="Update" onClick=update_seqnum();>

  <br>
  <?MIVAR>$seq_tab<?/MIVAR>
  <b>Add reference:</b> &nbsp;
  Accession: <input type=text size=15 name=attrib_seq_acc>
  Reference: <input type=text size=15 name=attrib_seq_pubid> 
  <input type=button value="Add it!" onClick=new_attrib_seq();>
  <?MICOMMENT>Added CDNA for this condition (FogBugz 410) <?/MICOMMENT>

  <?MIBLOCK COND="$(OR,$(EQ,$marker_type,EST),$(EQ,$marker_type,CDNA))">

    <?MISQL SQL="
      SELECT clone_is_chimeric
      FROM clone
      WHERE clone_mrkr_zdb_id = '$OID';">

      <br>    
      <?MIVAR>$seq_tab<?/MIVAR> 
      <b>Chimeric:</b> 
        Yes:<input type=radio name=chimericism value=t $(IF,$(EC,$1,t),checked)>
        No:<input type=radio name=chimericism value=f $(IF,$(EC,$1,f),checked)> 
        <input type=button value="Update" onclick=setChimericism('$1')> 
      (Chimeric links are not displayed on gene pages.)

    <?/MISQL>
  <?/MIBLOCK>
  <br><br>
<?/MIBLOCK>  <?MICOMMENT> end update <?/MICOMMENT>


<?MIBLOCK COND="$mrkrview_nSequenceLinks">    
  <TABLE  width="100%" border="0" bgcolor=<?MIVAR>"$highlight"<?/MIVAR>>
    <TR>
      <TD width=30% bgcolor=#ccccccc><b>Type</b></TD>
      <TD width=40% bgcolor=#ccccccc><b>Accession #</b></TD>
      <TD align=right width=10% bgcolor=#ccccccc><b>Length</b></TD>
      <TD align=center width=20% bgcolor=#ccccccc><A HREF="javascript:start_help()"><b>Analysis</b></A></TD>
    </TR>
    <?MIVAR NAME=$mrkrview_prevDataType><?/MIVAR>
    <?MIVAR NAME=$mrkrview_displayAllSequencesLink>0<?/MIVAR>
    <?MISQL SQL="
        select dblink_length, fdb_db_name, fdb_db_query || dblink_acc_num || 
               (case fdb_url_suffix when NULL then '' else fdb_url_suffix end), 
               dblink_acc_num_display, dblink_zdb_id, 's', 'placeholder', 
               'placeholder', fdb_db_significance, fdbdt_data_type, 
               fdbdt_display_order
        from db_link, foreign_DB, foreign_db_contains, foreign_db_data_type
        where dblink_linked_recid = '$OID'
          and dblink_fdbcont_zdb_id = fdbcont_zdb_id
          and fdbcont_fdb_db_name = fdb_db_name
          and fdbdt_super_type = 'sequence'
          and fdbcont_fdbdt_super_type = fdbdt_super_type
          and fdbcont_fdbdt_data_type = fdbdt_data_type
      UNION 
        select dblink_length, fdb_db_name, fdb_db_query || dblink_acc_num || 
               (case fdb_url_suffix when NULL then '' else fdb_url_suffix end), 
               dblink_acc_num_display, dblink_zdb_id, 'r', mrel_mrkr_2_zdb_id, 
               mrkr_abbrev, fdb_db_significance, fdbdt_data_type, 
               fdbdt_display_order
        from db_link, foreign_DB, foreign_db_contains, foreign_db_data_type,
             marker_relationship, marker
        where mrel_mrkr_1_zdb_id = '$OID'
          and dblink_linked_recid = mrel_mrkr_2_zdb_id
          and dblink_fdbcont_zdb_id = fdbcont_zdb_id
          and fdbcont_fdb_db_name = fdb_db_name
          and fdbdt_super_type = 'sequence'
          and fdbcont_fdbdt_super_type = fdbdt_super_type
          and fdbcont_fdbdt_data_type = fdbdt_data_type
          and mrel_type in ('gene contains small segment', 
                            'clone contains small segment',
                            'gene encodes small segment')
          and mrel_mrkr_2_zdb_id = mrkr_zdb_id
          and mrel_mrkr_2_zdb_id not in ('$chimeric_clone_list')
      UNION 
        select dblink_length, fdb_db_name, fdb_db_query || dblink_acc_num || 
               (case fdb_url_suffix when NULL then '' else fdb_url_suffix end), 
               dblink_acc_num_display, dblink_zdb_id, 'r', mrel_mrkr_1_zdb_id,
               mrkr_abbrev, fdb_db_significance, fdbdt_data_type, 
               fdbdt_display_order
        from db_link, foreign_DB, foreign_db_contains, foreign_db_data_type,
             marker_relationship, marker
        where mrel_mrkr_2_zdb_id = '$OID'
          and dblink_linked_recid = mrel_mrkr_1_zdb_id
          and dblink_fdbcont_zdb_id = fdbcont_zdb_id
          and fdbcont_fdb_db_name = fdb_db_name
          and fdbdt_super_type = 'sequence'
          and fdbcont_fdbdt_super_type = fdbdt_super_type
          and fdbcont_fdbdt_data_type = fdbdt_data_type
          and mrel_type = 'clone contains gene' 
          and mrel_mrkr_1_zdb_id = mrkr_zdb_id
          and mrel_mrkr_1_zdb_id not in ('$chimeric_clone_list')
          
        order by 11 asc, 9 asc, 1 desc, 4 asc
      ;">   

      <?MIVAR NAME=dblink_length>$1<?/MIVAR>
      <?MIVAR NAME=db_name>$2<?/MIVAR>
      <?MIVAR NAME=link_url>$3<?/MIVAR>
      <?MIVAR NAME=acc_num>$4<?/MIVAR>
      <?MIVAR NAME=dataId>$5<?/MIVAR>
      <?MIVAR NAME=attachto>$6<?/MIVAR>
      <?MIVAR NAME=related_zdb_id>$7<?/MIVAR>
      <?MIVAR NAME=related_mrkr_abbrev>$8<?/MIVAR>
      <?MIVAR NAME=data_type>$10<?/MIVAR>
        
      <?MIBLOCK COND="$(NE,$data_type,$mrkrview_prevDataType)">
        <?MICOMMENT>
          Data type changed.  Display first row for this data type.
          ** 07/24/03 for some weird reasons, the column made up to distinguish 
          the source of GenBank accession has to be a one-character string 
	  to behave right in EC operation. 
        <?/MICOMMENT>
        <?MIVAR>
          <TR>         
            <TD>
              $data_type: 
            </TD>
            <TD>
              $(IF,$(AND,$(XST,$UPDATE),$(NE,$attachto,r)),"<input type=button value=delete onClick=Delete_listitem('db_link','"$(URLENCODE,$db_name:$acc_num)"')>") 
              <A HREF="$link_url">$db_name:$acc_num</A>

              <?MIBLOCK COND="$(AND,$(XST,$UPDATE),$(EC,$attachto,r))">
                <?MISQL SQL="
                  select mrkr_abbrev, mrkr_zdb_id
                    from marker
                    where mrkr_zdb_id = '$related_zdb_id'; ">
                  ( <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$related_zdb_id">$related_mrkr_abbrev</A> )
                <?/MISQL>
       
                <?MIVAR>$(UNSETVAR,$UPDATE)<?/MIVAR>
                <?MISQL SQL="select WebExplode(object,'dataId=$dataId&type=recattrib&info=standard') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
                <?MIVAR>$(SETVAR,$UPDATE,1)<?/MIVAR>
              <?MIELSE>
                <?MISQL SQL="select WebExplode(object,'dataId=$dataId&type=recattrib&info=standard') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL>
              <?/MIBLOCK>
            </TD>
            <TD align=right>
              <nobr>
                <?MIVAR>$dblink_length<?/MIVAR>
                <?MIBLOCK COND=$(EC,$data_type,Polypeptide)> aa
                <?MIELSE COND=$(OR,$(EC,$data_type,cDNA),$(EC,$data_type,Genomic))> bp
                <?/MIBLOCK>
              </nobr>
            </TD>
            <TD align=center>
              <?MISQL SQL="select WebExplode(object,'seqt_acc=$acc_num&seqt_acc_len=$dblink_length&seqt_acc_type=$data_type&seqt_acc_db=$db_name') from webPages where ID='aa-sequence_tools.apg';">$1<?/MISQL>
            </TD>
          </TR>
        <?/MIVAR>
        <?MIVAR NAME=$mrkrview_prevDataType>$data_type<?/MIVAR>
      <?MIELSE>
        <?MICOMMENT>
          Data type did not change.  Record that there is more than one record 
          for at least one data type.
        <?/MICOMMENT>
        <?MIVAR NAME=$mrkrview_displayAllSequencesLink>1<?/MIVAR>
      <?/MIBLOCK>  <?MICOMMENT> end data type did or did not change <?/MICOMMENT>
    <?/MISQL>

    <?MIBLOCK COND=$mrkrview_displayAllSequencesLink>  
      <TR>
        <TD colspan=4>
          <?MIVAR>
            <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-sequence.apg&OID=$OID$(IF,$(XST,$UPDATE),&UPDATE=1)">All Sequence Information ($mrkrview_nSequenceLinks)</a>
          <?/MIVAR>
        </TD>
      </TR>
    <?/MIBLOCK>    
  </TABLE>
<?/MIBLOCK> <?MICOMMENT> end there were sequence records <?/MICOMMENT>  

<?MIBLOCK COND="$(XST,$UPDATE)">
  </form>  <?MICOMMENT> end form updateseq <?/MICOMMENT>
<?/MIBLOCK>

<?MICOMMENT>
  ---------------- ends of SEQUENCE INFORMATION ---------------
<?/MICOMMENT>


<!------------   OTHER MARKER PAGES   ------------------------------->

  <?MIVAR>$(UNSETVAR,dblink_other)<?/MIVAR>  

  <?MISQL SQL="
    select fdb_db_name, fdb_db_query || dblink_acc_num || 
	     (case fdb_url_suffix when NULL then '' else fdb_url_suffix end), 
           dblink_acc_num, dblink_zdb_id, dblink_acc_num_display, fdb_db_significance
    from db_link, foreign_DB, foreign_db_contains
    where dblink_linked_recid = '$OID'
      and dblink_fdbcont_zdb_id = fdbcont_zdb_id
      and fdbcont_fdb_db_name = fdb_db_name
      and fdbcont_fdbdt_data_type = 'other'
    order by 6,1,5
  ;"> 
  
    <?MIVAR NAME=db_name>$1<?/MIVAR>
    <?MIVAR NAME=link_url>$2<?/MIVAR>
    <?MIVAR NAME=acc_num>$3<?/MIVAR>
    <?MIVAR NAME=dataId>$4<?/MIVAR>
    <?MIVAR NAME=link_display>$5<?/MIVAR>
    
    
    <?MIVAR NAME=mini_ref><?MISQL SQL="select WebExplode(object,'dataId=$dataId&type=recattrib') from webPages where ID='aa-miniref_display.apg';">$1<?/MISQL><?/MIVAR>
    
    <?MIBLOCK COND="$(AND,$(XST,$vPrevDBname),$(NC,$vPrevDBname,$db_name))">
    <?MIBLOCK COND="$(NXST,$dblink_other)">
      <?MIVAR NAME=dblink_other>
        $vDBnameColumn
      <?/MIVAR>    
    <?MIELSE>
      <?MIVAR>
        $(VECAPPEND,$dblink_other,$vDBnameColumn)
      <?/MIVAR>
    <?/MIBLOCK>
      <?MIVAR>$(UNSETVAR,vDBnameColumn)<?/MIVAR>
    <?/MIBLOCK>    
    
    <?MIBLOCK COND=$(NXST,$vDBnameColumn)>
      <?MIVAR NAME=vDBnameColumn>
        <LI>
        $(IF,$(XST,$UPDATE),"<input type=button value=delete onClick=Delete_listitem('db_link','"$(URLENCODE,$db_name:$acc_num)"')>") 
        <A HREF="$link_url">$db_name:$link_display</A> $mini_ref
        </LI>      
      <?/MIVAR>
    <?MIELSE>
      <?MIVAR NAME=vDBnameColumn>
        $vDBnameColumn 
        <LI>
        $(IF,$(XST,$UPDATE),"<input type=button value=delete onClick=Delete_listitem('db_link','"$(URLENCODE,$db_name:$acc_num)"')>") 
        <A HREF="$link_url">$db_name:$link_display</A> $mini_ref
        </LI>      
      <?/MIVAR>      
    <?/MIBLOCK>

  <?MIVAR NAME=vPrevDBname>$db_name<?/MIVAR>

  <?/MISQL> 

    <?MIBLOCK COND="$(XST,$vPrevDBname)">
    <?MIBLOCK COND="$(NXST,$dblink_other)">
      <?MIVAR NAME=dblink_other>
        $vDBnameColumn
      <?/MIVAR>    
    <?MIELSE>
      <?MIVAR>
        $(VECAPPEND,$dblink_other,$vDBnameColumn)
      <?/MIVAR>
    <?/MIBLOCK>
    <?/MIBLOCK> 
  
  <?MIBLOCK COND=$(OR,$(XST,$dblink_other),$(XST,$UPDATE))>
    <HR width="80%">
    <?MIVAR><b>OTHER &nbsp;<i>$abbrev</i>&nbsp; GENE / MARKER PAGES:</b><?/MIVAR>

<?MIBLOCK COND="$(XST,$UPDATE)">
  <form name=updateother>
  <?MIVAR NAME=seq_tab>&nbsp;&nbsp;&nbsp;<?/MIVAR>
  <br><br>
  <?MIVAR>$seq_tab<?/MIVAR>
  <b>Link Other page:</b> &nbsp;
  DBname:<SELECT name=seqdb>
  <?MISQL SQL="
    select distinct fdbcont_fdb_db_name 
      from foreign_db_contains
     where fdbcont_fdbdt_super_type = 'summary page' 
     order by fdbcont_fdb_db_name;">
    <option value="$1" $(IF,$(EC,$1,VEGA),SELECTED)>$1</option>
  <?/MISQL>
  </SELECT>
  Accession:<input type=text size=25 name=seq_acc> 
  Type:<SELECT name=seq_super>
  <?MISQL SQL="
    select distinct fdbdt_data_type, fdbdt_super_type 
      from foreign_db_data_type
     where fdbdt_super_type = 'summary page' 
     order by fdbdt_data_type;">
    <option value="$2&fdbcont_data=$1" $(IF,$(EC,$1,other),SELECTED)>$1</option>
  <?/MISQL>
  </SELECT>
  <input type=button value="Add it!" onClick=new_othernum();>

  <br>
  <?MIVAR>$seq_tab<?/MIVAR>
  <b>Add reference:</b> &nbsp;
  Accession: <input type=text size=15 name=attrib_seq_acc>
  Reference: <input type=text size=15 name=attrib_seq_pubid> 
  <input type=button value="Add it!" onClick=new_attrib_other();>
  <br><br>
<?/MIBLOCK>  <?MICOMMENT> end update OTHER GENE / MARKER PAGES:<?/MICOMMENT>

    <?MIBLOCK COND="$(XST,$dblink_other)">
        <?MIVAR NAME=dblink_other_table_row><TR><TD>$(SEPARATE,$dblink_other,</TD><TD>)</TD></TR><?/MIVAR>
        <?MIVAR>
            <TABLE  width="100%" border=0 bgcolor="$highlight"
                $dblink_other_table_row
            </TABLE>
        <?/MIVAR>
    <?/MIBLOCK>

  <?/MIBLOCK> 
<?MIBLOCK COND="$(XST,$UPDATE)">
  </form>  <?MICOMMENT> end form updateother <?/MICOMMENT>
<?/MIBLOCK>

<!------------   ends   OTHER MARKER PAGES   ------------------------>



<?MICOMMENT>=========================================================
            ==    MAPPING INFORMATION
	    =========================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(NXST,$type_of_knockdown_reagent)">
  <hr width="80%" align = center>
  <b>MAPPING INFORMATION:  </b>

  <TABLE width="100%" bgcolor=<?MIVAR>"$highlight"<?/MIVAR>>
   <TR>
    <TD>
       &nbsp;&nbsp;<?MISQL SQL="select WebExplode(object,'&mapdetails_mode=mini&oID=$OID') from webPages where ID='aa-mappingdetail.apg';">$1<?/MISQL>
    </TD>
   </TR>
  </TABLE>
<?/MIBLOCK>


<form name=updater1>

<!------------ ORTHOLOGY ------------------------------------>

<?MIBLOCK COND="$(XST,$type_of_genedom)">
 <HR width="80%">
 <a name=orthologue><b>ORTHOLOGY:</b></a>
 <?MICOMMENT>at update mode, user will choose species, and invoke refresh<?/MICOMMENT>
 <?MIBLOCK COND="$(XST,$UPDATE)">
   <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-orthoedit.apg';">$1<?/MISQL> 
 <?/MIBLOCK>

 <?MISQL SQL="select WebExplode(object,'OID=$OID') from webPages where ID='aa-orthoviewbrief.apg';">$1<?/MISQL> 
  	
<?/MIBLOCK> 

<!-------------- ends ORTHOLOGY ------------------------------------>


<!------------------ PUBLICATION ------------------------------------>

<?MICOMMENT> *** 09/05 Decided to count both real pub and citation fake pub, and use CITATION as title. Before any database solution, still hard code the items to extract citation pub. <?/MICOMMENT>
<?MICOMMENT> *** 08/25 curator's decision that we will not pull over publications from related markers, or the known locus. However, any attribution to data items automatically populated to the marker itself. <?/MICOMMENT>
<?MICOMMENT> *** 2005/10/25 curator's decide that all allele and locus attribution will be pulled through to the gene page. <?/MICOMMENT>

    <?MICOMMENT> *** Citation Link *** <?/MICOMMENT>
    <?MISQL SQL="select WebExplode(object,'citlink_data_page=citgeneric.apg') from webPages where ID='aa-citlink.apg';">$1<?/MISQL>

</form> <?MICOMMENT> end form updater1 <?/MICOMMENT>

<!----------------- ends PUBLICATION ----------------->



<?/MIBLOCK> <!-- ends cond authorize exists -->

<?/MIBLOCK> <!-- name NC novalue and romwcount > 0 -->

<?/MIBLOCK> <!-- ends cond oid exists -->

<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>

</BODY>

</HTML>

