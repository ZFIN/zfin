<?MICOMMENT>
FILE: do-markergoupdate.apg

Just commits the updates requested in the forms tossed up by
gomodify. Also files update record.

EXPECTED VARS:

 OID -- the mrkr zdb id
 go_id -- the new go id
 pub_id -- the new pub id
 notes -- the new value of notes
 evidence_code -- the new value of evidence code
 inf_db  -- the new value of inference db
 inf_mem -- the new value for inference
 is_not -- the new qualifier value
 contributes -- the new qualifier value

**UPDATES**
Last modified by Prita on 1/4/2005
Duplicate go annotations were getting added inspite of warning
Added a flag called $annexist to check if annotation exists.
Used this flag to determine whether to insert or not

<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>

<?/MIERROR>
<?MIVAR NAME=$MI_NOVALUE><?/MIVAR>
<?MIVAR NAME=$MI_NULL><?/MIVAR>

<!-- First check security. Main purpose is just to get submitter id and name -->

  <?MISQL SQL="
    select WebExplode(object,'permission=root') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>
<?MIBLOCK COND="$(AND,$(XST,$AUTHORIZED),$(NC,$AUTHORIZED,false))">
   <?MIVAR NAME=comma>,<?/MIVAR>
   <?MIVAR COND="$(NXST,$notes)" NAME=$notes><?/MIVAR>
   <?MIVAR COND="$(NXST,$inf_db)" NAME=$inf_db><?/MIVAR>
   <?MIVAR COND="$(NXST,$inf_mem)" NAME=$inf_mem><?/MIVAR>
   <?MIVAR COND="$(NXST,$is_not)" NAME=$is_not><?/MIVAR>
   <?MIVAR COND="$(NXST,$contribs)" NAME=$contribs><?/MIVAR>
   <?MIVAR COND="$(NXST,$go_term)" NAME=$go_term><?/MIVAR>
   <?MIVAR NAME=pub_id>$(TRIM,$pub_id)<?/MIVAR>
   <?MIVAR NAME=inf_mem>$(TRIM,$inf_mem)<?/MIVAR>
   <?MIVAR NAME=go_id>$(TRIM,$go_id)<?/MIVAR>
   <?MIVAR NAME=go_num>$(SUBSTR,$go_id,4)<?/MIVAR>   
   <?MIVAR NAME=annexist>f<?/MIVAR>
   <?MISQL SQL="select goterm_zdb_id, goterm_name, goterm_ontology from go_term 
				where goterm_go_id like '$go_num';">
   <?/MISQL>
   <?MIVAR NAME=$go_zdb_id>$1<?/MIVAR>
   <?MIVAR NAME=$go_term>$(URLENCODE,$2)<?/MIVAR>
   <?MIVAR NAME=$go_ontology>$3<?/MIVAR>

   <?MIVAR NAME=return_info>&go_id=$go_id&evidence_code=$evidence_code&pub_id=$pub_id&inf_db=$inf_db&inf_mem=$inf_mem&notes=$notes&go_term=$go_term<?/MIVAR>

   <!---  check for exist same annotation when the new annotation doesn't have inference group --->
   <?MIBLOCK COND="$(EC,$inf_mem,)">
	<?MISQL SQL="select mrkrgoev_zdb_id 
		       from marker_go_term_evidence 
		      where mrkrgoev_mrkr_zdb_id   = '$OID'
			and mrkrgoev_go_term_zdb_id ='$go_zdb_id'
			and mrkrgoev_source_zdb_id ='$pub_id' 
			and mrkrgoev_evidence_code ='$evidence_code'
			and mrkrgoev_zdb_id not in (select infgrmem_mrkrgoev_zdb_id 
						      from inference_group_member  )">
	<?/MISQL>

        <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
   	    <SCRIPT>
    		 window.alert('This annotation already exists. Please enter another annotation.');
               <?MIVAR>  
  		 window.location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&go_term=$go_term$return_info")
               <?/MIVAR>
    	    </SCRIPT>
            <?MIVAR NAME=$annexist>t<?/MIVAR>
       <?MIELSE>
            <?MIVAR NAME=$annexist>f<?/MIVAR>
  	<?/MIBLOCK>

   <?/MIBLOCK>

   <!--- pubid validation check --->

   <?MISQL SQL="select WebExplode(object, 'attr=pubid&value=$pub_id&return_page=markergoentry.apg&return_id=$OID$return_info') from webPages where ID='aa-markergovalidate.apg';">$1<?/MISQL>

   <!-- inference group member validation check --->
   <?MISQL COND="$(OR,$(NC,$inf_mem,),$(EC,$evidence_code,IC))" SQL="select WebExplode(object, 'attr=inference&value=$inf_mem&valuedb=$inf_db&evidence_code=$evidence_code&return_page=markergoentry.apg&return_id=$OID$return_info') from webPages where ID='aa-markergovalidate.apg';">$1<?/MISQL>

<!--annotation existence check-->
<?MIBLOCK COND="$(EC,$annexist,f)">
  <?MIBLOCK COND="$(EC,$isValid,t)"><!-- isValid is set in markergovalidate.apg -->
   <!-- start the insert change -->
   <?MIVAR NAME=$comments>create a new GO annotation from literature<?/MIVAR>
   <?MISQL SQL="
      insert into updates (submitter_id,submitter_name, rec_id, field_name, comments, when)
     		   values ('$ZDB_ident', '$ZDB_name','$OID', 'go annotation', '$comments', current);">
   <?/MISQL>

   <?MICOMMENT>when a new known annotation is made, delete the exist unknown term in the same ontology on the same marker if any<?/MICOMMENT>
   <?MIBLOCK COND="$(AND,$(NC,$go_num,0005554),$(NC,$go_num,0000004),$(NC,$go_num,0008372))"> 
  
     <?MISQL COND="$(EC,$go_ontology,Molecular Function)" SQL="
	  delete from zdb_active_data where zactvd_zdb_id = (select mrkrgoev_zdb_id
							      from marker_go_term_evidence, go_term
							     where mrkrgoev_mrkr_zdb_id = '$OID'
							       and mrkrgoev_go_term_zdb_id = goterm_zdb_id
							       and goterm_go_id = '0005554') ">
     <?/MISQL>
     <?MISQL COND="$(EC,$go_ontology,Biological Process)" SQL="
	  delete from zdb_active_data where zactvd_zdb_id = (select mrkrgoev_zdb_id
							      from marker_go_term_evidence, go_term
							     where mrkrgoev_mrkr_zdb_id = '$OID'
							       and mrkrgoev_go_term_zdb_id = goterm_zdb_id
							       and goterm_go_id = '0000004') ">
     <?/MISQL>
     <?MISQL COND="$(EC,$go_ontology,Cellular Component)" SQL="
	  delete from zdb_active_data where zactvd_zdb_id = (select mrkrgoev_zdb_id
							      from marker_go_term_evidence, go_term
							     where mrkrgoev_mrkr_zdb_id = '$OID'
							       and mrkrgoev_go_term_zdb_id = goterm_zdb_id
							       and goterm_go_id = '0008372') ">
     <?/MISQL>
   <?/MIBLOCK>

<?MISQL SQL="execute function get_id('MRKRGOEV');"><?/MISQL>
   <?MIVAR NAME=$evnew_id>$1<?/MIVAR>

   <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values('$evnew_id');"><?/MISQL>
   <?MICOMMENT>GO attribution in record_attribution is added by the db trigger. <?/MICOMMENT>
   <?MISQL SQL="
	insert into marker_go_term_evidence (mrkrgoev_zdb_id,mrkrgoev_mrkr_zdb_id,mrkrgoev_go_term_zdb_id, mrkrgoev_source_zdb_id,mrkrgoev_evidence_code, mrkrgoev_notes, mrkrgoev_date_entered, mrkrgoev_date_modified, mrkrgoev_contributed_by, mrkrgoev_modified_by)
        		values ('$evnew_id','$OID','$go_zdb_id','$pub_id', '$evidence_code', '$notes', CURRENT, CURRENT, '$ZDB_name', '$ZDB_name');">
   <?/MISQL>

   <?MISQL COND="$(EC,$is_not,true)" SQL="insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) 
						values ('not', '$evnew_id')">
   <?/MISQL>
   <?MISQL COND="$(EC,$contributes,true)" SQL="insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) 
						values ('contributes to', '$evnew_id')">
   <?/MISQL>

   <!--now processing those entries that have inference data-->

   <?MIBLOCK COND="$(NC,$inf_mem,)">
        <?MIBLOCK INDEX=$i FROM=0 TO=5 STEP=1>
           <?MIVAR NAME=$inferred>$(INDEX,$i,$inf_mem)<?/MIVAR>
           <?MIVAR NAME=$inferred>$(TRIM,$inferred)<?/MIVAR>
           <?MIVAR COND="$(EC,$inf_db,GO)">$(SETVAR,$inferred,$(SUBSTR,$inferred,4))<?/MIVAR>

           <?MIBLOCK COND="$(NC,$inferred,)">
             <?MIVAR NAME=$inflink>$inf_db:$inferred<?/MIVAR>
            
             <?MISQL SQL="insert into inference_group_member (infgrmem_mrkrgoev_zdb_id, infgrmem_inferred_from)
             						 values ('$evnew_id',  '$inflink')">
             <?/MISQL>
           <?/MIBLOCK>

        <?/MIBLOCK>

   <?/MIBLOCK>  <!--end if null inference-->  
   <!-- okay, now just bail back to the markergoentry to view results -->
   <?MIVAR>
      <SCRIPT>
   	location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID")
      </SCRIPT>
   <?/MIVAR>
  <?/MIBLOCK> <!-- end if valid --->
<?/MIBLOCK> <!--end annotation existence check-->
<?/MIBLOCK>
