<?MICOMMENT>
FILE: do-markergoupdate.apg

Very simple. Just commits the updates requested in the forms tossed up by
gomodify. Also files update record.

EXPECTED VARS:
OID -- the zdb_id of the rec to update
gene_name -- the new value to stick in the column
go_term -- the new value of go_term.
pub_id -- the new value of pub
go_notes -- the new value of notes
evidence_code -- the new value of evidence code
inf_from -- the new value for inference
is_not
<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL
  <?/MIVAR>

  <br>Code: $MI_ERRORCODE
  <br>State: $MI_ERRORSTATE
  <br>Message: $MI_ERRORMSG 
<?/MIERROR>

<?MICOMMENT>
  First check security. Main purpose is just to get submitter id and name
<?/MICOMMENT>

  <?MISQL SQL="
    select WebExplode(object,'permission=root') 
      from webPages 
      where ID='aa-secure_navigation.apg';">
    $1
  <?/MISQL>
<?MIBLOCK COND="$(AND,$(XST,$AUTHORIZED),$(NC,$AUTHORIZED,false))">

  <?MIVAR COND="$(NXST,$OID)" NAME=$OID><?/MIVAR>
  <?MIVAR COND="$(NXST,$go_id)" NAME=$go_id><?/MIVAR>
  <?MIVAR COND="$(NXST,$pub_id)" NAME=$pub_id><?/MIVAR>
  <?MIVAR COND="$(NXST,$evidence_code)" NAME=$evidence_code>$(TRIM,$evidence_code)<?/MIVAR>
  <?MIVAR COND="$(NXST,$is_not)" NAME=$is_not><?/MIVAR>
  <?MIVAR COND="$(NXST,$contributes)" NAME=$contributes><?/MIVAR>
  <?MIVAR COND="$(NXST,$inf_db)" NAME=$inf_db><?/MIVAR>
  <?MIVAR COND="$(NXST,$inf_from)" NAME=$inf_from><?/MIVAR>
  <?MIVAR COND="$(NXST,$notes)" NAME=$notes><?/MIVAR>
  <?MIVAR COND="$(NXST,$inflink)" NAME=$inflink><?/MIVAR>
  <?MIVAR NAME=$evidence_code>$(TRIM,$(URLDECODE,$evidence_code))<?/MIVAR>
  <?MIVAR NAME=comma>,<?/MIVAR>
  <?MIVAR NAME=$golength>$(STRLEN,$go_id)<?/MIVAR>
  <?MIVAR NAME=$numID>$(SUBSTR,$go_id,4,$golength)<?/MIVAR>
  <?MIVAR NAME=inf_from>$(TRIM,$inf_from)<?/MIVAR>
  <?MISQL SQL="select goterm_zdb_id from go_term where goterm_go_id like '$numID';"><?/MISQL>
  <?MIVAR NAME=$goterm_id>$1<?/MIVAR>
<?MISQL SQL="select goterm_name from go_term where goterm_go_id='$numID'"><?/MISQL>
  <?MIVAR NAME=$gotermname>$1<?/MIVAR>

  <?MIVAR NAME=$comments>Updated GO annotations from literature<?/MIVAR>
  <?MIVAR NAME=$field>GO<?/MIVAR>
    <?MIVAR NAME=$invpub>false<?/MIVAR>
    <?MIVAR NAME=$invinf>false<?/MIVAR>
    <?MIVAR NAME=$invgoinf>false<?/MIVAR>
    <?MIVAR NAME=$invgoevi>false<?/MIVAR>
    <?MIVAR NAME=$annexists>false<?/MIVAR>
   <?MISQL SQL="select mrkrgo_zdb_id from marker_go_term where mrkrgo_go_term_zdb_id='$goterm_id' and mrkrgo_mrkr_zdb_id='$OID'"><?/MISQL>
     <?MIVAR NAME=$mrkrgozdbid>$1<?/MIVAR>
<?MIBLOCK COND="$(EC,$inf_from,)">
<?MISQL SQL="select mrkrgoev_zdb_id from marker_go_term_evidence where mrkrgoev_source_zdb_id='$pub_id' and mrkrgoev_evidence_code='$evidence_code' and mrkrgoev_mrkrgo_zdb_id='$mrkrgozdbid'"><?/MISQL>
<?MIVAR NAME=SQLchk>"select mrkrgoev_zdb_id from marker_go_term_evidence where mrkrgoev_source_zdb_id='$pub_id' and mrkrgoev_evidence_code='$evidence_code' and mrkrgoev_mrkrgo_zdb_id='$mrkrgozdbid'<?/MIVAR>
   <?MIBLOCK COND="$(=,$MI_ROWCOUNT,1)">
    <SCRIPT>
     window.alert('This annotation already exists. Please enter another annotation.');
    </SCRIPT>
    <?MIVAR NAME=$annexists>true<?/MIVAR>
    <?MIVAR>
    <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&pub=$pub_id&gotermname=$gotermname")
    </SCRIPT>
   <?/MIVAR>
  <?/MIBLOCK>
<?MIELSE>

<?MISQL SQL="select mrkrgoev_zdb_id from marker_go_term_evidence where mrkrgoev_source_zdb_id='$pub_id' and mrkrgoev_evidence_code='$evidence_code' and mrkrgoev_mrkrgo_zdb_id='$mrkrgozdbid'"><?/MISQL>
<?MIVAR NAME=$evid>$1<?/MIVAR>
   <?MIBLOCK COND="$(=,$MI_ROWCOUNT,1)">
      <?MISQL SQL="select infgrp_zdb_id from inference_group where infgrp_mrkrgoev_zdb_id='$evid'">
       <?MIVAR NAME=$infzdb>$1<?/MIVAR>
       <?MISQL SQL="select infgrmem_inferred_from from inference_group_member where infgrmem_infgrp_zdb_id='$infzdb'">
<b><?MIVAR>$1<?/MIVAR></b>
<i><?MIVAR>$inf_db:$inf_from<?/MIVAR></i>
         <?MIBLOCK COND="$(EC,$1,$inf_db:$inf_from)">
           <SCRIPT>
           window.alert('This annotation already exists. Please enter another annotation.');
           </SCRIPT>
           <?MIVAR NAME=$annexists>true<?/MIVAR>
           <?MIVAR>
           <SCRIPT>
               location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&pub=$pub_id&gotermname=$gotermname")
          </SCRIPT>
         <?/MIVAR>
        <?/MIBLOCK>
       <?/MISQL>
<?/MISQL>
    <?/MIBLOCK>
<?/MIBLOCK>

<?MISQL SQL="select zdb_id from publication where zdb_id='$pub_id'"><?/MISQL>
   <?MIBLOCK COND="$(=,$MI_ROWCOUNT,0)">
    <SCRIPT>
     window.alert('Please enter a valid pub ID');
    </SCRIPT>
    <?MIVAR NAME=$invpub>true<?/MIVAR>
    <?MIVAR>
    <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&pub=$pub_id&infdb=$inf_db&inf=$inf_from&gotermname=$gotermname")
    </SCRIPT>
   <?/MIVAR>
  <?/MIBLOCK>
<?MIVAR NAME=comma>,<?/MIVAR>
<?MIBLOCK COND="$(EC,$inf_db,ZFIN)">
 <?MIBLOCK COND="$(NC,$inf_from,)">
      <?MIBLOCK COND="$(=,$(POSITION,$inf_from,$comma),0)">
<?MISQL SQL="select zactvd_zdb_id from zdb_active_data where zactvd_zdb_id='$inf_from'"><?/MISQL>
        <?MIBLOCK COND="$(=,$MI_ROWCOUNT,0)">
            <?MIVAR NAME=$invinf>true<?/MIVAR>
            <SCRIPT>
              window.alert('Please enter a valid ZDB ID in the inference field');
            </SCRIPT>
           <?MIVAR>
           <SCRIPT>
             location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&infdb=ZFIN&pub=$pub_id&inf=$inf_from&gotermname=$gotermname")
          </SCRIPT>
          <?/MIVAR>
      <?/MIBLOCK>
    <?MIELSE>
       commm spet infer

        <?MIBLOCK INDEX=$i FROM=0 TO=5 STEP=1>
           <?MIVAR NAME=$inferred>$(INDEX,$i,$inf_from)<?/MIVAR>
           <?MIVAR NAME=$inferred>$(TRIM,$inferred)<?/MIVAR>
<?MIBLOCK COND="$(NC,$inferred,)">
<?MISQL SQL="select zactvd_zdb_id from zdb_active_data where zactvd_zdb_id='$inferred'"><?/MISQL>
<?MIVAR NAME=SQL1>"select zactvd_zdb_id from zdb_active_data where zactvd_zdb_id='$inferred'"<?/MIVAR>
        <?MIBLOCK COND="$(=,$MI_ROWCOUNT,0)">
            <?MIVAR NAME=$invinf>true<?/MIVAR>
            <SCRIPT>
              window.alert('Please enter a valid ZDB ID in the inference field');
            </SCRIPT>
           <?MIVAR>
           <SCRIPT>
             location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&infdb=ZFIN&pub=$pub_id&inf=$inf_from&gotermname=$gotermname")
          </SCRIPT>
          <?/MIVAR>
<?/MIBLOCK>
      <?/MIBLOCK>
        <?/MIBLOCK>
    <?/MIBLOCK>
<?/MIBLOCK>
<?/MIBLOCK>
<?MIBLOCK COND="$(EC,$inf_db,GO)">
   <?MIBLOCK COND="$(NC,$evidence_code,IC)">
     
    <?MIVAR NAME=$invgoevi>true<?/MIVAR>
    <SCRIPT>
     window.alert('A GO inference can only be used if the evidence code is IC');
    </SCRIPT>
    <?MIVAR>
    <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&infdb=GO&pub=$pub_id&inf=$inf_from&gotermname=$gotermname")
    </SCRIPT>
   <?/MIVAR>
    <?/MIBLOCK>
      <?MIBLOCK COND="$(=,$(POSITION,$inf_from,|),0)">
  <?MIVAR NAME=$gotermid>$(SUBSTR,$inf_from,4,10)<?/MIVAR>
  <?MISQL SQL="select goterm_name from go_term where goterm_go_id='$gotermid'"><?/MISQL>
  <?MIVAR NAME=goinf>$1<?/MIVAR>
   <?MIBLOCK COND="$(EC,$goinf,NOVALUE)">
    <?MIVAR NAME=$invgoinf>true<?/MIVAR>
    <SCRIPT>
     window.alert('Please enter a valid GO ID in the inference field');
    </SCRIPT>
    <?MIVAR>
    <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&infdb=GO&pub=$pub_id&inf=$inf_from&gotermname=$gotermname")
    </SCRIPT>
   <?/MIVAR>
  <?/MIBLOCK>
<?/MIBLOCK>
<?MISQL SQL="select * from marker_go_term,go_term where mrkrgo_mrkr_zdb_id='$OID' and mrkrgo_go_term_zdb_id=goterm_zdb_id and goterm_go_id='$gotermid'"><?/MISQL>

  <?MIVAR NAME=$rowcount>$MI_ROWCOUNT<?/MIVAR>
  <?MIBLOCK COND="$(=,$rowcount,0)">
    <?MIVAR NAME=$invgoinf>true<?/MIVAR>
    <SCRIPT>
     window.alert('Only GO terms that have been assigned to this gene can be used in the infered from field. Please correct your entry and resubmit');
    </SCRIPT>
    <?MIVAR>
    <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID&evidence=$evidence_code&infdb=GO&pub=$pub_id&inf=$inf_from&gotermname=$gotermname")
    </SCRIPT>
   <?/MIVAR>
  <?/MIBLOCK>

<?/MIBLOCK>

<?MIBLOCK COND="$(AND,$(EC,$invpub,false),$(EC,$invinf,false),$(EC,$invgoinf,false),$(EC,$annexists,false),$(EC,$invgoevi,false))">
  <?MISQL SQL="
    insert into updates
        (submitter_id,submitter_name, rec_id, field_name, old_value,
comments,
         when)
      values ('$ZDB_ident', '$ZDB_name','$OID', '$field',' ' ,
              '$comments', current);">
  <?/MISQL>

<!--inserting GO attribution to gene in record attribution table-->
  <?MISQL SQL="
    select count(*) from record_attribution where recattrib_data_zdb_id='$OID' and recattrib_source_zdb_id='$pub_id'"><?/MISQL>
  <?MIBLOCK COND="$(=,$1,0)">
     <?MISQL SQL="insert into record_attribution values ('$OID','$pub_id','')"><?/MISQL>
  <?/MIBLOCK>    

  <?MISQL SQL="select goterm_zdb_id from go_term where goterm_go_id like '$numID';"><?/MISQL>
   <?MIVAR NAME=$goterm_id>$1<?/MIVAR>

   <?MISQL SQL="execute function get_id('MRKRGO');"><?/MISQL>
   <?MIVAR NAME=$new_id>$1<?/MIVAR>
   <?MISQL SQL="execute function get_id('MRKRGOEV');"><?/MISQL>
   <?MIVAR NAME=$evnew_id>$1<?/MIVAR>
   <?MISQL SQL="execute function get_id('INFGRP');"><?/MISQL>
   <?MIVAR NAME=$infnew_id>$1<?/MIVAR>

<!--checking to see if marker go term zdb id already exists-->

   <?MISQL SQL="select mrkrgo_zdb_id from marker_go_term where mrkrgo_go_term_zdb_id='$goterm_id' and mrkrgo_mrkr_zdb_id='$OID'"><?/MISQL>
     <?MIVAR NAME=$mrkrgozdbid>$1<?/MIVAR>
     <?MIBLOCK COND="$(EC,$mrkrgozdbid,NOVALUE)">
       <!--inserting markergo in zdb active data,inserting term in marker go term-->

       <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values('$new_id');"><?/MISQL>
       <?MISQL SQL="insert into marker_go_term (mrkrgo_zdb_id,mrkrgo_mrkr_zdb_id,mrkrgo_go_term_zdb_id,mrkrgo_date_entered,mrkrgo_date_modified,mrkrgo_modified_by,mrkrgo_contributed_by)
       values ('$new_id','$OID','$goterm_id',CURRENT,CURRENT,'$ZDB_name','$ZDB_name');">
       <?/MISQL>
       <?MIVAR NAME=$mrkrgoexist>false<?/MIVAR>
    <?MIELSE>
        <?MIVAR NAME=$mrkrgoexist>true<?/MIVAR> 
    <?/MIBLOCK>

<!--now inserting records into tables depending on inference data-->
    <?MIBLOCK COND="$(EC,$inf_from,)">
       No inferred from, single reference
       <?MIBLOCK COND="$(EC,$mrkrgoexist,true)">
            <?MIVAR NAME=$new_id>$mrkrgozdbid<?/MIVAR>
       <?/MIBLOCK>
       <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id)
         values ('$evnew_id');">
       <?/MISQL>
       <?MIVAR NAME=$pub_id>$(TRIM,$pub_id)<?/MIVAR>
       <?MISQL SQL="insert into record_attribution(recattrib_data_zdb_id,recattrib_source_zdb_id)
        values ('$evnew_id','$pub_id');">
       <?/MISQL>
       <?MISQL SQL="insert into marker_go_term_evidence (mrkrgoev_zdb_id,mrkrgoev_mrkrgo_zdb_id,mrkrgoev_source_zdb_id,mrkrgoev_evidence_code, mrkrgoev_notes, mrkrgoev_date_entered, mrkrgoev_date_modified, mrkrgoev_contributed_by, mrkrgoev_modified_by)
        values ('$evnew_id','$new_id','$pub_id', '$evidence_code', '$notes', CURRENT, CURRENT, '$ZDB_name', '$ZDB_name');">
       <?/MISQL>

       <?MIVAR NAME=INS>"insert into marker_go_term_evidence (mrkrgoev_zdb_id,mrkrgoev_mrkrgo_zdb_id,mrkrgoev_source_zdb_id,mrkrgoev_evidence_code, mrkrgoev_notes, mrkrgoev_date_entered, mrkrgoev_date_modified, mrkrgoev_contributed_by, mrkrgoev_modified_by)
        values ('$evnew_id','$new_id','$pub_id', '$evidence_code', '$notes', CURRENT, CURRENT, '$ZDB_name', '$ZDB_name');"
       <?/MIVAR>
<?MIVAR>$INS<?/MIVAR>
       <?MIBLOCK COND="$(EC,$is_not,true)">
           <?MISQL SQL="insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values ('not', '$evnew_id')"><?/MISQL>
       <?/MIBLOCK>
       <?MIBLOCK COND="$(EC,$contributes,true)">
           <?MISQL SQL="insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values ('contributes to', '$evnew_id')"><?/MISQL>
       <?/MIBLOCK>
     <?MIBLOCK COND="$(EC,$is_not,true)">
            <?MIVAR NAME=SQL10>"insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values (not, '$evnew_id')"<?/MIVAR>
     <?/MIBLOCK>

     <?MIBLOCK COND="$(EC,$contributes,true)">
            <?MIVAR NAME=SQL11>"insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values (contributes to, '$evnew_id')"<?/MIVAR>
     <?/MIBLOCK>
       <?MIBLOCK COND="$(EC,$mrkrgoexist,true)">
            <?MIVAR NAME=$new_id>$mrkrgozdbid<?/MIVAR>
       <?/MIBLOCK>
    <?/MIBLOCK>

<!--now processing those entries that have inference data-->

    <?MIBLOCK COND="$(NC,$inf_from,)">
       <?MIBLOCK COND="$(EC,$mrkrgoexist,true)">
            <?MIVAR NAME=$new_id>$mrkrgozdbid<?/MIVAR>
       <?/MIBLOCK>

       <!--checking to see if marker go evidence key already exists for this combination of go term, evidence and pub-->

     <?MISQL SQL="select mrkrgoev_zdb_id from marker_go_term_evidence where mrkrgoev_source_zdb_id='$pub_id' and mrkrgoev_mrkrgo_zdb_id='$new_id' and mrkrgoev_evidence_code='$evidence_code'"><?/MISQL>
     <?MIVAR NAME=$mrkrgoevzdbid>$1<?/MIVAR>
     <?MIBLOCK COND="$(NC,$mrkrgoevzdbid,NOVALUE)">
        <?MIVAR NAME=$evexists>true<?/MIVAR>
        <?MIVAR NAME=$evnew_id>$mrkrgoevzdbid<?/MIVAR>
     <?MIELSE>
        <?MIVAR NAME=$evexists>false<?/MIVAR>
        <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values('$evnew_id');"><?/MISQL>
        <?MISQL SQL="insert into record_attribution (recattrib_data_zdb_id,recattrib_source_zdb_id)
         values ('$evnew_id','$pub_id');">
         <?/MISQL>

     <?MISQL SQL="insert into marker_go_term_evidence (mrkrgoev_zdb_id,mrkrgoev_mrkrgo_zdb_id,mrkrgoev_source_zdb_id,mrkrgoev_evidence_code, mrkrgoev_notes, mrkrgoev_date_entered, mrkrgoev_date_modified, mrkrgoev_contributed_by, mrkrgoev_modified_by)
        values ('$evnew_id','$new_id','$pub_id', '$evidence_code','$notes', CURRENT, CURRENT, '$ZDB_name','$ZDB_name');">
     <?/MISQL>
        <?MIVAR NAME=SQL1>"insert into zdb_active_data (zactvd_zdb_id) values('$evnew_id');"<?/MIVAR>
        <?MIVAR NAME=SQL2>"insert into record_attribution (recattrib_data_zdb_id,recattrib_source_zdb_id)
         values ('$evnew_id','$pub_id');"<?/MIVAR>

     <?MIVAR NAME=SQL3>"insert into marker_go_term_evidence (mrkrgoev_zdb_id,mrkrgoev_mrkrgo_zdb_id,mrkrgoev_source_zdb_id,mrkrgoev_evidence_code, mrkrgoev_notes, mrkrgoev_date_entered, mrkrgoev_date_modified, mrkrgoev_contributed_by, mrkrgoev_modified_by)
        values ('$evnew_id','$new_id','$pub_id', '$evidence_code','$notes', CURRENT, CURRENT, '$ZDB_name','$ZDB_name');"<?/MIVAR>

     <?/MIBLOCK>

        <?MISQL SQL="insert into zdb_active_data (zactvd_zdb_id) values('$infnew_id');"><?/MISQL>
     <?MISQL SQL="insert into inference_group (infgrp_zdb_id,infgrp_mrkrgoev_zdb_id, infgrp_contributed_by, infgrp_modified_by, infgrp_date_entered, infgrp_date_modified)
      values ('$infnew_id',  '$evnew_id', '$ZDB_name', '$ZDB_name', CURRENT, CURRENT);">
     <?/MISQL>

     <?MIBLOCK COND="$(EC,$is_not,true)">
            <?MISQL SQL="insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values ('not', '$evnew_id')"><?/MISQL>
     <?/MIBLOCK>

     <?MIBLOCK COND="$(EC,$contributes,true)">
            <?MISQL SQL="insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values ('contributes to', '$evnew_id')"><?/MISQL>
     <?/MIBLOCK>

     <?MIBLOCK COND="$(EC,$is_not,true)">
            <?MIVAR NAME=SQL10>"insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values (not, '$evnew_id')"<?/MIVAR>
     <?/MIBLOCK>

     <?MIBLOCK COND="$(EC,$contributes,true)">
            <?MIVAR NAME=SQL11>"insert into go_evidence_flag (goevflag_gflag_name,goevflag_mrkrgoev_zdb_id) values (contributes to, '$evnew_id')"<?/MIVAR>
     <?/MIBLOCK>



        <?MIVAR NAME=SQL6>"insert into zdb_active_data (zactvd_zdb_id) values('$infnew_id');"<?/MIVAR>
     <?MIVAR NAME=SQL4>"insert into inference_group (infgrp_zdb_id,infgrp_mrkrgoev_zdb_id, infgrp_contributed_by, infgrp_modified_by, infgrp_date_entered, infgrp_date_modified)
      values ('$infnew_id',  '$evnew_id', '$ZDB_name', '$ZDB_name', CURRENT, CURRENT);"<?/MIVAR>>


<!--now inserting inference data-->
      <?MIBLOCK COND="$(>,$(POSITION,$inf_from,$comma),0)">
<?MICOMMENT>
        <?MIVAR NAME=$inf_from>$(REPLACE,$inf_from,|,$comma) <?/MIVAR> 
<?/MICOMMENT>
        <?MIBLOCK INDEX=$i FROM=0 TO=5 STEP=1>
           <?MIVAR NAME=$inferred>$(INDEX,$i,$inf_from)<?/MIVAR>
           <?MIVAR NAME=$inferred>$(TRIM,$inferred)<?/MIVAR>
           <?MIBLOCK COND="$(NC,$inferred,)">
             <?MIVAR NAME=$inflink>$inf_db:$inferred<?/MIVAR>
             <?MIVAR NAME=SQL7>"insert into inference_group_member (infgrmem_infgrp_zdb_id, infgrmem_inferred_from)
              values ('$infnew_id',  '$inflink')"><?/MIVAR>
           <?MISQL SQL="insert into inference_group_member (infgrmem_infgrp_zdb_id, infgrmem_inferred_from)
              values ('$infnew_id',  '$inflink')">
           <?/MISQL>
           <?/MIBLOCK>

        <?/MIBLOCK>
    <?MIELSE>
              <?MIVAR NAME=$inflink>$inf_db:$inf_from<?/MIVAR>
              <?MISQL SQL="insert into inference_group_member (infgrmem_infgrp_zdb_id, infgrmem_inferred_from)
              values ('$infnew_id',  '$inflink')">
             <?/MISQL>

              <?MIVAR NAME=SQL8>"insert into inference_group_member (infgrmem_infgrp_zdb_id, infgrmem_inferred_from)
              values ('$infnew_id',  '$inflink')"<?/MIVAR>
   <?/MIBLOCK> <!--end if multiple inference here-->
  <?/MIBLOCK>  <!--end if null inference-->  
<?/MIBLOCK>


<!--If a marker has been annotated to an "Unknown" term and another known annotation has been added, deleted the "unknown" annotation-->


<?MISQL SQL="select goterm_name,mrkrgo_zdb_id from go_term,marker_go_term where mrkrgo_mrkr_zdb_id='$OID' and goterm_go_id ='0005554' and goterm_ontology='Molecular Function' and mrkrgo_go_term_zdb_id=goterm_zdb_id"><?/MISQL>
<?MIVAR NAME=mrkrgoid>$2<?/MIVAR>
<?MIBLOCK COND="$(NC,$mrkrgoid,NOVALUE)">
     <?MISQL SQL="select goterm_name,mrkrgo_zdb_id from go_term,marker_go_term where mrkrgo_mrkr_zdb_id='$OID' and goterm_ontology='Molecular Function' and mrkrgo_go_term_zdb_id=goterm_zdb_id and goterm_go_id!='0005554' "><?/MISQL>
     <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
      <?MISQL SQL="delete from zdb_active_data where zactvd_zdb_id='$mrkrgoid'">      <?/MISQL>
    <?/MIBLOCK>
<?/MIBLOCK>
<?MISQL SQL="select goterm_name,mrkrgo_zdb_id from go_term,marker_go_term where mrkrgo_mrkr_zdb_id='$OID' and goterm_go_id='0000004' and goterm_ontology='Biological Process' and mrkrgo_go_term_zdb_id=goterm_zdb_id">
<?MIVAR NAME=mrkrgoid>$2<?/MIVAR>
<?/MISQL>
<?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
     <?MISQL SQL="select goterm_name,mrkrgo_zdb_id from go_term,marker_go_term where mrkrgo_mrkr_zdb_id='$OID' and goterm_ontology='Biological Process' and mrkrgo_go_term_zdb_id=goterm_zdb_id and goterm_go_id!='0000004'"><?/MISQL>
     <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
      <?MISQL SQL="delete from zdb_active_data where zactvd_zdb_id='$mrkrgoid'"><?/MISQL>
    <?/MIBLOCK>
<?/MIBLOCK>
<?MISQL SQL="select goterm_name,mrkrgo_zdb_id from go_term,marker_go_term where mrkrgo_mrkr_zdb_id='$OID' and goterm_go_id='0008372' and goterm_ontology='Cellular Component' and mrkrgo_go_term_zdb_id=goterm_zdb_id">
<?MIVAR NAME=mrkrgoid>$2<?/MIVAR>
<?/MISQL>
<?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
     <?MISQL SQL="select goterm_name,mrkrgo_zdb_id from go_term,marker_go_term where mrkrgo_mrkr_zdb_id='$OID' and goterm_ontology='Cellular Component' and mrkrgo_go_term_zdb_id=goterm_zdb_id and goterm_go_id!='0008372'"><?/MISQL>
     <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
      <?MISQL SQL="delete from zdb_active_data where zactvd_zdb_id='$mrkrgoid'"><?/MISQL>
    <?/MIBLOCK>
<?/MIBLOCK>

<!--end unknown deletion logic-->
<!-- okay, now just bail back to the markergoentry to view results -->
<?MIVAR>
  <SCRIPT>
  location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markergoentry.apg&OID=$OID&goterm=$numID")
  </SCRIPT>
<?/MIVAR>
<?/MIBLOCK>
