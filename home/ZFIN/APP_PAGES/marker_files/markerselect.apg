
<!-- search form for genes and markers -->
<?MIBLOCK COND="$(NXST,$accession)">
 <HTML>
 <HEAD>
 <?MIVAR Name=page_name>ZFIN Marker Search $(IF,$(XST,$query_results),Results)<?/MIVAR>
 <?MIVAR><TITLE>$page_name</TITLE><?/MIVAR>

  <SCRIPT>

    function call_reset() {

	document.critform.input_name.value = "";
	document.critform.input_acc.value = "";
	document.critform.START.value = "";
	document.critform.lg.selectedIndex = 0;
	document.critform.compare.selectedIndex = 0;
	document.critform.marker_type.selectedIndex = 0;
	document.critform.sequence_type.selectedIndex = 0;
	document.critform.vector_type.selectedIndex = 0;
	document.critform.WINSIZE.value = 20;

     }
   </SCRIPT>

 <?MISQL SQL="
  select object 
    from webPages 
    where ID = 'aa-chromoscripts.apg';">
   $1
 <?/MISQL>

 </HEAD>

 <BODY>

  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>


<?/MIBLOCK><!-- end XST accession which means it is called by Accession Search --> 



  <?MISQL SQL="
    select WebExplode(object,'') 
      from webPages 
      where ID = 'aa-identify.apg';">
    $1
  <?/MISQL>
  <?MICOMMENT> set userid to ZDB_ID of user or GUEST to be used by the map viewer<?/MICOMMENT>
  <?MIVAR NAME=$userid>GUEST<?/MIVAR>
  <?MIBLOCK COND="$(NC,$(SUBSTR,$ZDB_name,1,5),GUEST)">
    <?MIVAR NAME=$userid>$ZDB_ident<?/MIVAR>
  <?/MIBLOCK>

<?MIVAR name=$highlight><!--|HIGHLIGHT_COLOR|--><?/MIVAR>
<?MIVAR NAME=$MI_NULL><?/MIVAR>
<?MIVAR NAME=$MI_NOVALUE><?/MIVAR>
<?MIVAR NAME=$OID COND="$(NXST,$OID)"><?/MIVAR>
<?MIVAR COND="$(AND,$(XST,$accession),$(XST,$input_acc))">
  <?MICOMMENT>*** when called by accession search and the input is an dblink accession, need to unset $constraint to avoid trouble when webexplode both markerselect and msegselect<?/MICOMMENT>
  $(UNSETVAR,$constraint)
  $(UNSETVAR,$marker_type)
<?/MIVAR> 


<?MICOMMENT>this part is executed after a search is submitted for
gene/marker search or accession search, or when
requested from publication page for related data list.
<?/MICOMMENT>

<?MIBLOCK COND="$(OR,$(XST,$query_results),$(XST,$pubId))">

 
  <?MICOMMENT>forbidden simultanious name and acc search <?/MICOMMENT>
  <?MIBLOCK COND="$(AND,$(XST,$input_acc),$(XST,$input_name))">
   <script>
     window.alert("Please modify your search for either name search or accession search.");
   </script>

  <?MIELSE>
 
   <?MIVAR COND="$(NXST,$lg)" NAME=$lg>0<?/MIVAR>

   <?MICOMMENT>when called from publication page, $type is passes in 
	indictating for gene list or mapped data list. 
   <?/MICOMMENT>
   <?MIVAR COND="$(NXST,$type)" NAME=$type>marker<?/MIVAR>	

   <?MICOMMENT>Format of result page:
    when gene is not involved, columns of symbol-name, and map. 
    when gene is involved, two more columns expression, and mutant locus
   <?/MICOMMENT> 
   <?MIVAR NAME=$xpat_loci_cols>y<?/MIVAR>

   <?MICOMMENT>when called from accessionselect, constraint is passes in,
    check the OID to decided the format of result list
   <?/MICOMMENT> 
   <?MIBLOCK COND="$(XST,$constraint)">
    <?MIVAR COND="$(=,$(POSITION,$OID,GENE),0)" NAME=$xpat_loci_cols>n
    <?/MIVAR>
   <?/MIBLOCK>

   <?MIVAR NAME=$name_sig_col><?/MIVAR>
   <?MIVAR NAME=$allname_table><?/MIVAR>
   <?MIVAR NAME=$sig_order><?/MIVAR>


   <?MICOMMENT>Build up the constraint clause for gene/marker search,
	constraint for calls from pubview is build next. 
   <?/MICOMMENT> 

   <?MIBLOCK COND="$(AND,$(NXST,$constraint),$(NXST,$pubId))">

    <?MIVAR NAME=$constraint><?/MIVAR>

    <?MICOMMENT>This next part builds up a query piece by piece, based on which criteria were passed in<?/MICOMMENT>
    <?MIVAR COND="$(NXST,$compare)" NAME=$compare>contains<?/MIVAR>
    <?MIVAR NAME=$wild_card><?/MIVAR>
    <?MIVAR COND="$(NC,$compare,starts)" NAME=$wild_card>%<?/MIVAR>
    <?MIBLOCK COND="$(XST,$marker_type)">
	<?MIVAR NAME=$constraint> mrkr_type = '$marker_type'<?/MIVAR>
	<?MISQL SQL="
		select mrkrtype_type_display
		  from marker_types
		 where marker_type = '$marker_type'
		;">
	   <?MIVAR NAME=$marker_type_display>$1<?/MIVAR>
	<?/MISQL>
	
	<?MISQL SQL="
		select *
		  from marker_type_group_member
		where mtgrpmem_mrkr_type_group = 'GENEDOM'
		  and mtgrpmem_mrkr_type = '$marker_type'
		;">
	<?/MISQL>
	<?MIVAR COND="$(>,$MI_ROWCOUNT,0)" NAME=type_of_genedom>t<?/MIVAR>
    <?MIELSE>
	<?MIVAR NAME=$constraint> mrkr_type not in (select mtgrpmem_mrkr_type from marker_type_group_member where mtgrpmem_mrkr_type_group ='SEARCH_SEG')<?/MIVAR>
    <?/MIBLOCK>
   
    <!---------------------------------------------------------------------->
    <?MIBLOCK COND="$(XST,$input_name)">
      <?MISQL SQL="
	  create temp table mrkrselect_name_match(
		mrkrmch_zdb_id	varchar(50),
		mrkrmch_name	varchar(120),
		mrkrmch_significance	integer, 
		mrkrmch_precedence	varchar(80)) with no log;	 ">
      <?/MISQL>
      <?MISQL SQL="
	  create index mrkrselect_name_match_zdb_id 
		on mrkrselect_name_match (mrkrmch_zdb_id); ">
      <?/MISQL>	 	 

      <?MIVAR NAME=geneMchIdLast><?/MIVAR>	
      <?MISQL SQL="
	 select allmapnm_zdb_id, allmapnm_name, 
		allmapnm_significance, allmapnm_precedence 
           from all_map_names
	  where allmapnm_name_lower like '$wild_card$(LOWER,$input_name)%'
            and allmapnm_precedence <> 'Accession number'
         order by allmapnm_zdb_id, allmapnm_significance, allmapnm_name;">
	<?MIVAR NAME=geneMchId>$1<?/MIVAR>
        <?MISQL COND="$(NC,$geneMchId,$geneMchIdLast)" SQL="
            insert into mrkrselect_name_match 
		values('$1', '$(URLENCODE,$2)', '$3', '$4'); "> <!-- the URLENCODE encodes "'" which is problematic--> 
 		$(SETVAR,$geneMchIdLast,$geneMchId)          	
        <?/MISQL>
      <?/MISQL>
     	
      <?MIVAR>
        $(SETVAR,$name_sig_col,", mrkrmch_name, mrkrmch_significance, mrkrmch_precedence") 
	$(SETVAR,$sig_order," mrkrmch_significance, ")
	$(SETVAR,$allname_table,",mrkrselect_name_match")
	$(VECAPPEND, $constraint, " mrkr_zdb_id = mrkrmch_zdb_id ")

      <?/MIVAR>
    <?/MIBLOCK>  <!----------------------------------------------------->



    <!----------------------------------------------------------------------------->
    <?MICOMMENT>** 08/27 separate accession search from name search<?/MICOMMENT>
    <?MIBLOCK COND="$(XST,$input_acc)">
       <?MISQL SQL="
	select allmapnm_zdb_id, allmapnm_name, allmapnm_significance, allmapnm_precedence
          from all_map_names
	 where allmapnm_name_lower like '$(LOWER,$input_acc)%'
           and allmapnm_precedence = 'Accession number'
        UNION
	select mrel_mrkr_1_zdb_id as allmapnm_zdb_id, allmapnm_name, allmapnm_significance, allmapnm_precedence
          from all_map_names, marker_relationship
	 where allmapnm_name_lower like '$(LOWER,$input_acc)%'
           and allmapnm_precedence = 'Accession number'
	   and mrel_mrkr_2_zdb_id = allmapnm_zdb_id
	   and mrel_type in ('gene contains small segment',
			  'gene encodes small segment')
	 UNION
	select mrel_mrkr_2_zdb_id as allmapnm_zdb_id, allmapnm_name, allmapnm_significance, allmapnm_precedence
          from all_map_names, marker_relationship
	 where allmapnm_name_lower like '$(LOWER,$input_acc)%'
           and allmapnm_precedence = 'Accession number'
	   and mrel_mrkr_1_zdb_id = allmapnm_zdb_id
	   and mrel_type = 'clone contains gene'
	into temp mrkrselect_acc_match with no log; ">
      <?/MISQL>
      <?MIVAR>
        $(SETVAR,$allname_table,",mrkrselect_acc_match")
	$(VECAPPEND, $constraint," mrkr_zdb_id = allmapnm_zdb_id ")
      <?/MIVAR>
    <?/MIBLOCK> <!-------------------------------------------------------->

 

    <!--------------------- if LG is selected -------------------->
    <?MIBLOCK COND="$(NC,$lg,0)">
      <?MICOMMENT>we do mapping info pullover between clones and genes/small segs. <?/MICOMMENT>
      <?MISQL  SQL="
	select marker_id 
          from mapped_marker
	 where or_lg = '$lg'
      UNION 
	select mrel_mrkr_2_zdb_id as marker_id
	  from mapped_marker, marker_relationship
	 where mrel_mrkr_1_zdb_id = marker_id
	   and or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment')
       UNION 
	select mrel_mrkr_1_zdb_id as marker_id
	  from mapped_marker, marker_relationship
	 where mrel_mrkr_2_zdb_id = marker_id
	   and or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment',
			     'gene encodes small segment')
       UNION
        select lnkgmem_member_zdb_id as marker_id
	  from linkage, linkage_member
	 where lnkg_or_lg = '$lg'
  	   and lnkgmem_linkage_zdb_id = lnkg_zdb_id 
       UNION	
	select mrel_mrkr_2_zdb_id as marker_id
	  from marker_relationship, linkage, linkage_member
	 where mrel_mrkr_1_zdb_id = lnkgmem_member_zdb_id
  	   and lnkgmem_linkage_zdb_id = lnkg_zdb_id 
	   and lnkg_or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment')
       UNION 
	select mrel_mrkr_1_zdb_id as marker_id
	  from marker_relationship, linkage, linkage_member
	 where mrel_mrkr_2_zdb_id = lnkgmem_member_zdb_id
  	   and lnkgmem_linkage_zdb_id = lnkg_zdb_id 
	   and lnkg_or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment',
			     'gene encodes small segment')

	  into temp mrkrselect_on_lg with no log; ">
       <?/MISQL> 
    
       <?MIVAR NAME=$lgConstraint> mrkr_zdb_id in (select marker_id from mrkrselect_on_lg)<?/MIVAR>
       <?MIVAR>
          $(VECAPPEND, $constraint, $lgConstraint )		 
       <?/MIVAR>	
    <?/MIBLOCK>
    <!-------------------- end LG ----------------->


    <?MIVAR COND="$(XST,$knownloci)"> 
	$(VECAPPEND, $constraint, "mrkr_zdb_id in (select cloned_gene from locus)")
    <?/MIVAR>
    <?MIVAR COND="$(AND,$(XST,$marker_type),$(NXST,$type_of_genedom))">
        $(SETVAR,$xpat_loci_cols,n)
    <?/MIVAR>

    <?MIVAR NAME=constraint SEPARATE=" AND ">$constraint<?/MIVAR>

  <?/MIBLOCK> <!-- end build constraint for gene/marker search -->

  

  <?MICOMMENT>main execution of data collection<?/MICOMMENT>
  <?MICOMMENT>the first block select markers match the constraint and furthur filter out the mapped ones if needed, the second part deals with the mapped data links from publication page which only collect linkage group mapping, and not only for marker but also mutant
  <?/MICOMMENT>


  <?MIBLOCK COND="$(EC,$type,pub_mrkr)">

     <?MISQL SQL="
	select mrkr_zdb_id, mrkr_name, mrkr_abbrev, mrkr_abbrev_order, mrkr_type $name_sig_col
	from  record_attribution, marker 
	where recattrib_source_zdb_id = '$pubId'
	  and recattrib_data_zdb_id = mrkr_zdb_id 
	  and mrkr_type in 
		  (select mtgrpmem_mrkr_type from marker_type_group_member
                    where mtgrpmem_mrkr_type_group = 'SEARCH_MK')
	into temp mrkrselect_tmp_markers with no log; 
	">
     <?/MISQL>	

  <?MIELSE COND="$(EC,$type,pub_mapped)" >     
     <?MISQL SQL="
	select mrkr_zdb_id, mrkr_name, mrkr_abbrev, mrkr_abbrev_order, mrkr_type $name_sig_col, lnkg_or_lg as or_lg
  	from record_attribution, linkage_member,linkage, marker
  	where recattrib_source_zdb_id = '$pubId'
    	and recattrib_data_zdb_id = lnkgmem_linkage_zdb_id
    	and lnkgmem_linkage_zdb_id = lnkg_zdb_id	
    	and lnkgmem_member_zdb_id = mrkr_zdb_id
	and lnkg_or_lg <> '0'
		
 	UNION

  	select l.zdb_id as mrkr_zdb_id, locus_name as mrkr_name, l.abbrev as mrkr_abbrev, l.locus_abbrev_order as mrkr_abbrev_order $name_sig_col, 'MUTANT', lnkg_or_lg as or_lg
  	from record_attribution, linkage_member, linkage, fish f, locus l
  	where recattrib_source_zdb_id = '$pubId'
    	and recattrib_data_zdb_id = lnkgmem_linkage_zdb_id
    	and lnkgmem_linkage_zdb_id = lnkg_zdb_id
    	and lnkgmem_member_zdb_id = f.zdb_id 
    	and f.locus = l.zdb_id 
	and lnkg_or_lg <> '0'
  	into temp mrkrselect_tmp_pub_mapped_markers with no log;  ">
     <?/MISQL>
     <?MIVAR NAME=$xpat_loci_cols>n<?/MIVAR>
  
  <?MIELSE>

    <?MISQL SQL="
	  select distinct mrkr_zdb_id, mrkr_name, mrkr_abbrev, mrkr_abbrev_order, 
		 mrkr_type $name_sig_col 
	  from marker $allname_table
	  where $constraint
	  into temp mrkrselect_tmp_markers with no log
	;">
	 
    <?/MISQL>

    <?MISQL COND="$(XST,$input_name)" SQL="
	set explain off;
	drop table mrkrselect_name_match; ">
    <?/MISQL>

    <?MISQL COND="$(XST,$input_acc)" SQL="
	set explain off;
	drop table mrkrselect_acc_match; ">
    <?/MISQL>

    <?MISQL COND="$(NC,$lg,0)" SQL="
	set explain off;
	drop table mrkrselect_on_lg; ">
    <?/MISQL>


  <?/MIBLOCK>
  

  <?MIVAR NAME=$target_table>	
     $(IF,$(AND,$(XST,$pubId),$(EC,$type,pub_mapped)),mrkrselect_tmp_pub_mapped_markers,mrkrselect_tmp_markers)
  <?/MIVAR>
  <?MISQL SQL="
	select distinct mrkr_zdb_id
	  from $target_table;
	">
       <?MIVAR NAME=$the_marker>$1<?/MIVAR>
  <?/MISQL>
  <?MIVAR NAME=$num_recs>$MI_ROWCOUNT<?/MIVAR>
  <?MIBLOCK COND="$(AND,$(NXST,$return_rec),$(NXST,$accession),$(=,$num_recs,1))">
     <?MIVAR>	
	<SCRIPT>location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$the_marker")</SCRIPT>
     <?/MIVAR>
  <?MIELSE>

   <?MICOMMENT>return page title display<?/MICOMMENT>
   <table width=100%>
     <TR>
      <TD width=90%> 
          <font size="+1"><center>
	  <?MIBLOCK COND="$(XST,$pubId)">
            <?MIVAR>$(IF,$(EC,$type,pub_mrkr),Genes / Markers, Mapping Data) List (<b>$num_recs</b> records.)<?/MIVAR>
	  <?MIELSE COND="$(XST,$accession)">
	    <?MIVAR>Marker List (<b>$num_recs</b> records.)<?/MIVAR>
	  <?MIELSE>
	    <?MIVAR>$marker_type_display Search Results (<b>$num_recs</b> records.)<?/MIVAR>
	  <?/MIBLOCK></center>
          </font>
      </TD>
     <?MIBLOCK COND="$(NXST,$accession)">
       <TD width=10%>
     	 <?MICOMMENT>Insert a form with one button. 
	    label button Your Input Welcome
	 <?/MICOMMENT>
         <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
        </TD>
     <?/MIBLOCK>
    </TR>
    <?MIBLOCK COND="$(AND,$(XST,$marker_type),$(XST,$type_of_genedom))">
      <TR><TD>
	<?MIVAR NAME=$mrkr_param_list>&query_results=t$(IF,$(XST,$input_name),&input_name=$input_name)$(IF,$(XST,$input_acc),&input_acc=$input_acc)$(IF,$(XST,$compare),&compare=$compare)$(IF,$(NC,$lg,0),&lg=$lg)<?/MIVAR>
        
        <?MIBLOCK COND="$(NXST,$knownloci)"> 
	  <?MIVAR><input type=button 
            value="Show genes with known mutant loci" onClick="document.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerselect.apg&marker_type=GENE&knownloci=t$mrkr_param_list')">
	   <?/MIVAR>
	<?MIELSE>

	   <?MIVAR><input type=button 
            value="Show all matching genes" onClick="document.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerselect.apg&marker_type=GENE$mrkr_param_list')">
	   <?/MIVAR>
        <?/MIBLOCK>
      </TD></TR>
    <?/MIBLOCK>		 
   </TABLE>

   <!-- Stuff to control retrieval volume -->
    <FORM method=post 
          name=markerlister 
          action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">
      <?MIVAR>
        <input type=hidden name=MIval value=aa-markerselect.apg> 
        <input type=hidden name=userid value="$userid">

      <?/MIVAR>
    </FORM>

    <TABLE width=100% border=0 cellspacing=0>
      <TR align=left>
        <TD></TD>
        <TD align=left width=25%>
	  <b>Symbol </b>
	  <?MIVAR>
	    $(IF,$(EC,$xpat_loci_cols,y), - name)
	  <?/MIVAR>
        </TD>
	 <?MIVAR COND="$(EC,$xpat_loci_cols,y)"> 
        <TD align=left width=12%><B>Expression</B></TD>
        <TD align=left width=12%><B>Mutant Locus</b></TD>
	  <?/MIVAR>
        <TD align=left><b>Map<b></TD>

          <?MIBLOCK COND="$(XST,$input_name)">
	<TD align=left><b>Matching Text</b></TD>
          <?/MIBLOCK>

      </TR>

    <?MIVAR NAME=$ok_view_map>0<?/MIVAR>

    <!--- WALKING WINDOW --->
    <!--- Initialization --->
    <?MIVAR NAME=WINSIZE DEFAULT=20>$WINSIZE<?/MIVAR>
    <?MIVAR NAME=BEGIN DEFAULT=1>$START<?/MIVAR>

    <!--- DEFINITION OF RANGES --->
    <?MIVAR NAME=BEGIN>$(IF,$(<,$BEGIN,1),1,$BEGIN)<?/MIVAR> 
    <?MIVAR NAME=END>$(+,$BEGIN,$WINSIZE)<?/MIVAR>

    <!--- EXECUTION --->
    <!--  Set outer loop variables, row_color and ok_view_map -->
    <?MIVAR name=$row_color>$highlight<?/MIVAR>
    <?MIVAR NAME=$ok_view_map>0<?/MIVAR>
    
    <?MIVAR NAME=$rowNUM>$BEGIN<?/MIVAR>
  
    <!--- Query Database --->
    <?MISQL WINSTART=$BEGIN WINSIZE=$WINSIZE SQL="
      select distinct mrkr_name, mrkr_abbrev, mrkr_type, mrkrtype_type_display, mrkr_zdb_id,
	     mrkr_abbrev_order $name_sig_col
	from $target_table, marker_types mt
       where mrkr_type = mt.marker_type
	order by $sig_order mrkr_type, mrkr_abbrev_order
	;">
	
      <?MIVAR name=$marker_name>$1<?/MIVAR>
      <?MIVAR name=$marker_abbrev>$2<?/MIVAR>
      <?MIVAR name=$mtype>$3<?/MIVAR>
      <?MIVAR name=$mtype_display>$4<?/MIVAR>
      <?MIVAR name=$OID>$5<?/MIVAR>
      <?MIVAR name=$match_name>$(URLDECODE,$7)<?/MIVAR>
      <?MIVAR name=$match_sig>$8<?/MIVAR>
      <?MIVAR name=$match_text>$9<?/MIVAR>

      <!-- start new row and column -->
      <TR bgcolor="<?MIVAR>$row_color<?/MIVAR>">
        <TD valign=top>&nbsp;</TD>
        <?MIVAR name=$rowNUM>$(+,$rowNUM,1)<?/MIVAR>
	<TD valign=top>
	  <?MIVAR>	
            $(IF,$(XST,$return_rec),<A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-select.apg&return_rec=$return_rec&new_oid=$OID>SELECT</A>)
	    $(IF,$(OR,$(XST,$accession),$(XST,$pubId)),$mtype_display:)
	    $(IF,$(>,$(POSITION,$OID,GENE),0),<i>)<A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$OID">$marker_abbrev</A>$(IF,$(>,$(POSITION,$OID,GENE),0),</i>)
	    $(IF,$(=,$(POSITION,$OID,GENE),0),</TD>)
	    $(IF,$(AND,$(=,$(POSITION,$OID,GENE),0),$(EC,$xpat_loci_cols,y)),<TD>&nbsp;</TD><TD>&nbsp;</TD>)
	  <?/MIVAR> 
        
	  <?MIBLOCK COND="$(>,$(POSITION,$OID,GENE),0)">

	    <?MICOMMENT>08/26/03 take out previous name and orthologues for genes<?/MICOMMENT>
	    <?MIVAR>-$marker_name<?/MIVAR>
	    </TD>
	   
	    <?MIBLOCK COND="$(EC,$xpat_loci_cols,y)"> 
 	      <?MICOMMENT>gene expression<?/MICOMMENT>
	      <?MISQL SQL="
          	  select count(*)
          	    from expression_pattern, marker_relationship
          	   where '$OID' = mrel_mrkr_1_zdb_id
            	     and mrel_mrkr_2_zdb_id = xpat_probe_zdb_id 
                   ;">
                 <?MIVAR NAME=$xpat_count>$1<?/MIVAR>
      	      <?/MISQL>
              <TD>
              <?MIVAR COND="$(>,$xpat_count,0)">
                <A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect.apg&query_results=exists&gene_name=$marker_abbrev>assays</A>
              <?/MIVAR>&nbsp;	
              </TD>

	      <?MICOMMENT>gene mutant locus<?/MICOMMENT>
	      <?MISQL SQL="
          	  select zdb_id, locus_name, abbrev
          	    from locus
          	   where '$OID' = cloned_gene
                  ;">
                 <?MIVAR NAME=$locus_id>$1<?/MIVAR>
	         <?MIVAR NAME=$locus_name>$2<?/MIVAR>
	         <?MIVAR NAME=$locus_abbrev>$3<?/MIVAR>
      	      <?/MISQL>
	      <TD>	
	      <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
	        <?MIVAR>	
	        <A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-locusview.apg&OID=$locus_id><i>$locus_name</i></A>
	        <?/MIVAR>
	      <?MIELSE>
		  <font size=-1>Unknown</font>
	      <?/MIBLOCK>
	      </TD>	
            <?/MIBLOCK> <!-- $xpat_loci_cols = y -->
  	  <?/MIBLOCK><!-- addition for genes-->
	
	  <?MICOMMENT>Map info<?/MICOMMENT>
	  <TD>
	 
          <?MISQL SQL="select WebExplode(object,'&mapdetails_mode=mini&split=break&hide_empty=t&oID=$OID') from webPages where ID='aa-mappingdetail.apg';">
	    $1<?/MISQL>
	  
	  </TD>
            <?MIBLOCK COND="$(XST,$input_name)">
	  <TD>
	      <?MICOMMENT>$match_text: $(REPLACE,$match_name,$input_name,<b>$input_name</b>)-- Due to the upper case and lower case mix in the name, replace by the following<?/MICOMMENT>
	      <?MIVAR NAME=start_pos>$(POSITION,$(LOWER,$match_name),$(LOWER,$input_name))<?/MIVAR>
	      <?MIVAR NAME=str_length>$(STRLEN,$input_name)<?/MIVAR>
	      <?MIVAR>$match_text: $(SUBSTR,$match_name,1,$(-,$start_pos,1))<b>$(SUBSTR,$match_name,$start_pos,$str_length)</b>$(SUBSTR,$match_name,$(+,$start_pos,$str_length))	
              <?/MIVAR>
 	  </TD>
            <?/MIBLOCK>
 	  </TR>

	  <!--    change row_color    -->
	  <?MIBLOCK>
	    <?MIBLOCK COND="$(EC,$row_color,$highlight)">     
	      <?MIVAR name=$row_color>#FFFFFF<?/MIVAR>
	    <?MIELSE COND="$(EC,$row_color,#FFFFFF)">      
	      <?MIVAR name=$row_color>$highlight<?/MIVAR>
	    <?/MIBLOCK>
	  <?/MIBLOCK>

    <?/MISQL>	 <!-- for each search result --> 
    </TABLE>



    <?MICOMMENT>Build the bar for walk window<?/MICOMMENT>
    <?MIVAR name=selector>MIval=aa-markerselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
    <?MIVAR name=UserInput><?/MIVAR>
    <?MIBLOCK COND="$(NXST,$pubId)">
	<?MIVAR name=UserInput COND=$(XST,$input_name)>$UserInput&input_name=$(URLENCODE,$input_name)<?/MIVAR> 
        <?MIVAR name=UserInput COND=$(XST,$input_acc)>$UserInput&input_acc=$input_acc<?/MIVAR> 
	<?MIVAR name=UserInput COND=$(XST,$compare)>$UserInput&compare=$compare<?/MIVAR>
	<?MIVAR name=UserInput COND=$(XST,$marker_type)>$UserInput&marker_type=$marker_type<?/MIVAR>
        <?MIVAR name=$UserInput COND=$(XST,$knownloci)>$UserInput&knownloci=$knownloci<?/MIVAR>
        <?MIVAR name=UserInput COND=$(XST,$lg)>	$UserInput&lg=$lg<?/MIVAR>
        <?MIVAR name=$UserInput COND=$(XST,$return_rec)>$UserInput&return_rec=$return_rec<?/MIVAR> 
        <?MIVAR name=UserInput COND=$(XST,$query_results)>$UserInput&query_results=$(URLENCODE,$query_results)<?/MIVAR>  
    <?MIELSE>
	<?MIVAR name=$UserInput>$UserInput&pubId=$pubId&type=$type<?/MIVAR>
    <?/MIBLOCK> 
    
    <Center>
    <TABLE width="70%" border="0">
      <TR>
        <TD width="45%" align=right valign=top>&nbsp;
          <!--- Return to the previous set of Rows --->
	  <?MIBLOCK COND="$(>,$BEGIN,1)">
	    <?MIVAR>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$(-,$BEGIN,$WINSIZE)&BEGIN=$BEGIN&$selector$UserInput">Prev</A>&nbsp;&nbsp;&nbsp;&nbsp;<br>
	      <!-- If current not First Page, create link to first page. -->
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=1&BEGIN=1&$selector$UserInput">First Page</A>

	    <?/MIVAR>
	  <?/MIBLOCK>
        </TD>

      <!-- Calculate 3 pages before and 3 pages after current page. -->
      <?MIVAR name=$CURRENT>$(FIX,$(+,$(/,$BEGIN,$WINSIZE),1))<?/MIVAR>
      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,3)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,3))"> $(-,$CURRENT,3)</A> <?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,2)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,2))"> $(-,$CURRENT,2)</A><?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,1)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,1))"> $(-,$CURRENT,1)</A><?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>,$num_recs,$WINSIZE)">
	<TD align=center valign=top>
	  <?MIVAR> $CURRENT <?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,1)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$END"> $(+,$CURRENT,1)</A>
	</TD>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,2)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,2))"> $(+,$CURRENT,2)</A>
	</TD>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,3)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,3))"> $(+,$CURRENT,3)</A>
	</TD>
      <?/MIVAR>
      
        <TD width="45%" align=left valign=top>&nbsp;

	<!--- Get the next set of Rows --->
	<?MIBLOCK COND="$(<=,$(+,$BEGIN,$WINSIZE),$num_recs)">
	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$END&BEGIN=$BEGIN&$selector$UserInput">Next</A><br>
	  <?/MIVAR>

	  <!-- Calculate last page -->
	  <?MIVAR name=$START COND="$(=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(-,$(/,$num_recs,$WINSIZE),1),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR name=$START COND="$(!=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(FIX,$(/,$num_recs,$WINSIZE)),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$START&$selector$UserInput">Last Page</A>
	  <?/MIVAR>
	<?/MIBLOCK>
        </TD>
      </tr>
    </Table>
    </Center>

  <?/MIBLOCK> <!-- if not redirect to markerview -->

  <?MISQL COND="$(NC,$type,pub_mapped)" SQL="
	set explain off;
	drop table mrkrselect_tmp_markers;
      ">
  <?/MISQL>


  <?MISQL COND="$(EC,$type,pub_mapped)" SQL="
	set explain off;
	drop table mrkrselect_tmp_pub_mapped_markers; ">
  <?/MISQL>

 
  <?/MIBLOCK> <!-- no simultanious name and acc search -->





<?/MIBLOCK> <!-- query results -->

 

<!----------------  Query Form -------------------------------------->
<?MIBLOCK COND="$(AND,$(NXST,$accession),$(NXST,$pubId))">  

  <?MISQL SQL="select WebExplode(object,'page=markerselect') from webPages where ID='aa-searchform.apg';">$1<?/MISQL>

<?/MIBLOCK>

<?MICOMMENT><?MISQL SQL="execute function get_time();">ENd: $1<?/MISQL><?/MICOMMENT>

<?MIBLOCK COND="$(NXST,$accession)">
  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>
<?/MIBLOCK>




