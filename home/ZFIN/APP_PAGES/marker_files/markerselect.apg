<?MICOMMENT>
FILE:   markerselect.apg
PREFIX: mrkrsel_

search form for genes and markers 

INPUT VARS:  not fully documented
  input_name      Name/symbol specified in search.  This does not exist if
                  no string was entered by the user.

OUTPUT VARS: not fully documented

OUTPUT:      not fully documented

EFFECTS:     not fully documented

DEBUGGING:
  $debug_timing is in this page, but only before results are displayed

<?/MICOMMENT>

<?MIERROR>
  <?MIVAR COND=$(XST,$MI_SQL)>
    SQL: $MI_SQL<br><br>
  <?/MIVAR>

  Code:    $MI_ERRORCODE <br>
  State:   $MI_ERRORSTATE <br>
  Message: $MI_ERRORMSG <br>
<?/MIERROR>

<?MIBLOCK COND="$(NXST,$accession)">
 <HTML>
 <HEAD>
 <?MIVAR Name=page_name>ZFIN Marker Search $(IF,$(XST,$query_results),Results)<?/MIVAR>
 <?MIVAR><TITLE>$page_name</TITLE><?/MIVAR>

  <SCRIPT>

    function call_reset() {

	document.critform.input_name.value = "";
	document.critform.input_acc.value = "";
	document.critform.START.value = "";
	document.critform.lg.selectedIndex = 0;
	document.critform.compare.selectedIndex = 0;
	document.critform.marker_type.selectedIndex = 0;
	document.critform.WINSIZE.value = 20;
     }
   </SCRIPT>

 <?MISQL SQL="
  select object 
    from webPages 
    where ID = 'aa-chromoscripts.apg';">
   $1
 <?/MISQL>

 </HEAD>

 <BODY>

  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>


<?/MIBLOCK><?MICOMMENT> end XST accession which means it is called by Accession Search <?/MICOMMENT>


  <?MISQL SQL="
    select WebExplode(object,'') 
      from webPages 
      where ID = 'aa-identify.apg';">
    $1
  <?/MISQL>
  <?MICOMMENT>
    set userid to ZDB_ID of user or GUEST to be used by the map viewer
  <?/MICOMMENT>
  <?MIVAR NAME=$userid>GUEST<?/MIVAR>
  <?MIBLOCK COND="$(NC,$(SUBSTR,$ZDB_name,1,5),GUEST)">
    <?MIVAR NAME=$userid>$ZDB_ident<?/MIVAR>
  <?/MIBLOCK>

<?MIVAR name=$highlight><!--|HIGHLIGHT_COLOR|--><?/MIVAR>
<?MIVAR NAME=$MI_NULL><?/MIVAR>
<?MIVAR NAME=$MI_NOVALUE><?/MIVAR>
<?MIVAR NAME=$OID COND="$(NXST,$OID)"><?/MIVAR>
<?MIVAR COND="$(AND,$(XST,$accession),$(XST,$input_acc))">
  <?MICOMMENT>
    *** when called by accession search and the input is an dblink accession, 
    need to unset $constraint to avoid trouble when webexplode both 
    markerselect and msegselect
  <?/MICOMMENT>
  $(UNSETVAR,$constraint)
  $(UNSETVAR,$marker_type)
<?/MIVAR> 


<?MICOMMENT>
  this part is executed after a search is submitted for
  gene/marker search or accession search, or when
  requested from publication page for related data list.
<?/MICOMMENT>

<?MIBLOCK COND="$(OR,$(XST,$query_results),$(XST,$pubId))">

  <?MICOMMENT>forbidden simultanious name and acc search <?/MICOMMENT>
  <?MIBLOCK COND="$(AND,$(XST,$input_acc),$(XST,$input_name))">
   <script>
     window.alert("Please modify your search for either name search or accession search.");
   </script>

  <?MIELSE>

   <?MISQL SQL="
      select dbinfo('sessionid') 
        from single;">
      <?MIVAR NAME=$mrkrsel_session_id>$1<?/MIVAR>
      <?MIVAR NAME=$markerselect_temp_match>$(CONCAT,markerselect_temp_match_,$mrkrsel_session_id)<?/MIVAR>
      <?MIVAR NAME=$markerselect_temp_on_lg>$(CONCAT,markerselect_temp_on_lg_,$mrkrsel_session_id)<?/MIVAR>
      <?MIVAR NAME=$markerselect_temp_marker>$(CONCAT,markerselect_temp_marker_,$mrkrsel_session_id)<?/MIVAR>
   <?/MISQL>

   <?MIVAR COND="$(NXST,$lg)" NAME=$lg>0<?/MIVAR>

   <?MICOMMENT>
        when called from publication page, $type is passes in 
	indictating for gene list or mapped data list. 
   <?/MICOMMENT>
   <?MIVAR COND="$(NXST,$type)" NAME=$type>marker<?/MIVAR>	

   <?MICOMMENT>
    Format of result page:
    when gene is not involved, columns of symbol-name, and map. 
    when gene is involved, two more columns expression, and mutant locus
   <?/MICOMMENT>
   <?MIVAR NAME=$xpat_loci_cols>y<?/MIVAR>

   <?MICOMMENT>
    when called from accessionselect, constraint is passes in,
    check the OID to decided the format of result list
   <?/MICOMMENT>
   <?MIBLOCK COND="$(XST,$constraint)">
    <?MIVAR COND="$(=,$(POSITION,$OID,GENE),0)" NAME=$xpat_loci_cols>n
    <?/MIVAR>
   <?/MIBLOCK>

   <?MIVAR NAME=$mrkrsel_optional_match_table><?/MIVAR>
   <?MIVAR NAME=$mrkrsel_optional_match_cols><?/MIVAR>
   <?MIVAR NAME=$mrkrsel_optional_marker_cols><?/MIVAR>

   <?MICOMMENT>
        Build up the constraint clause for gene/marker search,
	constraint for calls from pubview is build next. 
   <?/MICOMMENT>

   <?MIBLOCK COND="$(AND,$(NXST,$constraint),$(NXST,$pubId))">

    <?MIVAR NAME=$constraint><?/MIVAR>

    <?MICOMMENT>
      This next part builds up a query piece by piece, based on which 
      criteria were passed in
    <?/MICOMMENT>
    <?MIVAR COND="$(NXST,$compare)" NAME=$compare>contains<?/MIVAR>
    <?MIBLOCK COND="$(XST,$marker_type)">
	<?MIVAR NAME=$constraint> mrkr_type = '$marker_type'<?/MIVAR>
	<?MISQL SQL="
		select mrkrtype_type_display
		  from marker_types
		 where marker_type = '$marker_type'
		;">
	   <?MIVAR NAME=$marker_type_display>$1<?/MIVAR>
	<?/MISQL>
	
	<?MISQL SQL="
		select 't'
		  from marker_type_group_member
		where mtgrpmem_mrkr_type_group = 'GENEDOM'
		  and mtgrpmem_mrkr_type = '$marker_type'
		;">
	<?/MISQL>
	<?MIVAR COND="$(!=,$MI_ROWCOUNT,0)" NAME=type_of_genedom>t<?/MIVAR>

	<?MISQL SQL="
		select 't'
		  from marker_type_group_member
		where mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT'
		  and mtgrpmem_mrkr_type = '$marker_type'
		;">
	<?/MISQL>
	<?MIVAR COND="$(!=,$MI_ROWCOUNT,0)" NAME=type_of_knockdown_reagent>t<?/MIVAR>
    <?MIELSE>
	<?MIVAR NAME=$constraint> mrkr_type not in (select mtgrpmem_mrkr_type from marker_type_group_member where mtgrpmem_mrkr_type_group ='SEARCH_SEG')<?/MIVAR>
    <?/MIBLOCK>

    <?MICOMMENT>---------------------------------------------------------------
      Create markerselect_temp_match temp table if it does not already exist.
    <?/MICOMMENT>
    <?MISQL SQL="
      execute function table_exists('$markerselect_temp_match')">
      <?MISQL COND=$(EC,$1,f) SQL="
	create temp table $markerselect_temp_match (
	  mstmatch_zdb_id varchar(50),
	  mstmatch_name varchar(255),
	  mstmatch_significance integer,
	  mstmatch_precedence varchar(80)
	) with NO LOG;">
      <?/MISQL>
    <?/MISQL>

    <?MIBLOCK COND="$(XST,$input_name)">
      <?MISQL COND=$(XST,$debug_timing) SQL="
        execute function get_time()">
        <br>$1 Starting name query
      <?/MISQL>
      <?MIBLOCK COND="$(EC,$compare,starts)">
	<?MIVAR NAME=$mrkrsel_nameTable><?/MIVAR>
	<?MIVAR NAME=$mrkrsel_nameTest>
	  and allmapnm_name_lower like '$(LOWER,$input_name)%'
	<?/MIVAR>
      <?MIELSE>
	<?MIVAR NAME=$mrkrsel_nameTable>, all_name_ends<?/MIVAR>
	<?MIVAR NAME=$mrkrsel_nameTest>
	  and allmapnm_serial_id = allnmend_allmapnm_serial_id
	  and allnmend_name_end_lower like '$(LOWER,$input_name)%' 
	<?/MIVAR>
      <?/MIBLOCK>
      <?MIVAR NAME=$input_name DELIMIT="'" REPLACE="''">$input_name<?/MIVAR>
      <?MIVAR NAME=geneMchIdLast><?/MIVAR>	
      <?MISQL SQL="
	 select allmapnm_zdb_id, allmapnm_name, 
		allmapnm_significance, allmapnm_precedence 
           from all_map_names $mrkrsel_nameTable
	  where allmapnm_precedence <> 'Accession number'
            $mrkrsel_nameTest
          order by allmapnm_zdb_id, allmapnm_significance, allmapnm_name;">
	 <?MIVAR NAME=geneMchId>$1<?/MIVAR>
         <?MISQL COND="$(NC,$geneMchId,$geneMchIdLast)" SQL="
           insert into $markerselect_temp_match
	       ( mstmatch_zdb_id, mstmatch_name, 
		 mstmatch_significance, mstmatch_precedence )
	     values('$1', '$(URLENCODE,$2)', '$3', '$4'); ">
	   <?MICOMMENT> the URLENCODE encodes "'" which is problematic<?/MICOMMENT>
 	   $(SETVAR,$geneMchIdLast,$geneMchId)          	
         <?/MISQL>
      <?/MISQL>
     	
      <?MIVAR NAME=$mrkrsel_optional_match_table>,$markerselect_temp_match<?/MIVAR>
      <?MIVAR>
	$(SETVAR,$mrkrsel_optional_match_cols,", mstmatch_name, mstmatch_significance, mstmatch_precedence")
	$(SETVAR,$mrkrsel_optional_marker_cols,", mstmrkr_match_name, mstmrkr_significance, mstmrkr_precedence")
	$(VECAPPEND, $constraint," mrkr_zdb_id = mstmatch_zdb_id ")
      <?/MIVAR>
      <?MICOMMENT>restore the input string for display<?/MICOMMENT>
      <?MIVAR COND="$(XST,$input_name)" NAME=input_name DELIMIT="''" REPLACE="'">$input_name<?/MIVAR>
    <?/MIBLOCK>  <?MICOMMENT>-------------------------------------<?/MICOMMENT>



    <?MICOMMENT>---------------------------------------------------
      ** 08/27 separate accession search from name search
    <?/MICOMMENT>
    <?MIBLOCK COND="$(XST,$input_acc)">
       <?MISQL COND=$(XST,$debug_timing) SQL="
         execute function get_time()">
         <br>$1 Starting accession queries
       <?/MISQL>
       <?MISQL SQL="
	insert into $markerselect_temp_match
	    ( mstmatch_zdb_id, mstmatch_name, 
	      mstmatch_significance, mstmatch_precedence )
	select allmapnm_zdb_id, allmapnm_name, 
	       allmapnm_significance, allmapnm_precedence
          from all_map_names
	 where allmapnm_name_lower like '$(LOWER,$input_acc)%'
           and allmapnm_precedence = 'Accession number';">
       <?/MISQL>
       <?MISQL SQL="
	insert into $markerselect_temp_match
	    ( mstmatch_zdb_id, mstmatch_name, 
	      mstmatch_significance, mstmatch_precedence )
	select mrel_mrkr_1_zdb_id, allmapnm_name, 
	       allmapnm_significance, allmapnm_precedence
          from all_map_names, marker_relationship
	 where allmapnm_name_lower like '$(LOWER,$input_acc)%'
           and allmapnm_precedence = 'Accession number'
	   and mrel_mrkr_2_zdb_id = allmapnm_zdb_id
	   and mrel_type in ('gene contains small segment',
			  'gene encodes small segment',
			  'clone contains small segment');">
       <?/MISQL>
       <?MISQL SQL="
	insert into $markerselect_temp_match
	    ( mstmatch_zdb_id, mstmatch_name, 
	      mstmatch_significance, mstmatch_precedence )
	select mrel_mrkr_2_zdb_id, allmapnm_name, 
	       allmapnm_significance, allmapnm_precedence
          from all_map_names, marker_relationship
	 where allmapnm_name_lower like '$(LOWER,$input_acc)%'
           and allmapnm_precedence = 'Accession number'
	   and mrel_mrkr_1_zdb_id = allmapnm_zdb_id
	   and mrel_type = 'clone contains gene';">
      <?/MISQL>

      <?MIVAR NAME=$mrkrsel_optional_match_table>,$markerselect_temp_match<?/MIVAR>
      <?MIVAR>
	$(VECAPPEND, $constraint," mrkr_zdb_id = mstmatch_zdb_id ")
      <?/MIVAR>
    <?/MIBLOCK> <?MICOMMENT>---------------------------------------<?/MICOMMENT>


    <?MICOMMENT>--------------- if LG is selected -----------------<?/MICOMMENT>
    <?MIBLOCK COND="$(NC,$lg,0)">
      <?MICOMMENT>
        we do mapping info pullover between clones and genes/small segs. 
	Create markerselect_temp_on_lg temp table if it does not already exist.
      <?/MICOMMENT>
      <?MISQL COND=$(XST,$debug_timing) SQL="
        execute function get_time()">
        <br>$1 Starting LG queries
      <?/MISQL>
      <?MISQL SQL="
        execute function table_exists('$markerselect_temp_on_lg')">
        <?MISQL COND=$(EC,$1,f) SQL="
	  create temp table $markerselect_temp_on_lg (
	    mstlg_mrkr_zdb_id varchar(50)
	  ) with NO LOG;">
        <?/MISQL>
      <?/MISQL>

      <?MISQL SQL="
	insert into $markerselect_temp_on_lg
	    ( mstlg_mrkr_zdb_id )
	select marker_id 
          from mapped_marker
	 where or_lg = '$lg';">
      <?/MISQL>
      <?MISQL SQL="
	insert into $markerselect_temp_on_lg
	    ( mstlg_mrkr_zdb_id )
	select mrel_mrkr_2_zdb_id
	  from mapped_marker, marker_relationship
	 where mrel_mrkr_1_zdb_id = marker_id
	   and or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment');">
      <?/MISQL>
      <?MISQL SQL="
	insert into $markerselect_temp_on_lg
	    ( mstlg_mrkr_zdb_id )
	select mrel_mrkr_1_zdb_id
	  from mapped_marker, marker_relationship
	 where mrel_mrkr_2_zdb_id = marker_id
	   and or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment',
			     'gene encodes small segment');">
      <?/MISQL>
      <?MISQL SQL="
	insert into $markerselect_temp_on_lg
	    ( mstlg_mrkr_zdb_id )
        select lnkgmem_member_zdb_id
	  from linkage, linkage_member
	 where lnkg_or_lg = '$lg'
  	   and lnkgmem_linkage_zdb_id = lnkg_zdb_id ;">
      <?/MISQL>
      <?MISQL SQL="
	insert into $markerselect_temp_on_lg
	    ( mstlg_mrkr_zdb_id )
	select mrel_mrkr_2_zdb_id
	  from marker_relationship, linkage, linkage_member
	 where mrel_mrkr_1_zdb_id = lnkgmem_member_zdb_id
  	   and lnkgmem_linkage_zdb_id = lnkg_zdb_id 
	   and lnkg_or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment');">
      <?/MISQL>
      <?MISQL SQL="
	insert into $markerselect_temp_on_lg
	    ( mstlg_mrkr_zdb_id )
	select mrel_mrkr_1_zdb_id
	  from marker_relationship, linkage, linkage_member
	 where mrel_mrkr_2_zdb_id = lnkgmem_member_zdb_id
  	   and lnkgmem_linkage_zdb_id = lnkg_zdb_id 
	   and lnkg_or_lg = '$lg'
	   and mrel_type in ('clone contains gene',
			     'clone contains small segment',
			     'gene encodes small segment');">
       <?/MISQL> 

       <?MIVAR NAME=$lgConstraint> mrkr_zdb_id in (select mstlg_mrkr_zdb_id from $markerselect_temp_on_lg)<?/MIVAR>
       <?MIVAR>
          $(VECAPPEND, $constraint, $lgConstraint )
       <?/MIVAR>	
    <?/MIBLOCK>
    <?MICOMMENT>------------------ end LG ---------------<?/MICOMMENT>


    <?MIVAR COND="$(XST,$knownloci)"> 
	$(VECAPPEND, $constraint, "mrkr_zdb_id in (select cloned_gene from locus)")
    <?/MIVAR>
    <?MIVAR COND="$(AND,$(XST,$marker_type),$(NXST,$type_of_genedom))">
        $(SETVAR,$xpat_loci_cols,n)
    <?/MIVAR>

    <?MIVAR NAME=constraint SEPARATE=" AND ">$constraint<?/MIVAR>

  <?/MIBLOCK> <?MICOMMENT> end build constraint for gene/marker search <?/MICOMMENT>

  <?MISQL COND=$(XST,$debug_timing) SQL="
    execute function get_time()">
    <br>$1 Done building constraint
  <?/MISQL>


  <?MICOMMENT>
    main execution of data collection
    the first block select markers match the constraint and furthur 
    filter out the mapped ones if needed, the second part deals with 
    the mapped data links from publication page which only collect 
    linkage group mapping, and not only for marker but also mutant

    First create markerselect_temp_marker temp table if it does not already exist
  <?/MICOMMENT>

  <?MISQL SQL="
    execute function table_exists('$markerselect_temp_marker')">
    <?MISQL COND=$(EC,$1,f) SQL="
      create temp table $markerselect_temp_marker (
	mstmrkr_zdb_id varchar(50),
	mstmrkr_name varchar(255),
	mstmrkr_abbrev varchar(40),
	mstmrkr_abbrev_order varchar(80),
	mstmrkr_type varchar(10),
	mstmrkr_match_name varchar(255),
	mstmrkr_significance integer,
	mstmrkr_precedence varchar(80)
      ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>
  <?MICOMMENT> right now, Morpholino is not included in SEARCH_MK group
	       yet. As seen, it is easy to forgot to add new types into
               type group. It is also a question whether knockdown reagent
               need to be listed out of marker group...As fish redo comes
               along, it is a question to resolve. Also this page needs
	       some help to be more tidy.
  <?/MICOMMENT>
  <?MIBLOCK COND="$(EC,$type,pub_mrkr)">

     <?MISQL SQL="
       insert into $markerselect_temp_marker
	   ( mstmrkr_zdb_id, mstmrkr_name, mstmrkr_abbrev, 
	     mstmrkr_abbrev_order,  mstmrkr_type )
	select mrkr_zdb_id, mrkr_name, mrkr_abbrev, 
	       mrkr_abbrev_order, mrkr_type
	from  record_attribution, marker 
	where recattrib_source_zdb_id = '$pubId'
	  and recattrib_data_zdb_id = mrkr_zdb_id 
	  and mrkr_type in 
		  (select mtgrpmem_mrkr_type from marker_type_group_member
                    where mtgrpmem_mrkr_type_group = 'SEARCH_MK')
	  and  mrkr_type <> 'MRPHLNO';
	">
     <?/MISQL>	
  <?MIELSE COND="$(EC,$type,pub_mo)" >     
     <?MISQL SQL="
       insert into $markerselect_temp_marker
	   ( mstmrkr_zdb_id, mstmrkr_name, mstmrkr_abbrev, 
	     mstmrkr_abbrev_order,  mstmrkr_type )
	select mrkr_zdb_id, mrkr_name, mrkr_abbrev, 
	       mrkr_abbrev_order, mrkr_type
	from  record_attribution, marker 
	where recattrib_source_zdb_id = '$pubId'
	  and recattrib_data_zdb_id = mrkr_zdb_id 
	  and mrkr_type = 'MRPHLNO';
	">
     <?/MISQL>	
     <?MIVAR NAME=$type_of_knockdown_reagent>t<?/MIVAR>
     <?MIVAR NAME=$xpat_loci_cols>n<?/MIVAR>
	
  <?MIELSE COND="$(EC,$type,pub_mapped)" >     
     <?MISQL SQL="
       insert into $markerselect_temp_marker
	   ( mstmrkr_zdb_id, mstmrkr_name, mstmrkr_abbrev, 
	     mstmrkr_abbrev_order,  mstmrkr_type )
	select mrkr_zdb_id, mrkr_name, mrkr_abbrev, mrkr_abbrev_order, mrkr_type
  	from record_attribution, linkage_member,linkage, marker
  	where recattrib_source_zdb_id = '$pubId'
    	and recattrib_data_zdb_id = lnkgmem_linkage_zdb_id
    	and lnkgmem_linkage_zdb_id = lnkg_zdb_id	
    	and lnkgmem_member_zdb_id = mrkr_zdb_id
	and lnkg_or_lg <> '0';">
     <?/MISQL>
     <?MISQL SQL="
       insert into $markerselect_temp_marker
	   ( mstmrkr_zdb_id, mstmrkr_name, mstmrkr_abbrev, 
	     mstmrkr_abbrev_order,  mstmrkr_type )
  	select l.zdb_id, locus_name, l.abbrev, l.locus_abbrev_order, 'MUTANT'
  	from record_attribution, linkage_member, linkage, fish f, locus l
  	where recattrib_source_zdb_id = '$pubId'
    	and recattrib_data_zdb_id = lnkgmem_linkage_zdb_id
    	and lnkgmem_linkage_zdb_id = lnkg_zdb_id
    	and lnkgmem_member_zdb_id = f.zdb_id 
    	and f.locus = l.zdb_id 
	and lnkg_or_lg <> '0';">
     <?/MISQL>
     <?MIVAR NAME=$xpat_loci_cols>n<?/MIVAR>

  <?MIELSE>

    <?MISQL SQL="
       insert into $markerselect_temp_marker
	   ( mstmrkr_zdb_id, mstmrkr_name, mstmrkr_abbrev, 
	     mstmrkr_abbrev_order,  mstmrkr_type $mrkrsel_optional_marker_cols )
	  select distinct mrkr_zdb_id, mrkr_name, mrkr_abbrev, 
			  mrkr_abbrev_order, mrkr_type $mrkrsel_optional_match_cols
	   from marker $mrkrsel_optional_match_table
	  where $constraint
	;">

    <?/MISQL>

    <?MICOMMENT>
      Delete can be expensive, only do it if you actually inserted records
    <?/MICOMMENT>
    <?MISQL COND="$(OR,$(XST,$input_name),$(XST,$input_acc))" SQL="
 	delete from $markerselect_temp_match;">
    <?/MISQL>

    <?MISQL COND="$(NC,$lg,0)" SQL="
	delete from $markerselect_temp_on_lg;">
    <?/MISQL>

  <?/MIBLOCK>


  <?MICOMMENT> ===========================================================
               ===   Display Search Results
               ===========================================================
  <?/MICOMMENT>

  <?MISQL SQL="
	select distinct mstmrkr_zdb_id
	  from $markerselect_temp_marker;">
       <?MIVAR NAME=$the_marker>$1<?/MIVAR>
  <?/MISQL>
  <?MIVAR NAME=$num_recs>$MI_ROWCOUNT<?/MIVAR>
  <?MIBLOCK COND="$(AND,$(NXST,$return_rec),$(NXST,$accession),$(=,$num_recs,1))">
     <?MIVAR>	
	<SCRIPT>location.replace("/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$the_marker")</SCRIPT>
     <?/MIVAR>
  <?MIELSE>

   <?MICOMMENT>return page title display<?/MICOMMENT>
   <table width=100%>
     <TR>
      <TD width=90%> 
          <font size="+1"><center>
	  <?MIBLOCK COND="$(XST,$pubId)">
            <?MIBLOCK COND="$(EC,$type,pub_mrkr)">
                Genes / Markers
            <?MIELSE COND="$(EC,$type,pub_mo)">
                Morpholino 
            <?MIELSE>
 	        Mapping Data
            <?/MIBLOCK>
            <?MIVAR> List (<b>$num_recs</b> records.)<?/MIVAR>
	  <?MIELSE COND="$(XST,$accession)">
	    <?MIVAR>Marker List (<b>$num_recs</b> records.)<?/MIVAR>
	  <?MIELSE>
	    <?MIVAR>$marker_type_display Search Results (<b>$num_recs</b> records.)<?/MIVAR>
	  <?/MIBLOCK></center>
          </font>
      </TD>
     <?MIBLOCK COND="$(NXST,$accession)">
       <TD width=10%>
     	 <?MICOMMENT>
            Insert a form with one button. 
	    label button Your Input Welcome
	 <?/MICOMMENT>
         <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
        </TD>
     <?/MIBLOCK>
    </TR>
    </TABLE>

   <?MICOMMENT> Stuff to control retrieval volume <?/MICOMMENT>
    <FORM method=post 
          name=markerlister 
          action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">
      <?MIVAR>
        <input type=hidden name=MIval value=aa-markerselect.apg> 
        <input type=hidden name=userid value="$userid">

      <?/MIVAR>
    </FORM>


    <?MIVAR NAME=$ok_view_map>0<?/MIVAR>

    <?MICOMMENT> WALKING WINDOW 
      Initialization 
    <?/MICOMMENT>
    <?MIVAR NAME=WINSIZE DEFAULT=20>$WINSIZE<?/MIVAR>
    <?MIVAR NAME=BEGIN DEFAULT=1>$START<?/MIVAR>

    <?MICOMMENT> DEFINITION OF RANGES <?/MICOMMENT>
    <?MIVAR NAME=BEGIN>$(IF,$(<,$BEGIN,1),1,$BEGIN)<?/MIVAR> 
    <?MIVAR NAME=END>$(+,$BEGIN,$WINSIZE)<?/MIVAR>

    <?MICOMMENT> EXECUTION
      Set outer loop variables, row_color and ok_view_map 
    <?/MICOMMENT>
    <?MIVAR name=$row_color>$highlight<?/MIVAR>
    <?MIVAR NAME=$ok_view_map>0<?/MIVAR>

    <?MIVAR NAME=$rowNUM>$BEGIN<?/MIVAR>

    <?MIVAR NAME=$curviewer><?/MIVAR>

    <?MICOMMENT>============ Query Database ==================== <?/MICOMMENT>
 
    <?MIVAR NAME=$mrkrsel_master_sql> 
	      select distinct mstmrkr_name, mstmrkr_abbrev, mstmrkr_type, 
		      mrkrtype_type_display, mstmrkr_zdb_id, 
		      mstmrkr_abbrev_order, mstmrkr_match_name, 
		      mstmrkr_significance, mstmrkr_precedence
		from $markerselect_temp_marker, marker_types mt
               where mstmrkr_type = mt.marker_type
            order by mstmrkr_significance, mstmrkr_type, mstmrkr_abbrev_order;
    <?/MIVAR>

    <?MICOMMENT> For morpholino, the order is only meaningful when it is by gene
                 symbol. Alternatively, we could store the expected gene symbol 
                 string as the morpholino name/abbrev order string. 
    <?/MICOMMENT> 
    <?MIBLOCK COND="$(AND,$(XST,$marker_type),$(EC,$marker_type,MRPHLNO))">
	<?MIVAR NAME=$mrkrsel_master_sql> 
	       select distinct mstmrkr_name, mstmrkr_abbrev, mstmrkr_type, 
		      mrkrtype_type_display, mstmrkr_zdb_id, 
		      mg.mrkr_abbrev_order, mstmrkr_match_name, 
		      mstmrkr_significance, mstmrkr_precedence
		from $markerselect_temp_marker, marker_types mt, 
		     marker_relationship, marker mg
               where mstmrkr_type = mt.marker_type
                 and mstmrkr_zdb_id = mrel_mrkr_1_zdb_id
                 and mrel_mrkr_2_zdb_id = mg.mrkr_zdb_id
                 and mrel_type = 'knockdown reagent targets gene'
            order by mstmrkr_significance, mstmrkr_type, mg.mrkr_abbrev_order;	
       <?/MIVAR>
    <?/MIBLOCK>

    <?MISQL WINSTART=$BEGIN WINSIZE=$WINSIZE SQL="$mrkrsel_master_sql">
	
      <?MIVAR name=$marker_name>$1<?/MIVAR>
      <?MIVAR name=$marker_abbrev>$2<?/MIVAR>
      <?MIVAR name=$mtype>$3<?/MIVAR>
      <?MIVAR name=$mtype_display>$4<?/MIVAR>
      <?MIVAR name=$OID>$5<?/MIVAR>
      <?MIVAR name=$match_name>$(URLDECODE,$7)<?/MIVAR>
      <?MIVAR name=$match_text>$9<?/MIVAR>


      <?MIBLOCK COND="$(EC,$MI_CURRENTROW,1)"> 
        <?MICOMMENT> == display the "Show genes with known loci" button ==
        <?/MICOMMENT>
        <?MIBLOCK COND="$(AND,$(XST,$marker_type),$(XST,$type_of_genedom))">
	  <?MIVAR NAME=$mrkr_param_list>&query_results=t$(IF,$(XST,$input_name),&input_name=$input_name)$(IF,$(XST,$input_acc),&input_acc=$input_acc)$(IF,$(XST,$compare),&compare=$compare)$(IF,$(NC,$lg,0),&lg=$lg)<?/MIVAR>

          <?MIBLOCK COND="$(NXST,$knownloci)"> 
	    <?MIVAR><input type=button 
            value="Show genes with known mutant loci" onClick="document.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerselect.apg&marker_type=GENE&knownloci=t$mrkr_param_list')">
	     <?/MIVAR>
	  <?MIELSE>

	    <?MIVAR><input type=button 
            value="Show all matching genes" onClick="document.location.replace('/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerselect.apg&marker_type=GENE$mrkr_param_list')">
	    <?/MIVAR>
          <?/MIBLOCK>   
        <?/MIBLOCK>
        
        <?MICOMMENT> ========== display title line ===============
        <?/MICOMMENT>          
        <TABLE width=100% border=0 cellspacing=0>
          <TR align=left>      
           <?MIVAR COND="$(XST,$type_of_knockdown_reagent)">  
             <TD align=left width=25%> 
                <b>Gene</b>
             </TD>
           <?/MIVAR> 
           
           <TD align=left width=25%>
             <?MIVAR>
	       <b>$(IF,$(XST,$type_of_knockdown_reagent),Reagent,Symbol)</b>
             <?/MIVAR>
	     <?MIVAR>
	   	 $(IF,$(EC,$xpat_loci_cols,y),<b>- name</b>)
	     <?/MIVAR>
           </TD>
	   <?MIVAR COND="$(EC,$xpat_loci_cols,y)"> 
             <TD align=left width=12%><B>Expression</B></TD>
             <TD align=left width=12%><B>Mutant Locus</b></TD>
	   <?/MIVAR>
           <?MIVAR COND="$(NXST,$type_of_knockdown_reagent)"> 
       	     <TD align=left><b>Map<b></TD>
           <?/MIVAR>
           <?MIBLOCK COND="$(XST,$input_name)">
	     <TD align=left><b>Matching Text</b></TD>
           <?/MIBLOCK>
         </TR>
      <?/MIBLOCK><?MICOMMENT>===== end of title display ===<?/MICOMMENT>


       $(IF,$(EC,$mtype,MUTANT),$(SETVAR,$curviewer,"/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-locusview.apg&OID="), $(SETVAR,$curviewer,"/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID="))

      <?MICOMMENT> start new row and column <?/MICOMMENT>
      <TR bgcolor="<?MIVAR>$row_color<?/MIVAR>">

              
        <?MICOMMENT> == In case of MO search, list the gene symbol first,
		     == and group the MO list by it.
        <?/MICOMMENT>
        <?MIBLOCK COND="$(!=,$(POSITION,$OID,MRPHLNO),0)">
         <?MISQL SQL=" 
                      select mrkr_abbrev, mrkr_zdb_id
                        from marker join marker_relationship
                             on mrkr_zdb_id = mrel_mrkr_2_zdb_id
                       where mrel_mrkr_1_zdb_id = '$OID'
                         and mrel_type = 'knockdown reagent targets gene';">

             <?MIBLOCK COND="$(OR,$(NXST,$target_gene_zdb_id),$(AND,$(XST,$target_gene_zdb_id),$(NC,$2,$target_gene_zdb_id)))">
               <?MIVAR NAME=$display_target_gene><A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-markerview.apg&OID=$2> $1 </A><?/MIVAR>
             <?MIELSE>
               <?MIVAR NAME=$display_target_gene> &nbsp; <?/MIVAR>
             <?/MIBLOCK>

             <?MIVAR NAME=$target_gene_zdb_id>$2<?/MIVAR>

          <?/MISQL>
          <TD>
           <?MIVAR>$display_target_gene<?/MIVAR>
          </TD>
        <?/MIBLOCK> 


        <?MIVAR name=$rowNUM>$(+,$rowNUM,1)<?/MIVAR>
	<TD valign=top>
	  <?MIVAR>	
            $(IF,$(XST,$return_rec),<A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-do-select.apg&return_rec=$return_rec&new_oid=$OID>SELECT</A>)
	    $(IF,$(OR,$(XST,$accession),$(XST,$pubId)),$mtype_display:)
            $(IF,$(!=,$(POSITION,$mtype,GENE),0),<i>)<A HREF="$curviewer$OID">$marker_abbrev</A>$(IF,$(!=,$(POSITION,$mtype,GENE),0),</i>)
	    $(IF,$(=,$(POSITION,$OID,GENE),0),</TD>)
	    $(IF,$(AND,$(=,$(POSITION,$OID,GENE),0),$(EC,$xpat_loci_cols,y)),<TD>&nbsp;</TD><TD>&nbsp;</TD>)
	  <?/MIVAR>

	  <?MIBLOCK COND="$(>,$(POSITION,$OID,GENE),0)">

	    <?MICOMMENT>
              08/26/03 take out previous name and orthologues for genes
            <?/MICOMMENT>
	    <?MIVAR>-$marker_name<?/MIVAR>
	    </TD>

	    <?MIBLOCK COND="$(EC,$xpat_loci_cols,y)"> 
 	      <?MICOMMENT>gene expression<?/MICOMMENT>
	      <?MISQL SQL="
          	  select count(*)
          	    from expression_experiment
          	   where '$OID' = xpatex_gene_zdb_id
                   ;">
                 <?MIVAR NAME=$xpat_count>$1<?/MIVAR>
      	      <?/MISQL>
              <TD>
              <?MIVAR COND="$(>,$xpat_count,0)">
                <A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-xpatselect.apg&query_results=exists&gene_name=$marker_abbrev>assays</A>
              <?/MIVAR>&nbsp;	
              </TD>

	      <?MICOMMENT>gene mutant locus<?/MICOMMENT>
	      <?MISQL SQL="
          	  select zdb_id, locus_name, abbrev
          	    from locus
          	   where '$OID' = cloned_gene
                  ;">
                 <?MIVAR NAME=$locus_id>$1<?/MIVAR>
	         <?MIVAR NAME=$locus_name>$2<?/MIVAR>
	         <?MIVAR NAME=$locus_abbrev>$3<?/MIVAR>
      	      <?/MISQL>
	      <TD>	
	      <?MIBLOCK COND="$(>,$MI_ROWCOUNT,0)">
	        <?MIVAR>	
	        <A HREF=/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-locusview.apg&OID=$locus_id><i>$locus_name</i></A>
	        <?/MIVAR>
	      <?MIELSE>
		  <font size=-1>Unknown</font>
	      <?/MIBLOCK>
	      </TD>	
            <?/MIBLOCK> <?MICOMMENT> $xpat_loci_cols = y <?/MICOMMENT>
  	  <?/MIBLOCK><?MICOMMENT> addition for genes<?/MICOMMENT>
	
	  <?MICOMMENT>Map info<?/MICOMMENT>
	    <?MIBLOCK COND="$(NXST,$type_of_knockdown_reagent)">	
	  <TD>
          <?MISQL SQL="select WebExplode(object,'&mapdetails_mode=mini&split=break&hide_empty=t&oID=$OID') from webPages where ID='aa-mappingdetail.apg';">
	    $1<?/MISQL>
	  </TD>
            <?/MIBLOCK>
  
            <?MIBLOCK COND="$(XST,$input_name)">
	  <TD>
	      <?MIVAR NAME=start_pos>$(POSITION,$(LOWER,$match_name),$(LOWER,$input_name))<?/MIVAR>
	      <?MIVAR NAME=str_length>$(STRLEN,$input_name)<?/MIVAR>
	      <?MIVAR>$match_text: $(SUBSTR,$match_name,1,$(-,$start_pos,1))<b>$(SUBSTR,$match_name,$start_pos,$str_length)</b>$(SUBSTR,$match_name,$(+,$start_pos,$str_length))	
              <?/MIVAR>
 	  </TD>
            <?/MIBLOCK>
 	  </TR>

	  <?MICOMMENT>    change row_color    <?/MICOMMENT>
	  <?MIBLOCK>
	    <?MIBLOCK COND="$(EC,$row_color,$highlight)">     
	      <?MIVAR name=$row_color>#FFFFFF<?/MIVAR>
	    <?MIELSE COND="$(EC,$row_color,#FFFFFF)">      
	      <?MIVAR name=$row_color>$highlight<?/MIVAR>
	    <?/MIBLOCK>
	  <?/MIBLOCK>

    <?/MISQL> 	 <?MICOMMENT> for each search result <?/MICOMMENT>
    </TABLE>



    <?MICOMMENT>Build the bar for walk window<?/MICOMMENT>
    <?MIBLOCK COND="$(XST,$accession)">
      <?MIVAR name=selector>MIval=aa-accessionselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
      <?MIVAR name=$UserInput>&query_results=$query_results&aname=$input_acc<?/MIVAR>
    <?MIELSE COND="$(XST,$pubId)">
      <?MIVAR name=selector>MIval=aa-markerselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
      <?MIVAR name=$UserInput>&pubId=$pubId&type=$type<?/MIVAR>
    <?MIELSE>
      <?MIVAR name=selector>MIval=aa-markerselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
      <?MIVAR name=UserInput><?/MIVAR>
      <?MIVAR name=UserInput COND=$(XST,$input_name)>$UserInput&input_name=$(URLENCODE,$input_name)<?/MIVAR> 
        <?MIVAR name=UserInput COND=$(XST,$input_acc)>$UserInput&input_acc=$input_acc<?/MIVAR> 
	<?MIVAR name=UserInput COND=$(XST,$compare)>$UserInput&compare=$compare<?/MIVAR>
	<?MIVAR name=UserInput COND=$(XST,$marker_type)>$UserInput&marker_type=$marker_type<?/MIVAR>
        <?MIVAR name=$UserInput COND=$(XST,$knownloci)>$UserInput&knownloci=$knownloci<?/MIVAR>
        <?MIVAR name=UserInput COND=$(XST,$lg)>	$UserInput&lg=$lg<?/MIVAR>
        <?MIVAR name=$UserInput COND=$(XST,$return_rec)>$UserInput&return_rec=$return_rec<?/MIVAR> 
        <?MIVAR name=UserInput COND=$(XST,$query_results)>$UserInput&query_results=$query_results<?/MIVAR> 

    <?/MIBLOCK> 

    <Center>
    <TABLE width="70%" border="0">
      <TR>
        <TD width="45%" align=right valign=top>&nbsp;
          <?MICOMMENT> Return to the previous set of Rows <?/MICOMMENT>
	  <?MIBLOCK COND="$(>,$BEGIN,1)">
	    <?MIVAR>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$(-,$BEGIN,$WINSIZE)&BEGIN=$BEGIN&$selector$UserInput">Prev</A>&nbsp;&nbsp;&nbsp;&nbsp;<br>
	      <?MICOMMENT>
                If current not First Page, create link to first page. 
              <?/MICOMMENT>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=1&BEGIN=1&$selector$UserInput">First Page</A>

	    <?/MIVAR>
	  <?/MIBLOCK>
        </TD>

      <?MICOMMENT> Calculate 3 pages before and 3 pages after current page. <?/MICOMMENT>
      <?MIVAR name=$CURRENT>$(FIX,$(+,$(/,$BEGIN,$WINSIZE),1))<?/MIVAR>
      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,3)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,3))"> $(-,$CURRENT,3)</A> <?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,2)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,2))"> $(-,$CURRENT,2)</A><?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,1)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,1))"> $(-,$CURRENT,1)</A><?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>,$num_recs,$WINSIZE)">
	<TD align=center valign=top>
	  <?MIVAR> $CURRENT <?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,1)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$END"> $(+,$CURRENT,1)</A>
	</TD>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,2)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,2))"> $(+,$CURRENT,2)</A>
	</TD>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,3)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,3))"> $(+,$CURRENT,3)</A>
	</TD>
      <?/MIVAR>

        <TD width="45%" align=left valign=top>&nbsp;

	<?MICOMMENT> Get the next set of Rows <?/MICOMMENT>
	<?MIBLOCK COND="$(<=,$(+,$BEGIN,$WINSIZE),$num_recs)">
	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$END&BEGIN=$BEGIN&$selector$UserInput">Next</A><br>
	  <?/MIVAR>

	  <?MICOMMENT> Calculate last page <?/MICOMMENT>
	  <?MIVAR name=$START COND="$(=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(-,$(/,$num_recs,$WINSIZE),1),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR name=$START COND="$(!=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(FIX,$(/,$num_recs,$WINSIZE)),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$START&$selector$UserInput">Last Page</A>
	  <?/MIVAR>
	<?/MIBLOCK>
        </TD>
      </tr>
    </Table>
    </Center>

  <?/MIBLOCK> <?MICOMMENT> if not redirect to markerview <?/MICOMMENT>

  <?MICOMMENT>
    If you get to this point, then the code at least tried to insert records
    into markerselect_temp_marker.  Therefore always do the delete.
  <?/MICOMMENT>
  <?MISQL SQL="
    delete from $markerselect_temp_marker;">
  <?/MISQL>

  <?/MIBLOCK> <?MICOMMENT> no simultanious name and acc search <?/MICOMMENT>

<?/MIBLOCK> <?MICOMMENT> query results <?/MICOMMENT>



<?MICOMMENT>--------------  Query Form ----------------------------<?/MICOMMENT>
<?MIBLOCK COND="$(AND,$(NXST,$accession),$(NXST,$pubId))">  

  <?MISQL SQL="select WebExplode(object,'page=markerselect') from webPages where ID='aa-searchform.apg';">$1<?/MISQL>

<?/MIBLOCK>

<?MICOMMENT><?MISQL SQL="execute function get_time();">ENd: $1<?/MISQL><?/MICOMMENT>

<?MIBLOCK COND="$(NXST,$accession)">
  <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>
<?/MIBLOCK>




