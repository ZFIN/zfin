<?MICOMMENT> 
FILE: alleleDesigNums.apg 
Prefix: adn_

This file displays all already used allele designation numbers for a particular lab.
the page is poped up from links on the Designation column (1st column) of the 
table under "Allocated laboratory line designations: " on lab_desig.html page.

Variables Expected: 
  adn_beginningLetter        -- from lab_desig.html 
 
<?/MICOMMENT>

<?MIERROR>
<?MIVAR COND=$(XST,$MI_SQL)>
SQL: $MI_SQL
<?/MIVAR>
Code: $MI_ERRORCODE
State: $MI_ERRORSTATE
Message: $MI_ERRORMSG 
<?/MIERROR>

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <?MIVAR NAME=adn_lab><?/MIVAR>
    <?MIVAR NAME=comma>, <?/MIVAR>
    <?MISQL SQL="select name from lab where allele_prefix = '$adn_beginningLetter';">
      <?MIVAR>$(SETVAR,$adn_lab,$(CONCAT,$adn_lab,$1$comma))<?/MIVAR>
    <?/MISQL>  
  
    <?MIVAR>$(SETVAR,$adn_lab,$(SUBSTR,$adn_lab,1,$(-,$(STRLEN,$adn_lab),2)))<?/MIVAR>
    <title>
    <?MIBLOCK COND="$(AND,$(NC,$adn_lab,),$(NC,$adn_beginningLetter,wp))">
    Existing allele designation with <?MIVAR>$adn_lab<?/MIVAR>
    <?MIELSE> 
    Existing allele designation starting with "<?MIVAR>$adn_beginningLetter<?/MIVAR>"
    <?/MIBLOCK>
    </title>
  </head>
  
  <body>
  <h3>
  <?MIBLOCK COND="$(AND,$(NC,$adn_lab,),$(NC,$adn_beginningLetter,wp))">
  Existing allele designation with <?MIVAR>$adn_lab<?/MIVAR>
  <?MIELSE> 
  Existing allele designation starting with "<?MIVAR>$adn_beginningLetter<?/MIVAR>"
  <?/MIBLOCK>
  </h3>
 
  <?MIVAR NAME=adn_beginningLetter_lenth>$(STRLEN,$adn_beginningLetter)<?/MIVAR>
    
  <?MIVAR NAME=adn_count>0<?/MIVAR>

  <?MIBLOCK COND="$(EQ,$adn_beginningLetter,zf)">

    <?MISQL SQL="
      select dbinfo('sessionid') from single;">
      <?MIVAR NAME=$adn_session_id>$1<?/MIVAR>
      <?MIVAR NAME=$adn_temp_sorted>$(CONCAT,adn_temp_sorted,$adn_session_id)<?/MIVAR>
    <?/MISQL>
  
    <?MISQL SQL="execute function table_exists('$adn_temp_sorted')">
      <?MISQL COND=$(EC,$1,f) SQL="create temp table $adn_temp_sorted (adn_desig varchar(50),adn_alias varchar(50), adn_desig_order varchar(50)) 
        with NO LOG;">
      <?/MISQL>
    <?/MISQL>
  
    <?MISQL SQL="select feature_abbrev,feature_abbrev_order
                   from feature
                  where feature_abbrev like 'zf%'"> 
      <?MISQL SQL="insert into $adn_temp_sorted (adn_desig,adn_alias,adn_desig_order) values ('$1','','$2');">	    
      <?/MISQL>
    <?/MISQL>

    <?MISQL SQL="select dalias_alias,feature_abbrev
                   from data_alias, feature
                  where dalias_alias like '%)zf%' 
                  and dalias_data_zdb_id like 'ZDB-ALT-%'
                  and dalias_data_zdb_id=feature_zdb_id;">
                  
      <?MIVAR NAME=$posOfParth>$(POSITION,$1,")")<?/MIVAR>
      <?MIVAR NAME=$prevZfParth>$(SUBSTR,$1,$(+,$posOfParth,1))<?/MIVAR>
      <?MIVAR NAME=$prevZf DELIMIT=")" REPLACE="">$prevZfParth<?/MIVAR>
      <?MIVAR NAME=$prevZfOrderNum>$(SUBSTR,$prevZf,3)<?/MIVAR>
      <?MIVAR NAME=$prevZfOrder>zf00000000$prevZfOrderNum<?/MIVAR>

      <?MISQL COND="$(NE,$2,$prevZf)" SQL="insert into $adn_temp_sorted (adn_desig,adn_alias,adn_desig_order) values ('$prevZf','$2','$prevZfOrder');">	    
      <?/MISQL>
    <?/MISQL>
    
    <?MISQL SQL="select adn_desig,adn_alias,adn_desig_order
                   from $adn_temp_sorted
               order by adn_desig_order;"> 
       <?MIBLOCK COND="$(EQ,$2,)">
         <?MIVAR>$1        <br/> <?/MIVAR>
       <?MIELSE>
         <?MIVAR>$1 ($2)   <br/>  <?/MIVAR>
       <?/MIBLOCK>
    <?/MISQL>   
    <?MIVAR>$(SETVAR,$adn_count,$MI_ROWCOUNT)<?/MIVAR>

    <?MISQL SQL="delete from $adn_temp_sorted;"><?/MISQL>
    
  <?MIELSE>
   
    <?MISQL SQL="select feature_abbrev
                   from feature
                  where feature_abbrev like 'd$adn_beginningLetter%'
               order by feature_abbrev_order;">  
      <?MIVAR NAME=adn_desigNumD>$(SUBSTR,$1,$(+,$adn_beginningLetter_lenth,2))<?/MIVAR>
      <?MIVAR NAME=adn_firstNumD>$(SUBSTR,$1,$(+,$adn_beginningLetter_lenth,2),1)<?/MIVAR>
      
    <?MICOMMENT>================================================================
            == Display all dominant alleles first (first 'd' stands for "dominant")
            == All Tubingen alleles do not begin with just 't'.  
            == All alleles that begin with 't' and are not 'tsu' or 'twu' 
            == should be listed for Tubingen.  
            == Similarly for 'ut', former Parichy designation, should find 'utr'
            == Similarly for 'wp', Parichy designation, should find 'wpr'
            == Also, sq should include sqet1, etc.; ba should include baz1
            ==  cz should include czt13, cztq 7; hi should include hiD1Tg etc
            ==  f should include fmv69, fov01b, fs31, ft09e, fv109k, fw039-k etc.
            ==     but not fh, fl, fr
            ==  mi should include mik1 etc.
            == And 'sb' should be finding sb13fixe
            == And nk should also finds nksag, nksagm, nksagp etc
            ====================================================================
    <?/MICOMMENT>      
      <?MIBLOCK COND="$(EQ,$adn_beginningLetter,t)">
        <?MIVAR NAME=adn_firstNumD2>$(SUBSTR,$1,$(+,$adn_beginningLetter_lenth,2),2)<?/MIVAR>
        <?MIBLOCK COND="$(AND,$(NE,$adn_firstNumD2,su),$(NE,$adn_firstNumD2,wu))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,f)">
        <?MIBLOCK COND="$(AND,$(NE,$adn_firstNumD,h),$(NE,$adn_firstNumD,l),$(NE,$adn_firstNumD,r))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>   
      <?MIELSE COND="$(EQ,$adn_beginningLetter,ut)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,r))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,wp)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,r))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(OR,$(EQ,$adn_beginningLetter,sq),$(EQ,$adn_beginningLetter,cz))"> 
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,t))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR> 
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,ba)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,z))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,hi)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,D))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,nk)">  
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,s))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>        
      <?MIELSE COND="$(EQ,$adn_beginningLetter,mi)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNumD),$(EQ,$adn_firstNumD,k))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>          
      <?MIELSE>
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_desigNumD),$(ISNUM,$adn_firstNumD))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>        
      <?/MIBLOCK>
    <?/MISQL>

    <?MISQL SQL="select feature_abbrev
                   from feature
                  where feature_abbrev like '$adn_beginningLetter%'
               order by feature_abbrev_order;">  
      <?MIVAR NAME=adn_desigNum>$(SUBSTR,$1,$(+,$adn_beginningLetter_lenth,1))<?/MIVAR>
      <?MIVAR NAME=adn_firstNum>$(SUBSTR,$1,$(+,$adn_beginningLetter_lenth,1),1)<?/MIVAR>  
      
    <?MICOMMENT>================================================================
            == display of all non-dominant alleles
            == All Tubingen alleles do not begin with just 't'.  
            == All alleles that begin with 't' and are not 'tsu' or 'twu' 
            == should be listed for Tubingen.  
            == Similarly for 'ut', former Parichy designation, should find 'utr'
            == Similarly for 'wp', Parichy designation, should find 'wpr'
            == Also, sq should include sqet1, etc.; ba should include baz1
            ==  cz should include czt13, cztq 7; hi should include hiD1Tg etc
            ==  f should include fmv69, fov01b, fs31, ft09e, fv109k, fw039-k etc.
            ==     but not fh, fl, fr
            ==  mi should include mik1 etc.
            == And 'sb' should be finding sb13fixe
            == And nk should also finds nksag, nksagm, nksagp etc            
            ====================================================================
    <?/MICOMMENT>      
      <?MIBLOCK COND="$(EQ,$adn_beginningLetter,t)">
        <?MIVAR NAME=adn_firstNum2>$(SUBSTR,$1,$(+,$adn_beginningLetter_lenth,1),2)<?/MIVAR>
        <?MIBLOCK COND="$(AND,$(NE,$adn_firstNum2,su),$(NE,$adn_firstNum2,wu))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,f)">
        <?MIBLOCK COND="$(AND,$(NE,$adn_firstNum,h),$(NE,$adn_firstNum,l),$(NE,$adn_firstNum,r))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>    
      <?MIELSE COND="$(EQ,$adn_beginningLetter,ut)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNum),$(EQ,$adn_firstNum,r))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(EQ,$adn_beginningLetter,wp)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNum),$(EQ,$adn_firstNum,r))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>
      <?MIELSE COND="$(OR,$(EQ,$adn_beginningLetter,sq),$(EQ,$adn_beginningLetter,cz))"> 
         <?MIVAR>$1<?/MIVAR> <br/>
         <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR> 
      <?MIELSE COND="$(EQ,$adn_beginningLetter,ba)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNum),$(EQ,$adn_firstNum,z))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK> 
      <?MIELSE COND="$(EQ,$adn_beginningLetter,hi)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNum),$(EQ,$adn_firstNum,D))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>    
      <?MIELSE COND="$(EQ,$adn_beginningLetter,nk)">  
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNum),$(EQ,$adn_firstNum,s))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>       
      <?MIELSE COND="$(EQ,$adn_beginningLetter,mi)">        
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_firstNum),$(EQ,$adn_firstNum,k))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>          
      <?MIELSE>
        <?MIBLOCK COND="$(OR,$(ISNUM,$adn_desigNum),$(ISNUM,$adn_firstNum))">
          <?MIVAR>$1<?/MIVAR> <br/>
          <?MIVAR>$(SETVAR,$adn_count,$(+,$adn_count,1))<?/MIVAR>
        <?/MIBLOCK>        
      <?/MIBLOCK>
    <?/MISQL>
    
  <?/MIBLOCK> <?MICOMMENT> ** end of if starting Letter == zf <?/MICOMMENT>
  
  <?MIBLOCK COND="$(=,$adn_count,0)">
     None
  <?/MIBLOCK>
   
  </body>

  <?MICOMMENT> ** the following could be useful after lab_desig.html is changed into an apg page <?/MICOMMENT>
  <?MIVAR NAME=adn_popupwindowHeight>$(+,$adn_count,5)<?/MIVAR>

</html>
