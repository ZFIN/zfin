<?MICOMMENT> 
FILE: fishselect.apg 
Prefix: fsel_

This file implements search interface for genotypes. 
The goal is to display genotypes as search result according to the search criteria 
and display genotype list when called from other pages.

Variables THAT MIGHT BE Expected: 
 -- fsel_allele_id        -- from jump_to.apg
 -- fsel_marker_id        -- from markerview.apg
 -- fsel_anatomy_item_id  -- from anatomy_item.apg
 -- $fsel_inputname     -- from search form and markerview and markerselect page
 -- fsel_cnstrct_id
 -- pubId     
 
<?/MICOMMENT>

<?MIERROR>
<?MIVAR COND=$(XST,$MI_SQL)>
SQL: $MI_SQL
<?/MIVAR>
Code: $MI_ERRORCODE
State: $MI_ERRORSTATE
Message: $MI_ERRORMSG 
<?/MIERROR>


<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>

  <?MICOMMENT>============================================
              == Java Scripts
	      ===========================================
  <?/MICOMMENT>
  <script>

  function process_structures(list) {
  	list = list.replace(/^\s+|\s+$/g,'');
  	spc = " ";
 	 list = list.replace(/spc{2,}/g,' ');
 	 document.BrowserForm.TA_selected_structures.value = list;  
 	 //window.alert(list);
  	matchcomma = /\,/g;
  	list = list.replace(matchcomma,"|");

 	 matchreturn = /\n/g;
 	 list = list.replace(matchreturn,",");

 	 matchmulticomma = /,{1,}/g;
 	 list = list.replace(matchmulticomma,",");

 	 matchfirstcomma = /^,/g;
 	 list = list.replace(matchfirstcomma,"");  

  	matchlastcomma = /,$/g;
  	list = list.replace(matchlastcomma,"");

  	document.BrowserForm.fsel_processed_selected_structures.value = list;
  	//window.alert(document.BrowserForm.fsel_processed_selected_structures.value);
  }

  function form_submit() { 
 
	  process_structures(document.BrowserForm.TA_selected_structures.value);
	  //remove double quotes
	  document.BrowserForm.TA_selected_structures.value=document.BrowserForm.TA_selected_structures.value.replace(/"/g,"");  
	  document.BrowserForm.submit();
  }

  function call_reset() {   
  	 document.BrowserForm.lg.selectedIndex = 0;
 	 document.BrowserForm.compare.selectedIndex = 0;	
 	 document.BrowserForm.fsel_inputname.value = "";
 	 document.BrowserForm.chrom_change.selectedIndex = 0;
 	 document.BrowserForm.mutagen.selectedIndex = 0;
 	 document.BrowserForm.START.value = "";  
 	 document.BrowserForm.TA_selected_structures.value = '';
 	 document.BrowserForm.include_substructures.checked = true;
 	 document.BrowserForm.structure_bool[0].checked = true;
	 document.BrowserForm.fselFilterValue[0].checked = false;
	 document.BrowserForm.fselFilterValue[1].checked = false;
  	 document.BrowserForm.fselFilterValue[2].checked = true;
  	 document.BrowserForm.WINSIZE.value = 20;  
  }


  function updateInnerHTML(element_id,html_to_display) {
    	var c1 = document.getElementById(element_id);
    c1.innerHTML = html_to_display;
  }

  </script>

  <script src="http://<!--|DOMAIN_NAME|-->/autosuggest.js"></script>


  <?MICOMMENT>======================================================
              == Keep parameter(s) when called from another page
	      ======================================================
  <?/MICOMMENT>

  <?MIBLOCK COND="$(OR,$(XST,$fsel_cnstrct_id),$(XST,$fsel_allele_id),$(XST,$fsel_marker_id))">
    <?MIVAR NAME=query_results>f<?/MIVAR>
  <?MIELSE COND="$(XST,$fsel_anatomy_item_id)">  
    <?MISQL SQL="select anatitem_name from anatomy_item 
       	          where anatitem_zdb_id = '$fsel_anatomy_item_id';">
      <?MIVAR NAME=TA_selected_structures>$1<?/MIVAR>        
    <?/MISQL>  
    <?MIBLOCK COND="$(XST,$fsel_anatomy_include)">
      <?MIVAR NAME=include_substructures>checked<?/MIVAR>
    <?/MIBLOCK> 
    <?MIVAR NAME=query_results>f<?/MIVAR>
  <?/MIBLOCK>

  <?MIBLOCK COND="$(XST,$query_results)">
    <?MIBLOCK COND="$(EC,$query_results,t)">
       <?MIVAR NAME=page_name>ZFIN Mutant List<?/MIVAR>
    <?MIELSE COND="$(EC,$query_results,exist)">
       <?MIVAR NAME=page_name>ZFIN Mutant Search Result<?/MIVAR>
    <?MIELSE>
       <?MIVAR NAME=page_name>ZFIN Mutant Search<?/MIVAR>
    <?/MIBLOCK>
  <?MIELSE>
    <?MIBLOCK COND="$(XST,$pubId)">
      <?MIVAR NAME=page_name>ZFIN Mutant List<?/MIVAR>
    <?MIELSE>
      <?MIVAR NAME=page_name>ZFIN Mutant Search<?/MIVAR>
    <?/MIBLOCK>
  <?/MIBLOCK>

  <?MIVAR><TITLE>$page_name</TITLE><?/MIVAR>

</head>  <?MICOMMENT>=============== end html head =============================<?/MICOMMENT>



<?MICOMMENT>
   ==============================================================================
   ========= DISPLAY PAGE HEADER
   ==============================================================================
<?/MICOMMENT>

<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpageheader.apg';">$1<?/MISQL>

<?MISQL SQL="select object from webPages where ID='aa-chromoscripts.apg';">$1<?/MISQL>
  
<?MISQL SQL="select WebExplode(object,'') from webPages where ID = 'aa-identify.apg';">$1<?/MISQL>

<?MICOMMENT>
   ==============================================================================
   ========= DEFINE GENERAL VARIABLES
   ==============================================================================
<?/MICOMMENT>
  
<?MIVAR name=highlight><!--|HIGHLIGHT_COLOR|--><?/MIVAR>
<?MIVAR NAME=MI_NULL><?/MIVAR>
<?MIVAR NAME=MI_NOVALUE><?/MIVAR>
<?MIVAR NAME=comma>,<?/MIVAR>  
<?MIVAR NAME=single_quote>'<?/MIVAR>
<?MIVAR NAME=debug_timing>f<?/MIVAR>  

<?MICOMMENT>
  ============================================================================
  ==========  CLEAN UP INPUT FIELDS
  ============================================================================
<?/MICOMMENT>

<?MIVAR COND="$(XST,$fsel_inputname)" NAME="$fsel_ori_inputname">$fsel_inputname<?/MIVAR>
<?MIVAR COND="$(XST,$fsel_inputname)" NAME="$fsel_inputname">$(LOWER,$(TRIM,$fsel_inputname))<?/MIVAR>
<?MIVAR COND="$(XST,$WINSIZE)" NAME="$WINSIZE">$(TRIM,$WINSIZE)<?/MIVAR>

<?MICOMMENT>
  ============================================================================
  ==========  SET DEFAULT VALUES
  ============================================================================		
<?/MICOMMENT>

<?MIVAR COND=$(NXST,$compare) NAME=$compare>contains<?/MIVAR>
<?MIVAR COND=$(NXST,$lg) NAME=$lg>0<?/MIVAR>
<?MIVAR COND=$(NXST,$chrom_change) NAME=$chrom_change>any<?/MIVAR>
<?MIVAR COND=$(NXST,$structure_bool) NAME=$structure_bool>and<?/MIVAR>
<?MIVAR COND=$(NXST,$fselFilterValue) NAME=$fselFilterValue>all<?/MIVAR>

<?MIBLOCK COND="$(AND,$(NXST,$include_substructures),$(NXST,$fishsel_calledBySelf))">
   <?MIVAR NAME="include_substructures">checked<?/MIVAR>
<?/MIBLOCK>

<?MICOMMENT> This variable gets set to 't' if we want to force 0 results to show,
             initially, the only place that it can be set to 'true' is when an anatomy
	     item doesn't exist. 
<?/MICOMMENT>
<?MIVAR NAME="$fsel_anatomy_error_occured">f<?/MIVAR>


<?MIVAR NAME=WINSIZE DEFAULT=20>$WINSIZE<?/MIVAR>
<?MIVAR NAME=BEGIN DEFAULT=1>$START<?/MIVAR>

<?MIVAR NAME=BEGIN>$(IF,$(<,$BEGIN,1),1,$BEGIN)<?/MIVAR> 
<?MIVAR NAME=END>$(+,$BEGIN,$WINSIZE)<?/MIVAR>

<?MIVAR COND="$(NXST,$num_recs)" NAME=$num_recs>0<?/MIVAR>

<?MISQL COND=$(EC,$debug_timing,t) SQL="
    execute function get_time()">
    <br>... $1 Start ... <br>
<?/MISQL>

<?MICOMMENT>
  ============================================================================
  ==========  
  ============================================================================
  		
<?/MICOMMENT>


<?MIBLOCK COND="$(OR,$(XST,$query_results),$(XST,$pubId))"> 
  <?MIBLOCK COND="$(NXST,$constraint)">
    <?MIVAR COND="$(NXST,$constraint)" NAME=$constraint>where geno_is_wildtype = "f" <?/MIVAR>
    <?MIVAR COND="$(NXST,$moreConstraint)" NAME=$moreConstraint><?/MIVAR>
    <?MIVAR COND="$(NXST,$target_tables)" NAME=$target_tables>genotype<?/MIVAR>
    <?MIVAR COND="$(NXST,$target_cols)" NAME=$target_cols>distinct geno_zdb_id,'1',geno_name_order,' ',' '<?/MIVAR>
    <?MIVAR COND="$(NXST,$target_cols2)" NAME=$target_cols>geno_zdb_id,'1',geno_name_order,' ',' '<?/MIVAR>
    
    <?MICOMMENT>------------------------------------------------------------
               -- This next part builds up a query piece by piece, based on which 
               -- criteria were passed in
	       ------------------------------------------------------------
    <?/MICOMMENT>

    <?MICOMMENT>==================================================================
            ==  Create fishselect_temp_match temp table if it does not already exist.
            ==========================================================================
    <?/MICOMMENT>

  <?MISQL SQL="
      select dbinfo('sessionid') 
        from single;">
      <?MIVAR NAME=$fsel_session_id>$1<?/MIVAR>
      <?MIVAR NAME=$fishselect_temp_match>$(CONCAT,fishselect_temp_match_,$fsel_session_id)<?/MIVAR>
  <?/MISQL>

    <?MISQL SQL="
      execute function table_exists('$fishselect_temp_match')">
      <?MISQL COND=$(EC,$1,f) SQL="
	create temp table $fishselect_temp_match (
	  fmatch_zdb_id varchar(50),
	  fmatch_order varchar(100),
	  fmatch_precedence varchar(50),
	  fmatch_matchtext varchar(255),
	  fmatch_matchtype varchar(80)
	) with NO LOG;">
      <?/MISQL>
    <?/MISQL>
    
  <?/MIBLOCK>
  
<?MICOMMENT> =================================================================
                          if allele zdb id is paased in 
             =================================================================
<?/MICOMMENT>
<?MIBLOCK COND="$(XST,$fsel_allele_id)">

  <?MIVAR NAME=$moreTables>,genotype_feature<?/MIVAR>
  <?MIVAR>$(SETVAR,$target_tables,$(CONCAT,$target_tables,$moreTables))<?/MIVAR>

  <?MIVAR NAME=$moreConstraint> and geno_zdb_id = genofeat_geno_zdb_id 
                              and genofeat_feature_zdb_id = '$fsel_allele_id'
  <?/MIVAR>    

  <?MIVAR>$(SETVAR, $constraint, $(CONCAT, $constraint, $moreConstraint))<?/MIVAR>

<?/MIBLOCK>


    <?MICOMMENT> =================================================================
                          if Name / Symbol is searched
         ==============================================================================
    <?/MICOMMENT>
<?MIBLOCK COND="$(XST,$fsel_inputname)">

  <?MIVAR NAME=$fsel_inputname DELIMIT="'" REPLACE="''">$fsel_inputname<?/MIVAR>
  <?MIVAR NAME=$fsel_inputname DELIMIT="_" REPLACE="\_">$fsel_inputname<?/MIVAR>

  <?MICOMMENT> *** Create or reuse temp tables *** <?/MICOMMENT>
  <?MIVAR NAME=$fishselect_temp_on_name>$(CONCAT,fishselect_temp_on_name_,$fsel_session_id)<?/MIVAR>
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_name')">
    <?MISQL COND=$(EC,$1,f) SQL="
      create temp table $fishselect_temp_on_name (
        g_zdb_id	 	varchar(50),
        m_order	 	        varchar(10),
        m_text                  varchar(80),
        m_type                  varchar(80)
      ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>

    <?MICOMMENT> in order to improve performance, extra level of temp tables are used instead of doing join
    <?/MICOMMENT>
  <?MIVAR NAME=$fishselect_temp_on_allele_junior>$(CONCAT,fishselect_temp_on_allele_junior_,$fsel_session_id)<?/MIVAR>    
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_allele_junior')">
    <?MISQL COND=$(EC,$1,f) SQL="
        create temp table $fishselect_temp_on_allele_junior (
          junior_allele_zdb_id 		varchar(50),
          junior_m_order	 	varchar(10),
          junior_m_text                 varchar(80),
          junior_m_type                 varchar(80)
        ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>  

  <?MIVAR NAME=$fishselect_temp_on_gene_junior>$(CONCAT,fishselect_temp_on_gene_junior_,$fsel_session_id)<?/MIVAR>    
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_gene_junior')">
    <?MISQL COND=$(EC,$1,f) SQL="
        create temp table $fishselect_temp_on_gene_junior (
          junior_gene_zdb_id 		varchar(50),
          junior_m_order	 	varchar(10),
          junior_m_text                 varchar(80),
          junior_m_type                 varchar(80)
        ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>

  <?MIVAR NAME=$percentage>%<?/MIVAR>
  <?MIBLOCK COND="$(EC,$compare,starts)">
    <?MIVAR NAME=$table_all_name_ends> <?/MIVAR>
    <?MIVAR NAME=$target_col>allmapnm_name_lower<?/MIVAR>
    <?MIVAR NAME=$connecting_2_tables> <?/MIVAR>
    <?MIVAR NAME=$like_or_equal>like<?/MIVAR>
    <?MIVAR NAME=$input>$(CONCAT,$fsel_inputname,$percentage)<?/MIVAR>   
  <?MIELSE COND="$(EC,$compare,equals)">    
    <?MIVAR NAME=$table_all_name_ends> <?/MIVAR>
    <?MIVAR NAME=$target_col>allmapnm_name_lower<?/MIVAR>
    <?MIVAR NAME=$connecting_2_tables> <?/MIVAR>
    <?MIVAR NAME=$like_or_equal>=<?/MIVAR> 
    <?MIVAR NAME=$input>$fsel_inputname<?/MIVAR>
  <?MIELSE>
    <?MIVAR NAME=$table_all_name_ends>,all_name_ends<?/MIVAR>
    <?MIVAR NAME=$target_col>allnmend_name_end_lower<?/MIVAR>
    <?MIVAR NAME=$connecting_2_tables>and allmapnm_serial_id = allnmend_allmapnm_serial_id<?/MIVAR>
    <?MIVAR NAME=$like_or_equal>like<?/MIVAR> 
    <?MIVAR NAME=$input>$(CONCAT,$fsel_inputname,$percentage)<?/MIVAR>
  <?/MIBLOCK>

    <?MISQL SQL="insert into $fishselect_temp_on_allele_junior (junior_allele_zdb_id,junior_m_text,junior_m_order,junior_m_type)
	           select allmapnm_zdb_id,allmapnm_name,allmapnm_significance,allmapnm_precedence 
                     from all_map_names$table_all_name_ends
	            where $target_col $like_or_equal '$input'
	              $connecting_2_tables
	              and allmapnm_precedence in ('Genetic feature name','Genetic feature abbreviation','Genetic feature alias');">	    
    <?/MISQL>    

    <?MISQL SQL="insert into $fishselect_temp_on_name (g_zdb_id,m_text,m_order,m_type)
  	           select genofeat_geno_zdb_id,junior_m_text,junior_m_order,junior_m_type
                     from genotype_feature,$fishselect_temp_on_allele_junior
	            where genofeat_feature_zdb_id = junior_allele_zdb_id;">	    
    <?/MISQL>   

    <?MISQL SQL="delete from $fishselect_temp_on_allele_junior;"><?/MISQL>

    <?MISQL SQL="insert into $fishselect_temp_on_gene_junior (junior_gene_zdb_id,junior_m_text,junior_m_order,junior_m_type)
	           select allmapnm_zdb_id,allmapnm_name,allmapnm_significance,allmapnm_precedence 
                     from all_map_names$table_all_name_ends
	            where $target_col $like_or_equal '$input'
	              $connecting_2_tables
	              and allmapnm_precedence in ('Current symbol','Current name','Previous name');">	    
    <?/MISQL> 
    
    <?MISQL SQL="insert into $fishselect_temp_on_name (g_zdb_id,m_text,m_order,m_type)
	           select genofeat_geno_zdb_id,junior_m_text,junior_m_order,junior_m_type
                     from genotype_feature,feature_marker_relationship,$fishselect_temp_on_gene_junior
	            where not exists (select 'x' from $fishselect_temp_on_name
                                      where g_zdb_id = genofeat_geno_zdb_id)
	              and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
	              and fmrel_mrkr_zdb_id = junior_gene_zdb_id;">	    
    <?/MISQL>   
    
    <?MISQL SQL="insert into $fishselect_temp_on_name (g_zdb_id,m_text,m_order,m_type)
	           select genofeat_geno_zdb_id,junior_m_text,junior_m_order,junior_m_type
                     from genotype_feature,feature_marker_relationship,marker_relationship,$fishselect_temp_on_gene_junior
	            where not exists (select 'x' from $fishselect_temp_on_name
                                      where g_zdb_id = genofeat_geno_zdb_id)
	              and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
	              and mrel_mrkr_1_zdb_id = fmrel_mrkr_zdb_id
	              and mrel_type = 'coding sequence of'
	              and mrel_mrkr_2_zdb_id = junior_gene_zdb_id;">	    
    <?/MISQL>    
    
    <?MISQL SQL="insert into $fishselect_temp_on_name (g_zdb_id,m_text,m_order,m_type)
	           select genofeat_geno_zdb_id,junior_m_text,junior_m_order,junior_m_type
                     from genotype_feature,feature_marker_relationship,marker_relationship,$fishselect_temp_on_gene_junior
	            where not exists (select 'x' from $fishselect_temp_on_name
                                      where g_zdb_id = genofeat_geno_zdb_id)
	              and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
	              and mrel_mrkr_2_zdb_id = fmrel_mrkr_zdb_id
	              and mrel_type = 'coding sequence of'
	              and mrel_mrkr_1_zdb_id = junior_gene_zdb_id;">	    
    <?/MISQL>        
    
    <?MISQL SQL="insert into $fishselect_temp_on_name (g_zdb_id,m_text,m_order,m_type)
	           select genofeat_geno_zdb_id,junior_m_text,junior_m_order,junior_m_type
                     from genotype_feature,feature,mapped_deletion,$fishselect_temp_on_gene_junior
	            where not exists (select 'x' from $fishselect_temp_on_name
                                      where g_zdb_id = genofeat_geno_zdb_id)
	              and genofeat_feature_zdb_id = feature_zdb_id
	              and junior_gene_zdb_id = marker_id
	              and feature_name = allele
	              and present_t = 'f';">	    
    <?/MISQL>   
 
    <?MISQL SQL="delete from $fishselect_temp_on_gene_junior;"><?/MISQL>      
 
    <?MISQL SQL="insert into $fishselect_temp_on_name (g_zdb_id,m_text,m_order,m_type)
         	   select distinct allmapnm_zdb_id,allmapnm_name,allmapnm_significance,allmapnm_precedence 
                     from all_map_names$table_all_name_ends
	            where not exists (select 'x' from $fishselect_temp_on_name
                                      where g_zdb_id = allmapnm_zdb_id)
	              and $target_col $like_or_equal '$input'
	              $connecting_2_tables
	              and allmapnm_precedence = 'Genotype alias';">	    
    <?/MISQL>       

  <?MIVAR NAME=$moreConstraint> and geno_zdb_id = g_zdb_id 
  <?/MIVAR>    

  <?MIVAR NAME=$target_cols>geno_zdb_id,m_order,geno_name_order,m_text,m_type<?/MIVAR>    
  <?MIVAR NAME=$moreTables>,$fishselect_temp_on_name<?/MIVAR>
  <?MIVAR>$(SETVAR,$target_tables,$(CONCAT,$target_tables,$moreTables))<?/MIVAR>  
  <?MIVAR>$(SETVAR,$constraint,$(CONCAT,$constraint,$moreConstraint))<?/MIVAR> 
  
  <?MICOMMENT>restore the fsel_inputname string for display<?/MICOMMENT>
  <?MIVAR NAME=fsel_inputname DELIMIT="''" REPLACE="'">$fsel_inputname<?/MIVAR>
  <?MIVAR NAME=fsel_inputname DELIMIT="\_" REPLACE="_">$fsel_inputname<?/MIVAR>  
  
<?/MIBLOCK>

    <?MICOMMENT> =================================================================
                          if LG is searched
         ==============================================================================
    <?/MICOMMENT>
<?MIBLOCK COND="$(AND,$(XST,$lg),$(NE, $lg, any),$(NE, $lg, 0))">

  <?MICOMMENT> *** Create or reuse temp table *** <?/MICOMMENT>
  <?MIVAR NAME=$fishselect_temp_on_lg>$(CONCAT,fishselect_temp_on_lg_,$fsel_session_id)<?/MIVAR>
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_lg')">
    <?MISQL COND=$(EC,$1,f) SQL="
      create temp table $fishselect_temp_on_lg (
        g_zdb_id	 	varchar(50)
      ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>

  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature_marker_relationship,mapped_marker
	  where genofeat_feature_zdb_id = fmrel_ftr_zdb_id
	    and fmrel_mrkr_zdb_id = marker_id
	    and or_lg='$lg';">
  <?/MISQL>
  
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature_marker_relationship,marker_relationship,mapped_marker   
	  where not exists (select 'x' from $fishselect_temp_on_lg
                                      where g_zdb_id = genofeat_geno_zdb_id)
	    and genofeat_feature_zdb_id=fmrel_ftr_zdb_id
	    and fmrel_mrkr_zdb_id = mrel_mrkr_2_zdb_id
	    and mrel_mrkr_1_zdb_id = marker_id
	    and mrel_type in ('clone contains gene','clone contains small segment')
	    and or_lg='$lg';">
  <?/MISQL>
  
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
        select genofeat_geno_zdb_id  
	  from genotype_feature,feature_marker_relationship,marker_relationship,mapped_marker   
	 where not exists (select 'x' from $fishselect_temp_on_lg
                                     where g_zdb_id = genofeat_geno_zdb_id)
	   and genofeat_feature_zdb_id=fmrel_ftr_zdb_id
	   and fmrel_mrkr_zdb_id=mrel_mrkr_1_zdb_id
	   and mrel_mrkr_2_zdb_id=marker_id
	   and mrel_type in ('clone contains gene','clone contains small segment','gene encodes small segment')
	   and or_lg='$lg';">
  <?/MISQL>
      
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
        select genofeat_geno_zdb_id  
	  from genotype_feature,feature_marker_relationship,linkage_member,linkage
	 where not exists (select 'x' from $fishselect_temp_on_lg
                                     where g_zdb_id = genofeat_geno_zdb_id)
	   and genofeat_feature_zdb_id=fmrel_ftr_zdb_id
	   and fmrel_mrkr_zdb_id=lnkgmem_member_zdb_id
           and lnkgmem_linkage_zdb_id=lnkg_zdb_id
           and lnkg_or_lg='$lg';">
  <?/MISQL>

  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
        select genofeat_geno_zdb_id  
	  from genotype_feature,linkage_member,linkage
	 where not exists (select 'x' from $fishselect_temp_on_lg
                                     where g_zdb_id = genofeat_geno_zdb_id)
	   and genofeat_feature_zdb_id=lnkgmem_member_zdb_id
	   and lnkgmem_linkage_zdb_id=lnkg_zdb_id
           and lnkg_or_lg='$lg';">    
  <?/MISQL>   
  
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
        select genofeat_geno_zdb_id  
	  from genotype_feature,feature_marker_relationship,marker_relationship,linkage_member,linkage
	 where not exists (select 'x' from $fishselect_temp_on_lg
                                     where g_zdb_id = genofeat_geno_zdb_id)
	   and genofeat_feature_zdb_id=fmrel_ftr_zdb_id
	   and fmrel_mrkr_zdb_id=mrel_mrkr_2_zdb_id
	   and mrel_mrkr_1_zdb_id=lnkgmem_member_zdb_id
	   and mrel_type in ('clone contains gene','clone contains small segment')
           and lnkgmem_linkage_zdb_id=lnkg_zdb_id
           and lnkg_or_lg='$lg';">  
  <?/MISQL>
  
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
        select genofeat_geno_zdb_id  
	  from genotype_feature,feature_marker_relationship,marker_relationship,linkage_member,linkage
	 where not exists (select 'x' from $fishselect_temp_on_lg
                                     where g_zdb_id = genofeat_geno_zdb_id)
	   and genofeat_feature_zdb_id=fmrel_ftr_zdb_id
	   and fmrel_mrkr_zdb_id=mrel_mrkr_1_zdb_id
	   and mrel_mrkr_2_zdb_id=lnkgmem_member_zdb_id
	   and mrel_type in ('clone contains gene','clone contains small segment','gene encodes small segment')
           and lnkgmem_linkage_zdb_id=lnkg_zdb_id
           and lnkg_or_lg='$lg';">    
  <?/MISQL> 
  

  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature,mapped_deletion
	  where not exists (select 'x' from $fishselect_temp_on_lg
                                      where g_zdb_id = genofeat_geno_zdb_id)
	    and genofeat_feature_zdb_id=feature_zdb_id
	    and feature_abbrev=allele
	    and or_lg='$lg';">
  <?/MISQL>
  
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature,mapped_deletion,marker_relationship,linkage_member,linkage
	  where not exists (select 'x' from $fishselect_temp_on_lg
                                      where g_zdb_id = genofeat_geno_zdb_id)
	    and genofeat_feature_zdb_id=feature_zdb_id
	    and feature_abbrev=allele
	    and marker_id=mrel_mrkr_2_zdb_id
	    and mrel_mrkr_1_zdb_id=lnkgmem_member_zdb_id
	    and mrel_type in ('clone contains gene','clone contains small segment')
            and lnkgmem_linkage_zdb_id=lnkg_zdb_id
            and lnkg_or_lg='$lg';"> 
  <?/MISQL>  
  
  <?MISQL SQL="insert into $fishselect_temp_on_lg (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature,mapped_deletion,marker_relationship,linkage_member,linkage
	  where not exists (select 'x' from $fishselect_temp_on_lg
                                      where g_zdb_id = genofeat_geno_zdb_id)
	    and genofeat_feature_zdb_id=feature_zdb_id
	    and feature_abbrev=allele
	    and marker_id=mrel_mrkr_1_zdb_id
	    and mrel_mrkr_2_zdb_id=lnkgmem_member_zdb_id
	    and mrel_type in ('clone contains gene','clone contains small segment','gene encodes small segment')
            and lnkgmem_linkage_zdb_id=lnkg_zdb_id
            and lnkg_or_lg='$lg';"> 
  <?/MISQL>  

  <?MIVAR NAME=$moreConstraint> and exists (select 'x' from $fishselect_temp_on_lg where geno_zdb_id = g_zdb_id)
  <?/MIVAR>  
  
  <?MIVAR>$(SETVAR, $constraint, $(CONCAT, $constraint, $moreConstraint))<?/MIVAR>
<?/MIBLOCK>

    <?MICOMMENT> =================================================================
                          if Mutagen is searched
         ==============================================================================
    <?/MICOMMENT>
<?MIBLOCK COND="$(AND,$(XST,$mutagen),$(NE,$mutagen,any))">
  <?MICOMMENT> *** Create or reuse temp table *** <?/MICOMMENT>
  <?MIVAR NAME=$fishselect_temp_on_mutagen>$(CONCAT,fishselect_temp_on_mutagen_,$fsel_session_id)<?/MIVAR>
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_mutagen')">
    <?MISQL COND=$(EC,$1,f) SQL="
      create temp table $fishselect_temp_on_mutagen (
        g_zdb_id	 	varchar(50)
      ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>

  <?MISQL SQL="insert into $fishselect_temp_on_mutagen (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature_assay
	  where genofeat_feature_zdb_id = featassay_feature_zdb_id 
            and featassay_mutagen = '$mutagen';">
  <?/MISQL>

  <?MIVAR NAME=$moreConstraint> and exists (select 'x' from $fishselect_temp_on_mutagen where geno_zdb_id = g_zdb_id)
  <?/MIVAR>  
  
  <?MIVAR>$(SETVAR,$constraint,$(CONCAT,$constraint,$moreConstraint))<?/MIVAR>
<?/MIBLOCK>

    <?MICOMMENT> =================================================================
                          if Mutation type is searched
         ==============================================================================
    <?/MICOMMENT>

<?MIBLOCK COND="$(AND,$(XST,$chrom_change),$(NE, $chrom_change, any))">

  <?MICOMMENT> *** Create or reuse temp table *** <?/MICOMMENT>
  <?MIVAR NAME=$fishselect_temp_on_type>$(CONCAT,fishselect_temp_on_type_,$fsel_session_id)<?/MIVAR>
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_type')">
    <?MISQL COND=$(EC,$1,f) SQL="
      create temp table $fishselect_temp_on_type (
        g_zdb_id	 	varchar(50)
      ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>

  <?MISQL SQL="insert into $fishselect_temp_on_type (g_zdb_id)
	select genofeat_geno_zdb_id  
          from genotype_feature,feature
	  where genofeat_feature_zdb_id = feature_zdb_id 
            and feature_type = '$chrom_change';">
  <?/MISQL>
  
  <?MIBLOCK COND="$(EC,$chrom_change,Insertion)">
    <?MISQL SQL="insert into $fishselect_temp_on_type (g_zdb_id)
	           select genofeat_geno_zdb_id  
                     from genotype_feature,feature
	            where genofeat_feature_zdb_id = feature_zdb_id 
                      and feature_type = 'TRANSGENIC_INSERTION';">
    <?/MISQL>
  <?/MIBLOCK>
  
  <?MIVAR NAME=$moreConstraint> and exists (select 'x' from $fishselect_temp_on_type where geno_zdb_id = g_zdb_id)
  <?/MIVAR>  
  
  <?MIVAR>$(SETVAR,$constraint,$(CONCAT,$constraint,$moreConstraint))<?/MIVAR>
<?/MIBLOCK>

    <?MICOMMENT> =================================================================
                          if filter selection is made
         ==============================================================================
    <?/MICOMMENT>

<?MIBLOCK COND="$(OR,$(EC,$fselFilterValue,mutOnly),$(EC,$fselFilterValue,TGonly))">

   <?MISQL COND=$(EC,$debug_timing,t) SQL="
    execute function get_time()">
    <br>... $1 Filter section start  ... <br>
   <?/MISQL>

  <?MICOMMENT> *** Create or reuse temp table *** <?/MICOMMENT>
  <?MIVAR NAME=$fishselect_temp_on_filter>$(CONCAT,fishselect_temp_on_filter_,$fsel_session_id)<?/MIVAR>
  <?MISQL SQL="
    execute function table_exists('$fishselect_temp_on_filter')">
    <?MISQL COND=$(EC,$1,f) SQL="
      create temp table $fishselect_temp_on_filter (
        g_zdb_id	 	varchar(50)
      ) with NO LOG;">
    <?/MISQL>
  <?/MISQL>

  <?MIBLOCK COND="$(EC,$fselFilterValue,mutOnly)">
    <?MISQL SQL="insert into $fishselect_temp_on_filter (g_zdb_id)
	          select genofeat_geno_zdb_id  
                    from genotype_feature,feature
	           where genofeat_feature_zdb_id = feature_zdb_id 
                     and (feature_type = 'POINT_MUTATION'
                       or feature_type = 'TRANSLOC'
                       or feature_type = 'INVERSION'
                       or feature_type = 'DEFICIENCY');">
    <?/MISQL>
    
    <?MISQL SQL="insert into $fishselect_temp_on_filter (g_zdb_id)
	          select genofeat_geno_zdb_id  
                    from genotype_feature,feature,feature_marker_relationship
	           where genofeat_feature_zdb_id = feature_zdb_id
	             and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                     and feature_type = 'INSERTION'
                     and fmrel_type = 'is allele of';">
    <?/MISQL>
    
  <?MIELSE>

    <?MISQL SQL="insert into $fishselect_temp_on_filter (g_zdb_id)
	           select genofeat_geno_zdb_id  
                     from genotype_feature,feature
	            where genofeat_feature_zdb_id = feature_zdb_id 
                      and feature_type = 'TRANSGENIC_INSERTION'
                      and not exists (select 'x' from $fishselect_temp_on_filter where genofeat_geno_zdb_id = g_zdb_id);">
    <?/MISQL>
    
  <?/MIBLOCK>
    
  <?MIVAR NAME=$moreConstraint> and exists (select 'x' from $fishselect_temp_on_filter where geno_zdb_id = g_zdb_id)
  <?/MIVAR>  
  <?MIVAR>$(SETVAR,$constraint,$(CONCAT,$constraint,$moreConstraint))<?/MIVAR>

  <?MISQL COND=$(EC,$debug_timing,t) SQL="
    execute function get_time()">
    <br>... $1 Filter section end  ... <br>
  <?/MISQL>


<?/MIBLOCK>



  <?MICOMMENT> =================================================================
                          if Anatomy is searched
         -------------------------------------------------------------------------------
         There are two cases that triggers anatomy search:

         1) from fishselect.apg itself, when user typed terms into the anatomy box.
            In this case, $TA_selected_structures is populated and then converted to
            a comma separated list stored in $fsel_processed_selected_structures. Variable
            $include_substructures defines whether substructures need to be included,variable
            $structure_bool defines whether is a "or" or "and" search for multi-terms.

         2) from other pages, $fsel_anatomy_item_id and $fsel_anatomy_include is passed in
             
         
         =================================================================================
         
  <?/MICOMMENT>

  <?MIBLOCK COND="$(OR,$(XST,$fsel_processed_selected_structures),$(XST,$fsel_anatomy_item_id))">

     <?MISQL COND=$(EC,$debug_timing,t) SQL="
        execute function get_time()">
        <br>... $1 Anatomy section start  ... <br>
     <?/MISQL>

     <?MIBLOCK  COND="$(XST,$fsel_processed_selected_structures)">     

       <?MICOMMENT> ---------------------------------------------------------------
             -- use xpatselectanatverify.apg to retrieve vector list of anatomy zdb
             -- ids $xpanatv_anatomy_zdb_id_list, as well as boolean value
             -- $xpanatv_anatomy_error_occured.
             ---------------------------------------------------------------------
       <?/MICOMMENT>
       <?MISQL SQL="select WebExplode(object,'xpanatv_processed_selected_structures=$(URLENCODE,$fsel_processed_selected_structures)&xpanatv_anatomy_error_occured=$fsel_anatomy_error_occured&xpanatv_called_from=mutantpage') from webpages  where id = 'aa-xpatselectanatverify.apg';">  $1  <?/MISQL> 
    
       <?MIVAR NAME=fsel_anatomy_error_occured>$xpanatv_anatomy_error_occured<?/MIVAR>  
       <?MIVAR NAME=item_count>$(VECSIZE,$xpanatv_anatomy_zdb_id_list)<?/MIVAR>
  
       <?MIVAR NAME=anatIDs>$(SEPARATE,$xpanatv_anatomy_zdb_id_list,$single_quote$comma$single_quote)<?/MIVAR>
       <?MIVAR>$(SETVAR,$anatIDs,$single_quote$anatIDs$single_quote)<?/MIVAR>

     <?MIELSE>  
       <?MICOMMENT> ----- when an anatomy id is passed in --- <?/MICOMMENT>
       <?MIVAR COND="$(XST,$fsel_anatomy_item_id)" NAME=anatIDs>$single_quote$fsel_anatomy_item_id$single_quote<?/MIVAR>
       <?MIVAR COND="$(NXST,$fsel_anatomy_include)" NAME=include_substructures>unchecked<?/MIVAR>
       <?MIVAR NAME=item_count>1<?/MIVAR>
     <?/MIBLOCK>


     <?MICOMMENT>------------------------------------------------------------
               -- temp table $fishselect_temp_on_anat holds geno zdb ids 
               ------------------------------------------------------------
     <?/MICOMMENT>
     <?MIVAR NAME=$fishselect_temp_on_anat>$(CONCAT,fishselect_temp_on_anat_,$fsel_session_id)<?/MIVAR>
     <?MISQL SQL="
       execute function table_exists('$fishselect_temp_on_anat')">
       <?MISQL COND=$(EC,$1,f) SQL="
         create temp table $fishselect_temp_on_anat (
             g_zdb_id	 	varchar(50)
         ) with NO LOG;">
       <?/MISQL>
     <?/MISQL>

     <?MICOMMENT>------------------------------------------------------------
               -- temp table $fishselect_temp_on_anat_junior holds geno zdb id
               -- and anatomy zdb id pairs 
               ------------------------------------------------------------
     <?/MICOMMENT>

     <?MIVAR NAME=$fishselect_temp_on_anat_junior>$(CONCAT,fishselect_temp_on_anat_junior_,$fsel_session_id)<?/MIVAR>    
     <?MISQL SQL="
        execute function table_exists('$fishselect_temp_on_anat_junior')">
        <?MISQL COND=$(EC,$1,f) SQL="
           create temp table $fishselect_temp_on_anat_junior (
             junior_g_zdb_id 		varchar(50),
             junior_anat_zdb_id         varchar(50)
            ) with NO LOG;">
        <?/MISQL>
     <?/MISQL>

     <?MICOMMENT> -------------------------------------------------------------
             -- get genotypes directly related to the anatomy terms
             ---------------------------------------------------------------------
     <?/MICOMMENT>
     <?MISQL SQL="
	insert into $fishselect_temp_on_anat_junior(junior_g_zdb_id, junior_anat_zdb_id)
	     select genox_geno_zdb_id, apato_entity_a_zdb_id
	       from genotype_experiment, atomic_phenotype 
              where genox_zdb_id = apato_genox_zdb_id
                and apato_entity_a_zdb_id in ($anatIDs);">
     <?/MISQL>
     <?MISQL SQL="
	insert into $fishselect_temp_on_anat_junior(junior_g_zdb_id, junior_anat_zdb_id)
	     select genox_geno_zdb_id, apato_entity_b_zdb_id
	       from genotype_experiment, atomic_phenotype 
              where genox_zdb_id = apato_genox_zdb_id
                and apato_entity_b_zdb_id in ($anatIDs);">
     <?/MISQL>    

     <?MICOMMENT> -------------------------------------------------------------
             -- if include substructure
             ---------------------------------------------------------------------
     <?/MICOMMENT>   
     <?MIBLOCK COND="$(AND,$(XST,$include_substructures),$(NE,$include_substructures,),$(NE,$include_substructures,unchecked))">  

       <?MISQL SQL="
	insert into $fishselect_temp_on_anat_junior(junior_g_zdb_id, junior_anat_zdb_id)
	     select genox_geno_zdb_id, allanatcon_container_zdb_id
	       from genotype_experiment, atomic_phenotype, all_anatomy_contains
              where genox_zdb_id = apato_genox_zdb_id
                and apato_entity_a_zdb_id = allanatcon_contained_zdb_id
                and allanatcon_container_zdb_id in ($anatIDs);">
       <?/MISQL>
       <?MISQL SQL="
	insert into $fishselect_temp_on_anat_junior(junior_g_zdb_id, junior_anat_zdb_id)
	     select genox_geno_zdb_id, allanatcon_container_zdb_id
	       from genotype_experiment, atomic_phenotype, all_anatomy_contains
              where genox_zdb_id = apato_genox_zdb_id
                and apato_entity_b_zdb_id = allanatcon_contained_zdb_id
                and allanatcon_container_zdb_id in ($anatIDs);">
       <?/MISQL>    <?MICOMMENT>-- end of if include substructures --<?/MICOMMENT>

    <?/MIBLOCK> 

    <?MICOMMENT> -------------------------------------------------------------
             -- "and" search vs. "or" search 
             ---------------------------------------------------------------------
    <?/MICOMMENT>  
    <?MIBLOCK COND="$(AND,$(XST,$structure_bool),$(EC,$structure_bool,and))">

       <?MISQL SQL="  
     	 insert into $fishselect_temp_on_anat (g_zdb_id)
              select junior_g_zdb_id
                from $fishselect_temp_on_anat_junior
            group by junior_g_zdb_id
              having count (distinct junior_anat_zdb_id) = $item_count
               ;">
       <?/MISQL>
    <?MIELSE>
       <?MISQL SQL="  
     	 insert into $fishselect_temp_on_anat (g_zdb_id)
              select distinct junior_g_zdb_id  
                from $fishselect_temp_on_anat_junior;">
       <?/MISQL>   
    <?/MIBLOCK>


    <?MICOMMENT> ------- Clean up temp table---------------<?/MICOMMENT> 
    <?MISQL SQL="delete from $fishselect_temp_on_anat_junior;"><?/MISQL>

     <?MICOMMENT> ------- Define constraints for final SQL ---------------<?/MICOMMENT> 
    <?MIVAR NAME=$moreConstraint> and exists (select 'x' from $fishselect_temp_on_anat where geno_zdb_id = g_zdb_id)
    <?/MIVAR>
    <?MIVAR>$(SETVAR,$constraint,$(CONCAT,$constraint,$moreConstraint))<?/MIVAR>


    <?MISQL COND=$(EC,$debug_timing,t) SQL="
      execute function get_time()">
      <br>... $1 Anatomy section end   ... <br>
     <?/MISQL>
 
  <?/MIBLOCK>  <?MICOMMENT>--end of $fsel_processed_selected_structures existance check --
         ===== 
         =====               end   Anatomy search 
         ==================================================================================
  <?/MICOMMENT>


<?MICOMMENT> ====================================================== 
           ===   populate search result table 
           ==============================================================  
<?/MICOMMENT>

<?MIBLOCK COND="$(AND,$(NXST,$pubId),$(NXST,$fsel_cnstrct_id),$(NXST,$fsel_marker_id))">
  <?MIBLOCK COND="$(XST,$fsel_inputname)">
    <?MIVAR NAME=$sqlStr>insert into $fishselect_temp_match 
                       (fmatch_zdb_id, fmatch_order, fmatch_precedence, fmatch_matchtext, fmatch_matchtype)
                     select $target_cols
                       from $target_tables
                       $constraint ;
    <?/MIVAR>
  <?MIELSE>
    <?MIVAR NAME=$sqlStr>insert into $fishselect_temp_match 
                       (fmatch_zdb_id, fmatch_order, fmatch_precedence, fmatch_matchtext, fmatch_matchtype)
                     select $target_cols
                       from $target_tables
                       $constraint ;
    <?/MIVAR>
  <?/MIBLOCK>
<?MIELSE COND="$(AND,$(XST,$pubId),$(NXST,$fsel_cnstrct_id),$(NXST,$fsel_marker_id))">
<?MICOMMENT> ============= calling from pub page ============= <?/MICOMMENT>
  <?MIVAR NAME=$sqlStr>insert into $fishselect_temp_match 
                       (fmatch_zdb_id, fmatch_order, fmatch_precedence, fmatch_matchtext, fmatch_matchtype)
                     select $target_cols
                       from genotype,record_attribution,publication
                       where zdb_id = '$pubId'
                         and recattrib_source_zdb_id = zdb_id
                         and recattrib_data_zdb_id = geno_zdb_id;
  <?/MIVAR>
  
<?MIELSE COND="$(AND,$(NXST,$pubId),$(XST,$fsel_cnstrct_id))">
<?MICOMMENT> ============= calling from construct view page ============= <?/MICOMMENT> 
  <?MIVAR NAME=$sqlStr>insert into $fishselect_temp_match 
                       (fmatch_zdb_id, fmatch_order, fmatch_precedence, fmatch_matchtext, fmatch_matchtype)
                     select genofeat_geno_zdb_id,'','','',''
                       from genotype_feature,feature_marker_relationship
                       where fmrel_mrkr_zdb_id = '$fsel_cnstrct_id'
                         and genofeat_feature_zdb_id = fmrel_ftr_zdb_id;
  <?/MIVAR>

<?MIELSE COND="$(AND,$(NXST,$pubId),$(XST,$fsel_marker_id))">
<?MICOMMENT> ============= calling from marker page ============= <?/MICOMMENT> 
  <?MIVAR NAME=$sqlStr1>insert into $fishselect_temp_match 
                       (fmatch_zdb_id, fmatch_order, fmatch_precedence, fmatch_matchtext, fmatch_matchtype)
                     select $target_cols
                         from genotype,genotype_feature,feature_marker_relationship 
                        where geno_zdb_id = genofeat_geno_zdb_id
                          and genofeat_feature_zdb_id = fmrel_ftr_zdb_id 
                          and fmrel_mrkr_zdb_id = '$fsel_marker_id';
  <?/MIVAR>
  
  <?MIVAR NAME=$sqlStr2>insert into $fishselect_temp_match 
                       (fmatch_zdb_id, fmatch_order, fmatch_precedence, fmatch_matchtext, fmatch_matchtype)
                       select $target_cols
                         from genotype,genotype_feature,feature,mapped_deletion
                        where not exists (select 'x' from $fishselect_temp_match where geno_zdb_id = fmatch_zdb_id)
                          and geno_zdb_id = genofeat_geno_zdb_id
                          and genofeat_feature_zdb_id = feature_zdb_id
                          and feature_name = allele
                          and present_t = 'f'
                          and marker_id = '$fsel_marker_id';
  <?/MIVAR>  
<?/MIBLOCK>


    <?MICOMMENT> ============= execute the SQL for searching  ============= <?/MICOMMENT>
    <?MIBLOCK COND="$(NXST,$fsel_marker_id)">      
      <?MISQL SQL=$sqlStr><?/MISQL>      
    <?MIELSE>
      <?MISQL SQL=$sqlStr1><?/MISQL>
      <?MISQL SQL=$sqlStr2><?/MISQL>
    <?/MIBLOCK>

<?MISQL COND=$(EC,$debug_timing,t) SQL="
    execute function get_time()">
    <br>... $1 Search end, Display results start ... <br>
<?/MISQL>

  <?MICOMMENT> =========================================================================
          =======    Display Search Reuslts 
          ================================================================================    
  <?/MICOMMENT>
  <?MICOMMENT> ====== total number of distinct Search Results ===== <?/MICOMMENT>
  <?MISQL SQL="select distinct fmatch_zdb_id from $fishselect_temp_match;">
  <?/MISQL>
  <?MIVAR NAME=$num_recs>$MI_ROWCOUNT<?/MIVAR>

  <?MICOMMENT> ================================================
               ===   display  Title Bar
               ================================================
  <?/MICOMMENT>
    <?MIBLOCK COND="$(XST,$pubId)">
      <table class="searchresults">
 	<tr> 
 	 <td align=center> 
	 <?MIVAR>
	  <font size="+1">Mutant / Transgenic Lines (<b>$num_recs</b> $(IF,$(<,$num_recs,2),record,records))
	  </font>
	 <?/MIVAR>
	 </td>
	 <td width=20% align=center>	 
	   <!-- Insert a form with one button. Label button Your Input Welcome -->
	   <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
	 </td>
        </tr>
      </table>

    <?MIELSE>  
      <table class="searchresults">
	<tr>
	  <td width=20%>&nbsp;</td>
	  <td width=60% align=center>
            &nbsp;<br/>
	    <?MIVAR>
	      <font size="+1">Mutant / Transgenic Lines Search Results (<b>$num_recs</b> $(IF,$(<,$num_recs,2),record found,records found))
	      </font>
	    <?/MIVAR>
	  </td>
	  <td width=20% align=center>
	    <a href=#modify>Modify Search</a>

	  <!-- Insert a form with one button. Label button Your Input Welcome -->
	    <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
	  </td>
	</tr>
      </table>
   <?/MIBLOCK>

    <?MIVAR name=$row_color>#FFFFFF<?/MIVAR>

    <?MIVAR NAME=$rowNUM>$BEGIN<?/MIVAR>

    <?MIVAR NAME=$curviewer><?/MIVAR>

  <?MIVAR NAME=fsel_rec_feature_name><?/MIVAR>
  <?MIVAR NAME=fsel_rec_feature_id><?/MIVAR>
  <?MIVAR NAME=fsel_rec_feature_type><?/MIVAR>
  <?MIVAR NAME=rec_counter>0<?/MIVAR>
  <?MIVAR NAME=anat_short_lists><?/MIVAR>
  <?MIVAR NAME=anat_long_lists><?/MIVAR>
  <?MIVAR NAME=anat_left_arrows><?/MIVAR>
  <?MIVAR NAME=anat_right_arrows><?/MIVAR>
  <?MIVAR NAME=anat_longlist_lens><?/MIVAR>

 <?MIBLOCK COND="$(XST,$fsel_inputname)">
    <?MIVAR NAME=fsel_addToList>f<?/MIVAR>
    <?MIVAR NAME=fsel_unique_list><?/MIVAR>   

    <?MIVAR NAME=$fishselect_temp_match_unique>$(CONCAT,fishselect_temp_match_unique_,$fsel_session_id)<?/MIVAR>

    <?MISQL SQL="
      execute function table_exists('$fishselect_temp_match_unique')">
      <?MISQL COND=$(EC,$1,f) SQL="
	create temp table $fishselect_temp_match_unique (
	  fmatch_zdb_id_u varchar(50),
	  fmatch_order_u varchar(100),
	  fmatch_precedence_u varchar(50),
	  fmatch_matchtext_u varchar(255),
	  fmatch_matchtype_u varchar(80)
	) with NO LOG;">
      <?/MISQL>
    <?/MISQL>
  
  <?MISQL SQL="select distinct fmatch_zdb_id,fmatch_order,fmatch_precedence from $fishselect_temp_match order by fmatch_order,fmatch_precedence;">
    <?MIVAR>$(SETVAR,$fsel_addToList,t)<?/MIVAR>
    <?MIBLOCK INDEX=$fsel_unique_id FOREACH=$fsel_unique_list>
      <?MIBLOCK COND="$(EC,$1,$fsel_unique_id)">
        <?MIVAR>$(SETVAR,$fsel_addToList,f)<?/MIVAR>
      <?/MIBLOCK>
    <?/MIBLOCK>
    
    <?MIBLOCK COND="$(EC,$fsel_addToList,t)">
      <?MISQL SQL="select first 1 *
	           from $fishselect_temp_match
	           where fmatch_zdb_id = '$1'
	           order by fmatch_order,fmatch_precedence;">    
          <?MIVAR NAME=$genotypeid_u>$1<?/MIVAR>
          <?MIVAR NAME=$order_u>$2<?/MIVAR>
          <?MIVAR NAME=$pref_u>$3<?/MIVAR>
          <?MIVAR NAME=$text_u>$4<?/MIVAR>
          <?MIVAR NAME=$type_u>$5<?/MIVAR>
      <?/MISQL>
      
      <?MIVAR>$(VECAPPEND,$fsel_unique_list,$genotypeid_u)<?/MIVAR>
      
      <?MIVAR>$(SETVAR,$text_u,$(REPLACE,$text_u,',''))<?/MIVAR>
      
      <?MISQL SQL="insert into $fishselect_temp_match_unique (fmatch_zdb_id_u,fmatch_order_u,fmatch_precedence_u,fmatch_matchtext_u,fmatch_matchtype_u)
                   values ('$genotypeid_u','$order_u','$pref_u','$text_u','$type_u');">
      <?/MISQL>
    <?/MIBLOCK>
  <?/MISQL>
  
  <?MIVAR>$(UNSETVAR,$fsel_unique_list)<?/MIVAR>
 <?/MIBLOCK>

  <?MICOMMENT> =======================================================
               ===   display Records, one per row
               =======================================================
  <?/MICOMMENT>   
<table class="searchresults">

  <?MIVAR NAME=displayTitle>f<?/MIVAR>

  <?MIBLOCK COND="$(XST,$fsel_inputname)">
  
    <?MIVAR NAME=fsel_displaySQL>select distinct fmatch_zdb_id_u,fmatch_order_u,fmatch_precedence_u,fmatch_matchtext_u,fmatch_matchtype_u from $fishselect_temp_match_unique order by fmatch_order_u,fmatch_precedence_u<?/MIVAR>
  <?MIELSE>
    <?MIVAR NAME=fsel_displaySQL>select distinct fmatch_zdb_id,fmatch_order,fmatch_precedence,fmatch_matchtext,fmatch_matchtype from $fishselect_temp_match order by fmatch_order,fmatch_precedence<?/MIVAR>
  <?/MIBLOCK>
  
  <?MISQL WINSTART=$BEGIN WINSIZE=$WINSIZE SQL="$fsel_displaySQL ;">

    <?MIVAR>$(SETVAR,$rec_counter,$(+,$rec_counter,1))<?/MIVAR>
    <?MIVAR NAME=$genotypeid>$1<?/MIVAR>
    <?MIVAR NAME=$matchedText>$4<?/MIVAR>
    <?MIVAR NAME=$matchedType>$5<?/MIVAR>
    
    <?MIBLOCK COND="$(EC,$displayTitle,f)">
    
      <?MICOMMENT> ========== determine column width =============== 
      <?/MICOMMENT>       
      <?MIVAR NAME=$widthSpace>1%<?/MIVAR>   
      <?MIVAR NAME=$widthAllele>19%<?/MIVAR>
      <?MIVAR NAME=$widthPZ>18%<?/MIVAR>      
      <?MIVAR NAME=$widthType>19%<?/MIVAR>
      <?MIVAR NAME=$widthGene>18%<?/MIVAR>
      <?MIVAR NAME=$widthLG>24%<?/MIVAR>         
    
      <?MIBLOCK COND="$(XST,$fsel_inputname)">  
        <?MIVAR NAME=$widthGeno>21%<?/MIVAR>
        <?MIVAR NAME=$widthPheno>11%<?/MIVAR>        
        <?MIVAR NAME=$widthInnerTable>49%<?/MIVAR>
        <?MIVAR NAME=$widthMatching>18%<?/MIVAR>            
           
      <?MIELSE>
        <?MIVAR NAME=$widthGeno>25%<?/MIVAR>
        <?MIVAR NAME=$widthPheno>15%<?/MIVAR> 
        <?MIVAR NAME=$widthInnerTable>59%<?/MIVAR> 
        <?MIVAR NAME=$widthMatching>0%<?/MIVAR>
         
      <?/MIBLOCK>

    
      <?MICOMMENT> ========== display heading =============== <?/MICOMMENT> 
      <TR>  
        <?MIVAR><th  width=$widthGeno><b>Genotype(Background)</b></th><?/MIVAR>   
        <?MIVAR><th width=$widthSpace%>&nbsp;</th><?/MIVAR>
        <?MIVAR><th  width=$widthPheno><b>Phenotype</b></th><?/MIVAR>   
           
        <?MIVAR><th  width=$widthInnerTable><?/MIVAR>
          <table class="searchresults"><tr>
            <?MIVAR><th  width=$widthAllele><b>Allele</b></th><?/MIVAR>
            <?MIVAR><th  width=$widthPZ><b>Parental Zygosity</b></th><?/MIVAR>             
            <?MIVAR><th  width=$widthType><b>Type</b></th><?/MIVAR> 
            <?MIVAR><th width=$widthSpace%>&nbsp;</th><?/MIVAR>                   
            <?MIVAR><th  width=$widthGene><b>Affected Gene(s)</b></th><?/MIVAR>
            <?MIVAR><th width=$widthSpace%>&nbsp;</th><?/MIVAR>     
            <?MIVAR><th  width=$widthLG><b>&nbsp;LG</b></th><?/MIVAR>
          </tr></table>          
        </th>

        <?MIBLOCK COND="$(XST,$fsel_inputname)">
	  <?MIVAR><th  width=$widthMatching><b>Matching Text</b></th><?/MIVAR>
        <?/MIBLOCK>           
      </TR>
      
    <?/MIBLOCK> <?MICOMMENT>===== end of heading display ===<?/MICOMMENT>
    
    <?MIVAR>$(SETVAR,$displayTitle,t)<?/MIVAR>   

    <?MIBLOCK COND="$(EC,$row_color,$highlight)">   
      <?MIVAR>$(SETVAR,$row_color,#FFFFFF)<?/MIVAR>
    <?MIELSE>
      <?MIVAR>$(SETVAR,$row_color,$highlight)<?/MIVAR>
    <?/MIBLOCK>

    <?MICOMMENT> start new row and column <?/MICOMMENT>
    <TR bgcolor="<?MIVAR>$row_color<?/MIVAR>"> 
    
    <?MICOMMENT> ============== Genotype ============= <?/MICOMMENT>
           
      <?MISQL SQL="
	select get_geno_name_with_bg_html_link(geno_zdb_id)
 	  from genotype
         where geno_zdb_id = '$genotypeid'">
         <?MIVAR NAME=fsel_geno_html>$1<?/MIVAR> 
      <?/MISQL>
           
      <?MIVAR><TD align=left width=$widthGeno>$fsel_geno_html</TD><?/MIVAR>  

      <?MIVAR><th width=$widthSpace%>&nbsp;</th><?/MIVAR>

      <?MICOMMENT> ================ Phenotype ========== <?/MICOMMENT>
      <?MIVAR><TD align=left width=$widthPheno><?/MIVAR>
        <?MIVAR NAME=fsel_img_count>0<?/MIVAR>
        <?MISQL SQL="select distinct apatofig_fig_zdb_id
                       from apato_figure,atomic_phenotype,genotype_experiment
                      where apatofig_apato_zdb_id = apato_zdb_id
                        and apato_genox_zdb_id = genox_zdb_id
                        and genox_geno_zdb_id = '$genotypeid'
                   group by apatofig_fig_zdb_id;">
           <?MIVAR NAME=fsel_fig_id>$1<?/MIVAR>
           <?MISQL SQL="select count(img_zdb_id) from image where img_fig_zdb_id = '$fsel_fig_id';">
             <?MIVAR NAME=fsel_img_count_per_fig>$1<?/MIVAR>
           <?/MISQL> 
           <?MIVAR>$(SETVAR,$fsel_img_count,$(+,$fsel_img_count,$fsel_img_count_per_fig))<?/MIVAR>
      <?/MISQL>  
      <?MIVAR NAME=fsel_fig_count>$MI_ROWCOUNT<?/MIVAR>
      <?MIBLOCK COND="$(>,$fsel_fig_count,0)"> 
          <?MIVAR NAME=fsel_anat_list><?/MIVAR>
               <?MISQL SQL="select distinct anatitem_name,anatitem_name_order 
                 from anatomy_item,atomic_phenotype,genotype_experiment 
                 where apato_genox_zdb_id = genox_zdb_id 
                   and (apato_entity_a_zdb_id = anatitem_zdb_id 
		    or apato_entity_b_zdb_id = anatitem_zdb_id)
                   and genox_geno_zdb_id = '$genotypeid'
       	           order by anatitem_name_order;">  
                 <?MIVAR>$(SETVAR,$fsel_anat_list[$MI_CURRENTROW],$1)<?/MIVAR>
               <?/MISQL> 
        <?MIVAR NAME=fsel_separate_anat_list SEPARATE=", ">$fsel_anat_list<?/MIVAR>
        <?MIBLOCK COND="$(=,$fsel_fig_count,1)">
          <?MIVAR><span title="Affected Anatomy: $fsel_separate_anat_list"><A HREF='/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-fxfigureview.apg&OID=$fsel_fig_id'>$fsel_fig_count figure(s) <?/MIVAR><?MIVAR>$(IF,$(>,$fsel_img_count,0),<img src="/images/camera_icon.gif" border="0" alt="with image">,)</A></span><?/MIVAR>
        <?MIELSE>
          <?MIVAR><span title="Affected Anatomy: $fsel_separate_anat_list"><A HREF='/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?MIval=aa-pheno_summary.apg&OID=$genotypeid'>$fsel_fig_count figure(s) <?/MIVAR><?MIVAR>$(IF,$(>,$fsel_img_count,0),<img src="/images/camera_icon.gif" border="0" alt="with image">,)</A></span><?/MIVAR>
        <?/MIBLOCK>
        <?MIVAR>$(UNSETVAR,$fsel_separate_anat_list)<?/MIVAR>
        <?MIVAR>$(UNSETVAR,$fsel_anat_list)<?/MIVAR>
      <?/MIBLOCK>
      </TD>
     
      <?MICOMMENT> ====== Innner table: Allele, Parental Zygosity, Type,  Affected Gene(s), LG ========== <?/MICOMMENT>

      <?MIVAR><TD align=left width=$widthInnerTable><?/MIVAR>
        <table width=100% border=0 cellspacing=0>
          <?MISQL SQL="select distinct feature_name,feature_abbrev_order,feature_zdb_id,lower(ftrtype_type_display),feature_abbrev,get_genofeat_mp_zyg_html_display(genofeat_zdb_id) 
     	               from feature,genotype_feature,feature_type
     	               where feature_zdb_id = genofeat_feature_zdb_id
     	                 and genofeat_geno_zdb_id = '$genotypeid'
     	                 and feature_type = ftrtype_name
     	                 order by feature_abbrev_order;">
     	    <tr bgcolor="<?MIVAR>$row_color<?/MIVAR>">
              <?MIVAR>$(SETVAR,$fsel_rec_feature_name,$1)<?/MIVAR>
              <?MIVAR>$(SETVAR,$fsel_rec_feature_id,$3)<?/MIVAR>
              <?MIVAR>$(SETVAR,$fsel_rec_feature_type,$4)<?/MIVAR>
              <?MIVAR>$(SETVAR,$fsel_rec_feature_abbrev,$5)<?/MIVAR>
              <?MIVAR>$(SETVAR,$fsel_rec_parentalzygosity,$6)<?/MIVAR>
                 
              <?MICOMMENT> ============== Allele ============= <?/MICOMMENT>
              <?MIVAR NAME=fsel_rec_fmrel><?/MIVAR>
              <?MIVAR NAME=fsel_is_allele_of>is allele of<?/MIVAR>
              <?MIVAR NAME=fsel_is_allele_of_flag>f<?/MIVAR>
              <?MISQL SQL="select fmrel_type  
                             from feature, feature_marker_relationship
	                    where feature_zdb_id = fmrel_ftr_zdb_id
	                      and feature_name = '$fsel_rec_feature_name';">
	         <?MIVAR>$(SETVAR,$fsel_rec_fmrel,$1)<?/MIVAR>
	         <?MIBLOCK COND="$(EC,$fsel_rec_fmrel,$fsel_is_allele_of)">
	           <?MIVAR>$(SETVAR,$fsel_is_allele_of_flag,t)<?/MIVAR>
	         <?/MIBLOCK>
              <?/MISQL>              
             
              <?MIVAR><TD align=left width=$widthAllele> 
                               
                <?MIBLOCK COND="$(EC,$fsel_is_allele_of_flag,t)">               
                  <?MIVAR>$(IF,$(OR,$(EC,$(SUBSTR,$fsel_rec_feature_abbrev,1,3),un_),$(>,$(POSITION,$fsel_rec_feature_abbrev,unspecified),0)),unspecified,$fsel_rec_feature_abbrev)<?/MIVAR>
                <?MIELSE>
                  &nbsp;
                <?/MIBLOCK>
              </TD><?/MIVAR>
              
              <?MICOMMENT> ============== Parental Zygosity ============= <?/MICOMMENT>
              <?MIVAR><TD align=left width=$widthPZ>   
                $fsel_rec_parentalzygosity
              </TD><?/MIVAR>
           
              <?MICOMMENT> ============== Type ============= <?/MICOMMENT>
              <?MIVAR><TD align=left width=$widthType>$fsel_rec_feature_type
              </TD><?/MIVAR>     
 
              <?MIVAR><TD width=$widthSpace%>&nbsp;</TD><?/MIVAR>  
 
              <?MICOMMENT> ============== Affected Gene(s) ============= <?/MICOMMENT>
              <?MIVAR><TD align=left width=$widthGene><?/MIVAR>                       
              <?MIVAR NAME=fsel_affectedGenes><?/MIVAR>
              <?MISQL SQL="
	        select get_mrkr_abbrev_html_link(fmrel_mrkr_zdb_id)
                  from feature_marker_relationship
     	         where fmrel_ftr_zdb_id = '$fsel_rec_feature_id'
                   and fmrel_type = 'is allele of'
                UNION
                select get_mrkr_abbrev_html_link(marker_id)
          	  from mapped_deletion
         	 where allele = '$fsel_rec_feature_name'
		   and marker_id[1,8] = 'ZDB-GENE'
		   and present_t = 'f';">  
		<?MIBLOCK COND="$(=,$MI_CURRENTROW,1)">
	          <?MIVAR>$(SETVAR,$fsel_affectedGenes,$1)<?/MIVAR>
	        <?MIELSE>
       		  <?MIVAR>$(SETVAR,$fsel_affectedGenes,$(CONCAT,$fsel_affectedGenes,$comma $1))<?/MIVAR>
    	        <?/MIBLOCK>
              <?/MISQL>
              <?MIVAR>$fsel_affectedGenes<?/MIVAR>
              </TD>           
             
              <?MIVAR><TD width=$widthSpace%>&nbsp;</TD><?/MIVAR>
   
              <?MICOMMENT> ============== LG ============= <?/MICOMMENT>
              <?MIVAR><TD align=left width=$widthLG class="anatomy"><?/MIVAR>
              <?MISQL NAME=$slimChrString 
                SQL="select WebExplode(object,'&mapdetails_mode=mini_slim&oID=$fsel_rec_feature_id') 
                       from webPages where ID='aa-mappingdetail.apg';">
                $1
              <?/MISQL>    
        
              <?MIVAR NAME=$posOfNone>$(POSITION,$slimChrString,"None")<?/MIVAR>  
              <?MIVAR>$(IF,$(=,$posOfNone,0),$slimChrString,&nbsp;)<?/MIVAR> 

              </TD>
            <tr>
          <?/MISQL>
          
        </table></TD>
           
           <?MICOMMENT> ======== display Matching Text if there is input in Name textfield ====== <?/MICOMMENT>
           <?MIBLOCK COND="$(XST,$fsel_inputname)">
	     <?MIVAR><TD align=left width=$widthMatching><?/MIVAR>
	      <?MIVAR NAME=start_pos>$(POSITION,$(LOWER,$matchedText),$fsel_inputname)<?/MIVAR>
	      <?MIVAR NAME=str_length>$(STRLEN,$fsel_inputname)<?/MIVAR>

	      <?MIBLOCK COND="$(EC,$matchedType,Current name)">
	        <?MIVAR name=matchedTypeDisplay>Gene name<?/MIVAR>
	      <?MIELSE COND="$(EC,$matchedType,Current symbol)"> 
	        <?MIVAR name=matchedTypeDisplay>Gene symbol<?/MIVAR>
	      <?MIELSE COND="$(EC,$matchedType,Previous name)">
	        <?MIVAR name=matchedTypeDisplay>Gene alias<?/MIVAR>  
	      <?MIELSE>
	        <?MIVAR name=matchedTypeDisplay>$matchedType<?/MIVAR>
	      <?/MIBLOCK>
	      
	      <?MIVAR>$matchedTypeDisplay: $(SUBSTR,$matchedText,1,$(-,$start_pos,1))<b>$(SUBSTR,$matchedText,$start_pos,$str_length)</b>$(SUBSTR,$matchedText,$(+,$start_pos,$str_length))<?/MIVAR>	
             </TD>   
	          
           <?/MIBLOCK>           
         </TR>
         
 <?/MISQL>

 </table>   <?MICOMMENT> ==  end of Display Search Results 
    ====
    =========================================================================================
  <?/MICOMMENT>  


  <?MICOMMENT> ==================================================
          ====         Display  walking window
 	  =================================================================
  <?/MICOMMENT>
    <Center>
	<?MIVAR name=selector>MIval=aa-fishselect.apg&WINSIZE=$WINSIZE<?/MIVAR>
        <?MIVAR name=UserInput><?/MIVAR>   
	<?MIBLOCK COND="$(XST,$pubId)">
	  <?MIVAR name=UserInput>$UserInput&pubId=$pubId<?/MIVAR>
	<?MIELSE>
	  <?MIVAR name=$UserInput>$UserInput&fishsel_calledBySelf=true<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$lg)>$UserInput&lg=$lg<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$compare)>$UserInput&compare=$compare<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$fsel_inputname)>$UserInput&fsel_inputname=$fsel_inputname<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$fsel_anatomy_item_id)>$UserInput&fsel_anatomy_item_id=$fsel_anatomy_item_id<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$fsel_anatomy_include)>$UserInput&fsel_anatomy_include=$fsel_anatomy_include<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$fsel_cnstrct_id)>$UserInput&fsel_cnstrct_id=$fsel_cnstrct_id<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$pubId)>$UserInput&pubId=$pubId<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$mutagen)>$UserInput&mutagen=$mutagen<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$chrom_change)>$UserInput&chrom_change=$chrom_change<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$TA_selected_structures)>$UserInput&TA_selected_structures=$(URLENCODE,$TA_selected_structures)<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$include_substructures)>$UserInput&include_substructures=$include_substructures<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$structure_bool)>$UserInput&structure_bool=$structure_bool<?/MIVAR>
	  <?MIVAR name=UserInput COND=$(XST,$fselFilterValue)>$UserInput&fselFilterValue=$fselFilterValue<?/MIVAR>
          <?MIVAR name=$UserInput COND=$(XST,$return_rec)>$UserInput&return_rec=$return_rec<?/MIVAR> 
          <?MIVAR name=UserInput COND=$(XST,$query_results)>$UserInput&query_results=$query_results<?/MIVAR> 	  
	  <?MIVAR name=UserInput COND=$(XST,$fsel_processed_selected_structures)>$UserInput&fsel_processed_selected_structures=$(URLENCODE,$fsel_processed_selected_structures)<?/MIVAR>
	  
	<?/MIBLOCK>      	
	
    <TABLE width="70%" border="0">
      <TR>
        <TD width="45%" align=right valign=top>&nbsp;
          <?MICOMMENT> Return to the previous set of Rows <?/MICOMMENT>
	  <?MIBLOCK COND="$(>,$BEGIN,1)">
	    <?MIVAR>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$(-,$BEGIN,$WINSIZE)&BEGIN=$BEGIN&$selector$UserInput">Prev</A>&nbsp;&nbsp;&nbsp;&nbsp;<br>
	      <?MICOMMENT>
                If current not First Page, create link to first page. 
              <?/MICOMMENT>
	      <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=1&BEGIN=1&$selector$UserInput">First Page</A>

	    <?/MIVAR>
	  <?/MIBLOCK>
        </TD>

      <?MICOMMENT> Calculate 3 pages before and 3 pages after current page. <?/MICOMMENT>
      <?MIVAR name=$CURRENT>$(FIX,$(+,$(/,$BEGIN,$WINSIZE),1))<?/MIVAR>
      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,3)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,3))"> $(-,$CURRENT,3)</A> <?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,2)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,2))"> $(-,$CURRENT,2)</A><?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>=,$(-,$BEGIN,$(*,$WINSIZE,1)),0)">
	<TD valign=top>
	  <?MIVAR><A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(-,$BEGIN,$(*,$WINSIZE,1))"> $(-,$CURRENT,1)</A><?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIBLOCK COND="$(>,$num_recs,$WINSIZE)">
	<TD align=center valign=top>
	  <?MIVAR> $CURRENT <?/MIVAR>
	</TD>
      <?/MIBLOCK>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,1)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$END"> $(+,$CURRENT,1)</A>
	</TD>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,2)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,2))"> $(+,$CURRENT,2)</A>
	</TD>
      <?/MIVAR>

      <?MIVAR COND=$(<=,$(+,$BEGIN,$(*,$WINSIZE,3)),$num_recs)>
	<TD valign=top>
	  <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?$selector$UserInput&START=$(+,$BEGIN,$(*,$WINSIZE,3))"> $(+,$CURRENT,3)</A>
	</TD>
      <?/MIVAR>

        <TD width="45%" align=left valign=top>&nbsp;

	<?MICOMMENT> Get the next set of Rows <?/MICOMMENT>
	<?MIBLOCK COND="$(<=,$(+,$BEGIN,$WINSIZE),$num_recs)">
	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$END&BEGIN=$BEGIN&$selector$UserInput">Next</A><br>
	  <?/MIVAR>

	  <?MICOMMENT> Calculate last page <?/MICOMMENT>
	  <?MIVAR name=$START COND="$(=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(-,$(/,$num_recs,$WINSIZE),1),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR name=$START COND="$(!=,$(MOD,$num_recs,$WINSIZE),0)">$(+,$(*,$(FIX,$(/,$num_recs,$WINSIZE)),$WINSIZE),1)<?/MIVAR>

	  <?MIVAR>
	    <A HREF="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->?START=$START&$selector$UserInput">Last Page</A>
	  <?/MIVAR>
	<?/MIBLOCK>
        </TD>
      </tr>
    </Table>
    </Center> 
 
  <?MICOMMENT>
    If you get to this point, then the code at least tried to insert records
    into markerselect_temp_marker.  Therefore always do the delete.
  <?/MICOMMENT>

  <?MIVAR>$(UNSETVAR,$rec_counter)<?/MIVAR>
  <?MIVAR>$(UNSETVAR,$anat_short_lists)<?/MIVAR>
  <?MIVAR>$(UNSETVAR,$anat_long_lists)<?/MIVAR>
  <?MIVAR>$(UNSETVAR,$anat_left_arrows)<?/MIVAR>
  <?MIVAR>$(UNSETVAR,$anat_right_arrows)<?/MIVAR>
  <?MIVAR>$(UNSETVAR,$anat_longlist_lens)<?/MIVAR>

  <?MISQL COND="$(XST,$fsel_inputname)" 
          SQL="delete from $fishselect_temp_on_name;">
  <?/MISQL> 

  <?MISQL COND="$(AND,$(XST,$lg),$(NE, $lg, any),$(NE, $lg, 0))" 
          SQL="delete from $fishselect_temp_on_lg;">
  <?/MISQL>   
  
  <?MISQL COND="$(AND,$(XST,$mutagen),$(NE,$mutagen,any))" 
          SQL="delete from $fishselect_temp_on_mutagen;">
  <?/MISQL>     

  <?MISQL COND="$(AND,$(XST,$chrom_change),$(NE, $chrom_change, any))" 
          SQL="delete from $fishselect_temp_on_type;">
  <?/MISQL>  

  <?MISQL COND="$(OR,$(EC,$fselFilterValue,mutOnly),$(EC,$fselFilterValue,TGonly))"
          SQL="delete from $fishselect_temp_on_filter;">
  <?/MISQL>  
  
  
  <?MISQL COND="$(OR,$(XST,$fsel_processed_selected_structures),$(XST,$fsel_anatomy_item_id))" 
          SQL="delete from $fishselect_temp_on_anat;">
  <?/MISQL> 
  
  <?MISQL SQL="
    delete from $fishselect_temp_match;">
  <?/MISQL> 
  
  <?MISQL COND="$(XST,$fsel_inputname)"  SQL="
    delete from $fishselect_temp_match_unique;">
  <?/MISQL>   
    
<?/MIBLOCK> <?MICOMMENT> === end of xst query results 
       ========
       ======================================================================================
 <?/MICOMMENT>

<?MISQL COND=$(EC,$debug_timing,t) SQL="
    execute function get_time()">
    <br>... $1 Result display end, Form display start ... <br>
<?/MISQL>

<?MICOMMENT> ==========================================================================
   ======           Search Form Display  
   ======================================================================================
<?/MICOMMENT>

<?MIBLOCK COND="$(AND,$(NXST,$accession),$(NXST,$pubId))">  

<?MIVAR COND="$(NXST,$mutagen)" NAME=$mutagen>any<?/MIVAR>
<?MIVAR COND="$(NXST,$lg)" NAME=$lg>0<?/MIVAR>
<?MIVAR COND="$(NXST,$chrom_change)" NAME=$chrom_change>any<?/MIVAR>
<?MIVAR NAME=$START>1<?/MIVAR>

   <?MIBLOCK COND="$(NXST,$query_results)">
     <table class=search width=100% border=0 cellspacing=0 cellpadding=1>
       <tr>
	 <td class=titlebar valign=middle>
	   <b>&nbsp;&nbsp;Search for mutant / transgenic lines</b>
	 </td>
   <?MIELSE>
     <table class=search width=100% border=0 cellspacing=0 cellpadding=1>
       <tr>
	 <td class=titlebar>
	   <a name=modify></a>&nbsp;&nbsp;<b>Modify your search</b>
	 </td>
   <?/MIBLOCK>

	 <td class=titlebar align=right>
	   <?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-input_button_generic.apg';">$1<?/MISQL>
	 </td>
       </tr>

<?MICOMMENT>
  =======================================================
  =====  Prepare anatomy suggestion List
  ========================================================
<?/MICOMMENT>

<?MIVAR NAME=fsel_anatList><?/MIVAR>

<?MISQL SQL="
          select anatitem_name, anatitem_name_lower as name_lower_column
      from anatomy_item
       UNION
    select dalias_alias, dalias_alias_lower as name_lower_column
          from data_alias
         where dalias_data_zdb_id[1,9] = 'ZDB-ANAT-'
       order by name_lower_column; ">

        <?MIVAR NAME=fsel_curAnat>"$1"<?/MIVAR>   
        <?MIVAR>$(VECAPPEND,$fsel_anatList,$fsel_curAnat)<?/MIVAR>
<?/MISQL>

<?MIVAR>$(SETVAR,$fsel_anatList,$(SEPARATE,$fsel_anatList,$comma))<?/MIVAR>
<?MIVAR>$(SETVAR,$fsel_anatList,$(SUBSTR,$fsel_anatList,2))<?/MIVAR>

 <?MICOMMENT>
  ================== Form Content ==============================
 <?/MICOMMENT>
<form name="BrowserForm" method=get action="/<!--|WEBDRIVER_PATH_FROM_ROOT|-->">

  <?MIBLOCK COND="$(XST,$fsel_marker_id)">
    <?MISQL SQL="select mrkr_abbrev from marker 
       	          where mrkr_zdb_id = '$fsel_marker_id';">
      <?MIVAR NAME=fsel_inputname>$1<?/MIVAR>
      <?MIVAR NAME=fsel_ori_inputname>$1<?/MIVAR>
    <?/MISQL>
    <?MIVAR NAME=compare>equals<?/MIVAR>
  <?/MIBLOCK>
<?MIVAR COND="$(NXST,$compare)" NAME=$compare>contains<?/MIVAR>

   <tr>
     <td class="halfwidth" ROWSPAN=3>
       <?MIVAR>
       <b>Gene/Allele name</b>&nbsp;
       <select name="compare" onChange='document.BrowserForm.START.value = "";'>
          <option $(IF,$(EC,$compare,contains),selected) value=contains>contains
          <option $(IF,$(EC,$compare,starts),selected) value=starts>begins with
          <option $(IF,$(EC,$compare,equals),selected) value=equals>equals
       </select>    
       
       <input type=text name=fsel_inputname size=18 value="$(IF,$(XST,$fsel_inputname),$fsel_ori_inputname)">
       <?/MIVAR>
     </td>

     <td class="halfwidth">
       <b>LG:</b>

       <SELECT name=lg onChange='document.BrowserForm.START.value = "";'>
	<?MISQL SQL="select distinct lg_name,lg_order from linkage_group order by lg_order"> 
	  <option value="$1" $(IF,$(EC,$lg,$1),SELECTED) >$(IF,$(EC,$1,0),Any,$1)
	<?/MISQL>
       </SELECT>  	 
     </td>
   </tr>

   <tr> 
     <td class="halfwidth">
       <b>Mutagen:</b>
       <select name=mutagen onChange='document.BrowserForm.START.value = "";'>
	  <?MIVAR>
	  <option $(IF,$(OR,$(EC,$mutagen,),$(EC,$mutagen,any)),selected) value="any">Any 
	  <?/MIVAR>       
         <?MISQL SQL="select mutagen_name from mutagen where mutagen_name <> 'not specified'"> 
	   <option value="$1" $(IF,$(EC,$mutagen,$1),selected) >$1
         <?/MISQL>
       </select>
     </td>
   </tr>   
   
<?MIVAR>
  <TR>
   <TD class="halfwidth">
     <!-- add option for complex rearrangement  -->	
     <?MIVAR>
	<b>Mutation Type:</b>
	<select NAME=chrom_change onChange='document.BrowserForm.START.value = "";'>
	  <?MIVAR>
	  <option $(IF,$(OR,$(EC,$chrom_change,),$(EC,$chrom_change,any)),selected) value="any">Any
	  <?/MIVAR>   	
         <?MISQL SQL="select ftrtype_name,ftrtype_type_display from feature_type 
                       where ftrtype_name <> 'REGION'
                         and ftrtype_name <> 'UNSPECIFIED'
                         order by ftrtype_significance"> 
	   <option value="$1" $(IF,$(EC,$chrom_change,$1),selected) >$2
         <?/MISQL>  	         
	</select>
      <?/MIVAR>
    </TD>
  </TR>
<?/MIVAR>

   <tr> 
     <td>&nbsp;
       <input type=hidden NAME="START" value=1>
     </td>
     <td>&nbsp;
       <input type=hidden NAME="query_results" value="exist">
     </td>
   </tr>
     
   <tr> 
     <td class="halfwidth" ROWSPAN=5>

	  <TABLE border=0 bgcolor="#EEEEEE"> 
            <TR>
	      <TD colspan="2">
		<span style="float: left;">
                  <label for="TA_selected_structures" class="multisearchLabel">
		    <b>Affected Anatomy</b>
                  </label>
                </span>
                <span style="float: right;">
                  <label class="accessoryLabel">[Enter one anatomical term per line]</label>
                </span>
	     </TD>
	     </TR>
	     <TR>
	     <TD colspan="2">
		<TEXTAREA cols="46" rows="3" name="TA_selected_structures" id="TA_selected_structures"><?MIVAR COND="$(XST,$TA_selected_structures)">$TA_selected_structures<?/MIVAR></TEXTAREA>
	        <DIV id="autosuggest"><ul></ul></DIV>
                <script>
		  var agt = navigator.userAgent;
                  var is_safari = ((agt.indexOf('Safari')!=-1)&&(agt.indexOf('Mac')!=-1))? 1 : 0 ;
		  if (is_safari == 0 ) 
		  {
		    <?MIVAR>
		    var anatomyList = new Array($fsel_anatList);
		    <?/MIVAR>
		    new AutoSuggest(document.getElementById("TA_selected_structures"),anatomyList);
		  }
                </script>

		<input type="hidden" name="fsel_processed_selected_structures" <?MIVAR COND=$(XST,$fsel_processed_selected_structures)>value=$fsel_processed_selected_structures<?/MIVAR> >		
	      </TD> <?MICOMMENT> end new selected structures textarea <?/MICOMMENT>
            </TR>
            <TR>
	      <TD valign="top">
		<?MICOMMENT>
		  this bit is sneaky, basically, this means that if you're opening the page
		  for the first time and the variable is empty, then create it - but if
		  the page has been submitted and the variable is empty, then it's supposed
		  to be, and we wanna leave it that way.
		<?/MICOMMENT>
	          <input type=checkbox id="fselIncludeSubstructures" name="include_substructures" value="checked" <?MIVAR> $(IF,$(AND,$(XST,$include_substructures),$(EC,$include_substructures,checked)),checked="checked") <?/MIVAR> >  <label for="fselIncludeSubstructures" class="accessoryLabel" >Include substructures</label> 
             </TD>
             <TD>

		  <?MIVAR COND="$(NXST,$structure_bool)" NAME="structure_bool">and<?/MIVAR>
                    <label class="accessoryLabel">Phenotype in: </label> 
                  <br>
		  <input type="radio" id="fselStructureBoolAnd" name="structure_bool" value="and" <?MIVAR>$(IF,$(EC,$structure_bool,and),checked="checked")<?/MIVAR> >
	          <label for="fselStructureBoolAnd" class="accessoryLabel" ><b>Every</b> term entered <br></label>
		  
		  <input type="radio" id="fselStructureBoolOr" name="structure_bool" value="or"  <?MIVAR>$(IF,$(EC,$structure_bool,or),checked="checked")<?/MIVAR> > 
	          <label for="fselStructureBoolOr" class="accessoryLabel" ><b>Any</b> term entered </label>
	      </TD>
	    </TR>
	  </TABLE>
     </td>
     <td class="halfwidth">
     <b>Filters:</b>
     </td>

   </tr>
   
   <tr>
     <td class="halfwidth">
       &nbsp;&nbsp;<input type="radio" id="fselFilter" name="fselFilterValue" value="mutOnly" <?MIVAR>$(IF,$(EC,$fselFilterValue,mutOnly),checked="unchecked")<?/MIVAR> >
       <label for="fselFltr" class="accessoryLabel" >Show only characterized mutations</label>
     </td>
   </tr>
   
   <tr>
     <td class="halfwidth">
       &nbsp;&nbsp;<input type="radio" id="fselFilter" name="fselFilterValue" value="TGonly" <?MIVAR>$(IF,$(EC,$fselFilterValue,TGonly),checked="unchecked")<?/MIVAR> >
       <label for="fselFltr" class="accessoryLabel" >Show only transgenics</label>
     </td>
   </tr>   
   
   <tr>
     <td class="halfwidth">
       &nbsp;&nbsp;<input type="radio" id="fselFilter" name="fselFilterValue" value="all" <?MIVAR>$(IF,$(EC,$fselFilterValue,all),checked="checked")<?/MIVAR> >
       <label for="fselFltr" class="accessoryLabel" >Show all</label>
     </td>
   </tr>      
   
   <tr>
     <td class="halfwidth">
     <?MIVAR><input type="text" name="WINSIZE" size="3" onChange='document.BrowserForm.START.value = "";' $(IF,$(XST,$WINSIZE),value=$WINSIZE,value=20)><?/MIVAR>
     results per page
     <?MIBLOCK COND="$(AND,$(NOT,$(ISNULL,$WINSIZE)),$(XST,$WINSIZE))">
     <?MIVAR> 
        <SCRIPT> 
          document.BrowserForm.WINSIZE.value = "$WINSIZE"         
        </SCRIPT>
      <?/MIVAR> 
     <?/MIBLOCK>       
     </td>
   </tr>    
     

<!-- This next little block executes only if we are using the browser as a
selecto. That is we want user to ultimately CHOOSE a browsed value. All
we have to do at this point is pass the return record along to the fishlister.
-->
<?MIVAR COND="$(XST,$return_rec)">
	<input type=hidden NAME="return_rec" value=$return_rec>
<?/MIVAR>

<input type=hidden name=MIval value=aa-fishselect.apg>
<?MIBLOCK COND="$(XST,$structures)">
  <?MIVAR>
    <input type=hidden name=structures value="$structures">
  <?/MIVAR>
<?/MIBLOCK>
  
  <TR>
   <TD class="submitbar" colspan=2 align="right">
    <input name="fishsel_calledBySelf" type="hidden" value="true">
    <input type=submit name=search value="SEARCH" onClick="form_submit();">
    <input type=button onClick="call_reset();" value="RESET">  </font>
   </TD>
  </TR>

</form>

</table>

<?MISQL COND=$(EC,$debug_timing,t) SQL="
    execute function get_time()">
    <br>... $1 End ... <br>
<?/MISQL>

<?/MIBLOCK> 


<?MISQL SQL="select WebExplode(object,'') from webPages where ID='aa-htmlpagefooter.apg';">$1<?/MISQL>


</html>
