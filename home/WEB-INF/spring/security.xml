<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:security="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <bean id="apgLogoutHandler" class="org.zfin.security.ApgLogoutSuccessHandler">
        <property name="defaultTargetUrl" value="/"/>
    </bean>

    <bean id="userRepository" class="org.zfin.security.repository.HibernateUserRepository"/>

    <bean id="apgAuthenticationSuccessHandler" class="org.zfin.security.ApgAuthenticationSuccessHandler">
        <property name="sessionRegistry" ref="sessionRegistry"/>
    </bean>

    <bean id="userDetailsService" class="org.zfin.security.UserDetailServiceImpl"/>

    <bean id="cachingUserDetailService"
          class="org.springframework.security.config.authentication.CachingUserDetailsService">
        <constructor-arg ref="userDetailsService"/>
    </bean>

    <bean id="zfinGlobalSessionBean" class="org.zfin.framework.presentation.GlobalSessionBean">
        <property name="sessionRegistry" ref="sessionRegistry"/>
    </bean>

    <bean id="ipRememberMeService" class="org.zfin.security.IpTokenRememberMeServices">
        <constructor-arg value="ZFIN_KEY"/>
        <constructor-arg ref="userDetailsService"/>
        <property name="cookieName" value="ZFIN_REMEMBER_ME"/>
        <property name="tokenValiditySeconds" value="${VALID_SESSION_TIMEOUT_SECONDS}"/>
        <!--want a parentColumn that is rated strong to reduce likelihood of reverse engineering-->
        <property name="useSecureCookie" value="false"/>
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder hash="md5">
                <security:salt-source system-wide="dedicated to George Streisinger"/>
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="securityContextLogoutHandler"
          class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>

    <bean id="checkUpdates" class="org.zfin.framework.filter.UpdatesCheckFilter">
        <property name="logoutSuccessHandler" ref="apgLogoutHandler"/>
        <property name="logoutHandlers">
            <list>
                <ref bean="ipRememberMeService"/>
                <ref bean="securityContextLogoutHandler"/>
            </list>
        </property>
    </bean>

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
    <bean id="defaultRolesPrefixPostProcessor" class="org.zfin.framework.DefaultRolesPrefixPostProcessor"/>

    <!--maps action-->
    <!--filter action should correspond to this:-->
    <!--http://static.springsource.org/spring-security/site/docs/3.0.x/reference/ns-config.html#ns-requires-channel-->
    <security:http
            request-matcher="ant"
            use-expressions="true"
            create-session="ifRequired"
            >
        <security:headers>
            <security:hsts
                    include-subdomains="false"
                    max-age-seconds="43200"/>
            <security:frame-options
                    policy="SAMEORIGIN"/>
        </security:headers>
        <security:csrf disabled="true"/>
        <security:form-login login-page="/action/login"
                             default-target-url="/"
                             authentication-failure-url="/action/login-redirect?error=true"
                             login-processing-url="/action/j_security-check"
                             always-use-default-target="false"
                             authentication-success-handler-ref="apgAuthenticationSuccessHandler"
                />

        <security:logout logout-url="/action/logout"
                         success-handler-ref="apgLogoutHandler"
                />
        <!--logout-success-url="/action/http-redirect"-->

        <security:anonymous key="changeThis" username="anonymousUser,guest" enabled="true" granted-authority="guest"/>

        <security:port-mappings>
            <security:port-mapping http="${NON_SECUREPORT}" https="${SECUREPORT}"/>
        </security:port-mappings>

        <security:session-management>
            <security:concurrency-control max-sessions="1" expired-url="/action/login"
                                          session-registry-ref="sessionRegistry"/>
        </security:session-management>

        <!--for some reason you have to establish the parentColumn here again, or it uses the default springSecurity -->
        <security:remember-me services-ref="ipRememberMeService" key="ZFIN_KEY"/>

        <security:custom-filter after="LAST" ref="checkUpdates"/>


        <security:intercept-url pattern="/action/login" access="permitAll"/>
        <security:intercept-url pattern="/action/audit-log/**" access="hasRole('root') or ${DISABLE_SECURITY}"
                                requires-channel="https"/>
        <security:intercept-url pattern="/action/reno/**" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/marker/transcript-add"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/marker/clone-add" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/marker/region-add" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/marker/sequence-targeting-reagent-add"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/construct/construct-add"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/construct/construct-update"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/people/edit-user*"
                                access="hasAnyRole('root','submit') or ${DISABLE_SECURITY}" requires-channel="https"/>

        <security:intercept-url pattern="/action/publication/new" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/correspondences/*"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/notes/*" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/topics/*" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/correspondences"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/edit" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/notes" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/status" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/topics" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/track" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/validate"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/link" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/addAuthor"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/publication/*/removeAuthor"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>

        <security:intercept-url pattern="/action/str/*/edit" access="hasRole('root') or ${DISABLE_SECURITY}"/>

        <security:intercept-url pattern="/action/feature/alleleDesig-add-form"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/antibody/add" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/antibody/antibody-citation-disassociate-publication"
                                access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/devtool/**" access="hasRole('root')"/>
        <security:intercept-url pattern="/action/devtool/view-global-session-info" access="permitAll"/>
        <security:intercept-url pattern="/action/devtool/view-session-info" access="permitAll"/>
        <security:intercept-url pattern="/WEB-INF/jsp/devtool/gwt" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/marker/*-edit" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/database/**" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/gene/*/ortholog/**" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/action/security-check"/>
        <security:intercept-url pattern="/action/login-redirect"/>
        <security:intercept-url pattern="/action/login-redirect?error=true"/>


        <security:intercept-url pattern="/ajax/session-save" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/transcriptservice" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/markerservice" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/termservice" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/imageservice" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/cloneservice" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/antibodyservice" access="hasRole('root') or ${DISABLE_SECURITY}"/>
        <security:intercept-url pattern="/ajax/curation*" access="hasRole('root') or ${DISABLE_SECURITY}"/>

    </security:http>


</beans>
