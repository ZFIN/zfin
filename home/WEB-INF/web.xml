<?xml version="1.0" encoding="iso-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
            http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">
    <display-name>ZFIN: Zebrafish Information Network</display-name>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.xml</param-value>
    </context-param>

    <!-- all spring-related configuation files go in here. -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/conf/anatomy.xml,
            /WEB-INF/conf/antibody.xml,
            /WEB-INF/conf/reno.xml,
            /WEB-INF/conf/developer-tools.xml,
            /WEB-INF/conf/framework.xml,
            /WEB-INF/conf/marker.xml,
            /WEB-INF/conf/blast.xml,
            /WEB-INF/conf/orthology.xml,
            /WEB-INF/conf/person.xml,
            /WEB-INF/conf/quicksearch.xml,
            /WEB-INF/conf/publication.xml,
            /WEB-INF/conf/webdriver.xml,
            /WEB-INF/conf/mapper.xml,
            /WEB-INF/conf/feature.xml,
            /WEB-INF/conf/wiki.xml,
            /WEB-INF/conf/quartz-jobs.xml,
            /WEB-INF/conf/applicationContext-acegi-security.xml
        </param-value>
    </context-param>

    <filter>
        <filter-name>clickstream</filter-name>
        <filter-class>com.opensymphony.clickstream.ClickstreamFilter</filter-class>
    </filter>

    <!-- This filter is a generic filter for Acegi Security system. Configure filters pertaining to
         the security within the WEB-INF/applicationContext-acegi-security.xml file -->
    <filter>
        <filter-name>Acegi Filter Chain Proxy</filter-name>
        <filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
        <init-param>
            <param-name>targetBean</param-name>
            <param-value>filterChainProxy</param-value>
        </init-param>
    </filter>

    <!--
        <filter>
            <filter-name>Check Database Updates</filter-name>
            <filter-class>org.zfin.framework.filter.UpdatesCheckFilter</filter-class>
        </filter>

    -->
    <!-- Filter to cleanup the HTML response before it is sent out to the client -->
    <!--
        <filter>
            <filter-name>HTML Cleanup</filter-name>
            <filter-class>org.zfin.framework.filter.HtmlCleanupFilter</filter-class>
            <init-param>
                <param-name>targetClass</param-name>
                <param-value>org.acegisecurity.securechannel.ChannelProcessingFilter</param-value>
            </init-param>
        </filter>
    -->

    <filter>
        <description>Final Hibernate session closure. This filter has to be the last one entry in this
            file to make sure the session is not closed before the JSP is rendered. Some JSP pages need
            to go back to the database for entities that had not been retrieved.
        </description>
        <filter-name>Hibernate Session Request</filter-name>
        <filter-class>org.zfin.database.HibernateSessionRequestFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>Acegi Filter Chain Proxy</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>Hibernate Session Request</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>clickstream</filter-name>
        <url-pattern>/action/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Track each session creation and removal -->
    <listener>
        <listener-class>org.zfin.framework.ZfinSessionListener</listener-class>
    </listener>

    <!-- Used by Acegi concurrent session Handling component -->
    <listener>
        <listener-class>org.acegisecurity.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <listener>
        <listener-class>com.opensymphony.clickstream.ClickstreamListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!--
        Generic class that proxies filters and thus allows to have spring manage the actual filter classes
    -->
    <!--
        <filter>
            <filter-name>myFilter</filter-name>
            <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        </filter>
    -->

    <servlet>
        <servlet-name>zfin</servlet-name>
        <servlet-class>org.zfin.framework.ZfinActionServlet</servlet-class>
        <init-param>
            <param-name>property-file</param-name>
            <param-value>zfin-properties.xml</param-value>
        </init-param>
        <init-param>
            <param-name>site-search-category-file</param-name>
            <param-value>site-search-categories.xml</param-value>
        </init-param>
        <!-- relative to the web root directory -->
        <init-param>
            <param-name>property-file-directory</param-name>
            <param-value>WEB-INF</param-value>
        </init-param>
        <init-param>
            <param-name>log4j-init-file</param-name>
            <param-value>log4j.xml</param-value>
        </init-param>
        <init-param>
            <param-name>log4j-init-file-directory</param-name>
            <param-value>WEB-INF</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Standard Action Servlet Mapping -->

    <servlet>
        <servlet-name>ZFIN Session Manager</servlet-name>
        <servlet-class>org.zfin.framework.SessionManagerServlet</servlet-class>
        <init-param>
            <description>Number of minutes this thread is checking for stale sessions.</description>
            <param-name>process delay time</param-name>
            <param-value>1</param-value>
        </init-param>
        <init-param>
            <description>Number of minutes after which a guest session is invalidated.</description>
            <param-name>guest session timeout</param-name>
            <param-value>5</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>ZFIN Ontology Manager</servlet-name>
        <servlet-class>org.zfin.framework.OntologyManagerServlet</servlet-class>
<!--
        <description>Load ontologies in memory (used to be Phenote) from a serialized file or the database..</description>
-->
        <!-- Is being handled after the main servlet initialization and the Session handling servlet. -->
        <load-on-startup>3</load-on-startup>
    </servlet>


    <servlet>
        <servlet-name>AnatomyLookupService</servlet-name>
        <servlet-class>org.zfin.gwt.root.server.LookupRPCServiceImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>AnatomyLookupService</servlet-name>
        <url-pattern>/ajax/anatomylookup</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>SessionSaveService</servlet-name>
        <servlet-class>org.zfin.gwt.root.server.SessionSaveServiceImpl</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>CurationService</servlet-name>
        <servlet-class>org.zfin.gwt.curation.server.CurationExperimentRPCImpl</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>CurationFilterService</servlet-name>
        <servlet-class>org.zfin.gwt.curation.server.CurationFilterRPCImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>SessionSaveService</servlet-name>
        <url-pattern>/ajax/session-save</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>TranscriptService</servlet-name>
        <servlet-class>org.zfin.gwt.marker.server.TranscriptRPCServiceImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>TranscriptService</servlet-name>
        <url-pattern>/ajax/transcriptservice</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>TermService</servlet-name>
        <servlet-class>org.zfin.gwt.marker.server.MarkerGoEvidenceRPCServiceImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>TermService</servlet-name>
        <url-pattern>/ajax/termservice</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>MarkerService</servlet-name>
        <servlet-class>org.zfin.gwt.marker.server.MarkerRPCServiceImpl</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>CurationStructureService</servlet-name>
        <servlet-class>org.zfin.gwt.curation.server.StructureRPCImpl</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>CurationPhenotypeService</servlet-name>
        <servlet-class>org.zfin.gwt.curation.server.CurationPhenotypeRPCImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>MarkerService</servlet-name>
        <url-pattern>/ajax/markerservice</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>CloneService</servlet-name>
        <servlet-class>org.zfin.gwt.marker.server.CloneRPCServiceImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>CloneService</servlet-name>
        <url-pattern>/ajax/cloneservice</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>AntibodyService</servlet-name>
        <servlet-class>org.zfin.gwt.marker.server.AntibodyRPCServiceImpl</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>AntibodyService</servlet-name>
        <url-pattern>/ajax/antibodyservice</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CurationService</servlet-name>
        <url-pattern>/ajax/curation</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CurationStructureService</servlet-name>
        <url-pattern>/ajax/curation-structures</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CurationPhenotypeService</servlet-name>
        <url-pattern>/ajax/curation-phenotype</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CurationFilterService</servlet-name>
        <url-pattern>/ajax/curation-filter</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>zfin</servlet-name>
        <url-pattern>/action/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>zfin</servlet-name>
        <url-pattern>/@TARGETCGIBIN@/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>zfin</servlet-name>
        <url-pattern>/cgi-bin/*</url-pattern>
    </servlet-mapping>

    <!-- time in minutes after which an idle user session is invalidated -->
    <session-config>
        <session-timeout>720</session-timeout>
    </session-config>

    <!-- The Usual Welcome File List -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <resource-ref>
        <description>
            Resource reference to a factory for java.sql.Connection
            instances that may be used for talking to a particular
            database that is configured in the server.xml file.
        </description>
        <res-ref-name>
            jdbc/zfin
        </res-ref-name>
        <res-type>
            javax.sql.DataSource
        </res-type>
        <res-auth>
            Container
        </res-auth>
    </resource-ref>


    <resource-ref>
        <description>
            Resource reference to a factory for java.sql.Connection
            instances that may be used for talking to a particular
            database that is configured in the server.xml file.
        </description>
        <res-ref-name>
            jdbc/gbrowse
        </res-ref-name>
        <res-type>
            javax.sql.DataSource
        </res-type>
        <res-auth>
            Container
        </res-auth>
    </resource-ref>

    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/page-not-found.jsp</location>
    </error-page>



</web-app>
