(function($){$.fn.dirtyFields=function(b){var c=$.extend({},$.fn.dirtyFields.defaults,b);return this.each(function(){var a=$(this);a.data("dF",c);a.data("dF").dirtyFieldsDataProperty=new Array;$("input[type='text'],input[type='file'],input[type='password'],textarea",a).each(function(i){$.fn.dirtyFields.configureField($(this),a,"text")});$("select",a).each(function(j){$.fn.dirtyFields.configureField($(this),a,"select")});$(":checkbox,:radio",a).each(function(k){$.fn.dirtyFields.configureField($(this),a,"checkRadio")});$.fn.dirtyFields.setStartingValues(a)})};$.fn.dirtyFields.defaults={checkboxRadioContext:"next-span",denoteDirtyOptions:false,denoteDirtyForm:false,dirtyFieldClass:"dirtyField",dirtyFieldsDataProperty:"dirtyFields",dirtyFormClass:"dirtyForm",dirtyOptionClass:"dirtyOption",fieldChangeCallback:"",formChangeCallback:"",preFieldChangeCallback:"",startingValueDataProperty:"startingValue",textboxSelectContext:"id-for",trimText:false,fieldOverrides:{none:"none"}};$.fn.dirtyFields.configureField=function(a,b,c,d){if(typeof d!="undefined"){b.data("dF").fieldOverrides[a.attr("id")]=d}switch(c){case"text":a.change(function(){if($.isFunction(b.data("dF").preFieldChangeCallback)){if(b.data("dF").preFieldChangeCallback.call(a,a.data(b.data("dF").startingValueDataProperty))==false){return false}}evaluateTextElement(a,b)});break;case"select":a.change(function(){if($.isFunction(b.data("dF").preFieldChangeCallback)){if(b.data("dF").preFieldChangeCallback.call(a,a.data(b.data("dF").startingValueDataProperty))==false){return false}}evaluateSelectElement(a,b)});break;case"checkRadio":a.change(function(){if($.isFunction(b.data("dF").preFieldChangeCallback)){if(b.data("dF").preFieldChangeCallback.call(a,a.data(b.data("dF").startingValueDataProperty))==false){return false}}evaluateCheckboxRadioElement(a,b)});break}};$.fn.dirtyFields.formSaved=function(a){$.fn.dirtyFields.setStartingValues(a);$.fn.dirtyFields.markContainerFieldsClean(a)};$.fn.dirtyFields.markContainerFieldsClean=function(a){var b=new Array();a.data("dF").dirtyFieldsDataProperty=b;$("."+a.data("dF").dirtyFieldClass,a).removeClass(a.data("dF").dirtyFieldClass);if(a.data("dF").denoteDirtyOptions){$("."+a.data("dF").dirtyOptionClass,a).removeClass(a.data("dF").dirtyOptionClass)}if(a.data("dF").denoteDirtyForm){a.removeClass(a.data("dF").dirtyFormClass)}};$.fn.dirtyFields.setStartingValues=function(b,c){$("input[type='text'],input[type='file'],input[type='password'],:checkbox,:radio,textarea",b).each(function(i){var a=$(this);if(a.attr("type")=="radio"||a.attr("type")=="checkbox"){$.fn.dirtyFields.setStartingCheckboxRadioValue(a,b)}else{$.fn.dirtyFields.setStartingTextValue(a,b)}});$("select",b).each(function(j){$.fn.dirtyFields.setStartingSelectValue($(this),b)})};$.fn.dirtyFields.setStartingTextValue=function(b,c){return b.each(function(){var a=$(this);a.data(c.data("dF").startingValueDataProperty,a.val())})};$.fn.dirtyFields.setStartingCheckboxRadioValue=function(c,d){return c.each(function(){var a=$(this);var b;if(a.is(":checked")){a.data(d.data("dF").startingValueDataProperty,true)}else{a.data(d.data("dF").startingValueDataProperty,false)}})};$.fn.dirtyFields.setStartingSelectValue=function(d,e){return d.each(function(){var b=$(this);if(e.data("dF").denoteDirtyOptions==false&&b.attr("multiple")==false){b.data(e.data("dF").startingValueDataProperty,b.val())}else{var c=new Array;b.children("option").each(function(o){var a=$(this);if(a.is(":selected")){a.data(e.data("dF").startingValueDataProperty,true);c.push(a.val())}else{a.data(e.data("dF").startingValueDataProperty,false)}});b.data(e.data("dF").startingValueDataProperty,c)}})};$.fn.dirtyFields.rollbackTextValue=function(b,c,d){if(typeof d=="undefined"){d=true}return b.each(function(){var a=$(this);a.val(a.data(c.data("dF").startingValueDataProperty));if(d){evaluateTextElement(a,c)}})};$.fn.dirtyFields.updateTextState=function(a,b){return a.each(function(){evaluateTextElement($(this),b)})};$.fn.dirtyFields.rollbackCheckboxRadioState=function(b,c,d){if(typeof d=="undefined"){d=true}return b.each(function(){var a=$(this);if(a.data(c.data("dF").startingValueDataProperty)){a.attr("checked",true)}else{a.attr("checked",false)}if(d){evaluateCheckboxRadioElement(a,c)}})};$.fn.dirtyFields.updateCheckboxRadioState=function(a,b){return a.each(function(){evaluateCheckboxRadioElement($(this),b)})};$.fn.dirtyFields.rollbackSelectState=function(c,d,e){if(typeof e=="undefined"){e=true}return c.each(function(){var b=$(this);if(d.data("dF").denoteDirtyOptions==false&&b.attr("multiple")==false){b.val(b.data(d.data("dF").startingValueDataProperty))}else{b.children("option").each(function(o){var a=$(this);if(a.data(d.data("dF").startingValueDataProperty)){a.attr("selected",true)}else{a.attr("selected",false)}})}if(e){evaluateSelectElement(b,d)}})};$.fn.dirtyFields.updateSelectState=function(a,b){return a.each(function(){evaluateSelectElement($(this),b)})};$.fn.dirtyFields.rollbackForm=function(a){$("input[type='text'],input[type='file'],input[type='password'],:checkbox,:radio,textarea",a).each(function(i){$object=$(this);if($object.attr("type")=="radio"||$object.attr("type")=="checkbox"){$.fn.dirtyFields.rollbackCheckboxRadioState($object,a,false)}else{$.fn.dirtyFields.rollbackTextValue($object,a,false)}});$("select",a).each(function(j){$.fn.dirtyFields.rollbackSelectState($(this),a,false)});$.fn.dirtyFields.markContainerFieldsClean(a)};function updateDirtyFieldsArray(a,b,c){var d=b.data("dF").dirtyFieldsDataProperty;var e=$.inArray(a,d);if(c=="dirty"&&e==-1){d.push(a);b.data("dF").dirtyFieldsDataProperty=d}else if(c=="clean"&&e>-1){d.splice(e,1);b.data("dF").dirtyFieldsDataProperty=d}};function updateFormStatus(a){if(a.data("dF").dirtyFieldsDataProperty.length>0){a.addClass(a.data("dF").dirtyFormClass);if($.isFunction(a.data("dF").formChangeCallback)){a.data("dF").formChangeCallback.call(a,true,a.data("dF").dirtyFieldsDataProperty)}}else{a.removeClass(a.data("dF").dirtyFormClass);if($.isFunction(a.data("dF").formChangeCallback)){a.data("dF").formChangeCallback.call(a,false,a.data("dF").dirtyFieldsDataProperty)}}};function updateContext(a,b,c,d){var e=d.data("dF").fieldOverrides;var f=b.attr("id");var g=false;for(var h in e){if(f==h){if(c=="changed"){$("#"+e[h]).addClass(d.data("dF").dirtyFieldClass)}else{$("#"+e[h]).removeClass(d.data("dF").dirtyFieldClass)}g=true}}if(g==false){if(a=="textboxSelectContext"){var i=d.data("dF").textboxSelectContext}else{var i=d.data("dF").checkboxRadioContext}var j=i.split("-");switch(j[0]){case"next":if(c=="changed"){b.next(j[1]).addClass(d.data("dF").dirtyFieldClass)}else{b.next(j[1]).removeClass(d.data("dF").dirtyFieldClass)}break;case"previous":if(c=="changed"){b.prev(j[1]).addClass(d.data("dF").dirtyFieldClass)}else{b.prev(j[1]).removeClass(d.data("dF").dirtyFieldClass)}break;case"closest":if(c=="changed"){b.closest(j[1]).addClass(d.data("dF").dirtyFieldClass)}else{b.closest(j[1]).removeClass(d.data("dF").dirtyFieldClass)}break;default:if(j[0]=="id"||j[0]=="name"){switch(j[1]){case"class":if(c=="changed"){$("."+b.attr(j[0]),d).addClass(d.data("dF").dirtyFieldClass)}else{$("."+b.attr(j[0]),d).removeClass(d.data("dF").dirtyFieldClass)}break;case"title":if(c=="changed"){$("*[title='"+b.attr(j[0])+"']",d).addClass(d.data("dF").dirtyFieldClass)}else{$("*[title='"+b.attr(j[0])+"']",d).removeClass(d.data("dF").dirtyFieldClass)}break;case"for":if(c=="changed"){$("label[for='"+b.attr(j[0])+"']",d).addClass(d.data("dF").dirtyFieldClass)}else{$("label[for='"+b.attr(j[0])+"']",d).removeClass(d.data("dF").dirtyFieldClass)}break}}break}}};function evaluateTextElement(a,b){var c=a.attr("name");var d=false;if(b.data("dF").trimText){var e=jQuery.trim(a.val())}else{var e=a.val()}if(e!=a.data(b.data("dF").startingValueDataProperty)){updateContext("textboxSelectContext",a,"changed",b);updateDirtyFieldsArray(c,b,"dirty");d=true}else{updateContext("textboxSelectContext",a,"unchanged",b);updateDirtyFieldsArray(c,b,"clean")}if($.isFunction(b.data("dF").fieldChangeCallback)){b.data("dF").fieldChangeCallback.call(a,a.data(b.data("dF").startingValueDataProperty),d)}if(b.data("dF").denoteDirtyForm){updateFormStatus(b)}};function evaluateSelectElement(c,d){var e=c.attr("name");var f=false;if(d.data("dF").denoteDirtyOptions==false&&c.attr("multiple")==false){if(c.val()!=c.data(d.data("dF").startingValueDataProperty)){updateContext("textboxSelectContext",c,"changed",d);updateDirtyFieldsArray(e,d,"dirty");f=true}else{updateContext("textboxSelectContext",c,"unchanged",d);updateDirtyFieldsArray(e,d,"clean")}}else{var g=false;c.children("option").each(function(o){var a=$(this);var b=a.is(":selected");if(b!=a.data(d.data("dF").startingValueDataProperty)){if(d.data("dF").denoteDirtyOptions){a.addClass(d.data("dF").dirtyOptionClass)}g=true}else{if(d.data("dF").denoteDirtyOptions){a.removeClass(d.data("dF").dirtyOptionClass)}}});if(g){updateContext("textboxSelectContext",c,"changed",d);updateDirtyFieldsArray(e,d,"dirty");f=true}else{updateContext("textboxSelectContext",c,"unchanged",d);updateDirtyFieldsArray(e,d,"clean")}}if($.isFunction(d.data("dF").fieldChangeCallback)){d.data("dF").fieldChangeCallback.call(c,c.data(d.data("dF").startingValueDataProperty),f)}if(d.data("dF").denoteDirtyForm){updateFormStatus(d)}};function evaluateCheckboxRadioElement(c,d){var e=c.attr("name");var f=false;var g=c.attr("type");$(":"+g+"[name='"+e+"']",d).each(function(r){var a=$(this);var b=a.is(":checked");if(b!=a.data(d.data("dF").startingValueDataProperty)){updateContext("checkboxRadioContext",a,"changed",d);f=true}else{updateContext("checkboxRadioContext",a,"unchanged",d)}});if(f){updateDirtyFieldsArray(e,d,"dirty")}else{updateDirtyFieldsArray(e,d,"clean")}if($.isFunction(d.data("dF").fieldChangeCallback)){d.data("dF").fieldChangeCallback.call(c,c.data(d.data("dF").startingValueDataProperty),f)}if(d.data("dF").denoteDirtyForm){updateFormStatus(d)}}})(jQuery);