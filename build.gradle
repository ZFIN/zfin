buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.postgresql:postgresql:42.0.0'
    }
}
plugins {
    id "org.liquibase.gradle" version "1.2.4"
}

apply plugin: 'java'

//apply from : '../zfinGradle/build.gradle'

def env = System.getenv()
def dbname = env['DBNAME']
def sourceroot = env['SOURCEROOT']
def pgbindir = env['PGBINDIR']
def pgdata = env['PGDATA']

dependencies {
    compile 'org.liquibase:liquibase-core:3.4.1'
    compile "org.liquibase:liquibase-gradle-plugin:1.1.1"
}

task deployPostgres(dependsOn: ['lib:DB_functions:postgresFunctions:deployPostgresFunctions',
                                'lib:DB_triggers:postgresTriggerProcedures:deployPostgresTrigger']) {
    description "Deploy all postgres code"
}

defaultTasks 'defaultTask'

project.ext.set("dbname", dbname)
project.ext.set("sourceroot", sourceroot)
project.ext.set("pgdata", pddata)
project.ext.set("pgbindir", pgbindir)

task loadDb(dependsOn: ['lib:DB_functions:postgresFunctions:killConnectionsToPostgres']) {
    doLast {
        File unloads = file('/research/zunloads/databases/postgres_self_dumps/darwindb/')
        String unloadPath;
        if (unloads.exists()) {
            File latest = unloads.listFiles().last()
            unloadPath = latest.getPath()
        }

        //use -DB=... path if specified, also, yes, I'm being cute so that it will be -DB=...
        //rather than -Ddb=...
        if (System.getProperty("B")) {
            unloadPath = System.getProperty("B")
        }

        //might as well support -Dunload also
        if (System.getProperty("unload")) {
            unloadPath = System.getProperty("unload")
        }

        println "Loading $unloadPath into $dbname"
        exec { commandLine 'dropdb', dbname }
        exec { commandLine 'createdb', dbname }
        exec { commandLine "bash", "-c", "psql --set ON_ERROR_STOP=on $dbname < $unloadPath" }
    }
}
task loaddb(dependsOn: loadDb) //just an alias, since we're used to loaddb.pl


sourceSets {
    main {
        java {
            srcDirs = ['source']
        }
        resources {
            srcDirs = ['home']
        }
    }
}

def changeLog = "$projectDir/source/org/zfin/db/load/db.changelog.master.xml"

task buildDatabase() {
    liquibase {
        activities {
            main {
                changeLogFile changeLog
                url 'jdbc:postgresql://localhost:5432/' + dbname
            }
        }
    }
}

update {
/*
    println dbname
    println "Running liquibase updates..."
    println "change logs: " + changeLog
*/

}

task defaultTask {
/*
    println "Hello"
    subprojects.each { subproject ->
        println subproject.path
        println subproject.defaultTasks
        subproject.defaultTasks.each {
            println subproject.path+":"+it
            dependsOn subproject.path+":"+it
        }
    }
*/
}

