#------------------------------------------------------------------------
#
# Include file for ZFIN_WWW makefiles.
#
# This file is included in every makefile in the ZFIN_WWW directory tree.
# It dontains definitions that are common across all makefiles.
# 
#------------------------------------------------------------------------ 

# ----------------  Sanity Checks  --------------------------------------

# The following error checks will abort make and print a nice explanatory
# message as long as it can't find an executable named 'ERROR:' anywhwere.

# Must be running GNU make.  The following line appears to be testing that,
# but in actuallity, if you are not running GNU make then the make will
# choke on the ifneq statement.

ifneq (,$(findstring gmake,$(MAKE)))
 ifneq (,$(findstring gnumake,$(MAKE)))
MakeVersionCheck:
	ERROR: Makefiles only compatible with GNU make.  Use gmake or gnumake.
 endif
endif


# check that environment variables are defined

# Check one Informix variable.  Assumed if it is defined, the rest are too.

ifndef INFORMIXDIR
InformixDirCheck:
	ERROR: Infomrix environment variables not all set.
endif


# Check Environment variables required by Makefiles.

# TARGETROOT must be defined and be an absolute path.

ifndef TARGETROOT
TargetRootCheck:
	ERROR: TARGETROOT environment variable not set.
endif
ifneq ($(filter /%,$(TARGETROOT)),$(TARGETROOT))
TargetRootNotAbsolute:
	ERROR: TARGETROOT must be an absolute path.
endif

# if TARGETROOT ends in a slash, strip it, double slashes in filenames
# cause trouble for REBOL.
ifeq ($(filter %/,$(TARGETROOT)),$(TARGETROOT))
TARGETROOT := $(patsubst %/,%,$(TARGETROOT))
endif


# TARGETFTPROOT must be defined and be an absolute path.

ifndef TARGETROOT
TargetFtpRootCheck:
	ERROR: TARGETFTPROOT environment variable not set.
endif
ifneq ($(filter /%,$(TARGETFTPROOT)),$(TARGETFTPROOT))
TargetFtpRootNotAbsolute:
	ERROR: TARGETFTPROOT must be an absolute path.
endif

# if TARGETFTPROOT ends in a slash, strip it, double slashes in filenames
# cause trouble for REBOL.
ifeq ($(filter %/,$(TARGETFTPROOT)),$(TARGETFTPROOT))
TARGETFTPROOT := $(patsubst %/,%,$(TARGETFTPROOT))
endif




# TARGETCGIBIN must be defined and be a relative path.

ifndef TARGETCGIBIN
TargetCgiDirNameCheck:
	ERROR: TARGETCGIBIN environment variable not set.
endif
ifeq ($(filter /%,$(TARGETCGIBIN)),$(TARGETCGIBIN))
TargetCgiBinNotRelative:
	ERROR: TARGETCGIBIN must be relative to TARGETROOT
endif



ifndef DBNAME
DbNameCheck:
	ERROR: DBNAME Environment variable not set.
endif


# TRANSLATETABLE must be defined as an absolute path

ifndef TRANSLATETABLE
TranslateTableCheck:
	ERROR: TRANSLATETABLE Environment variable not set.
endif
ifneq ($(filter /%,$(TRANSLATETABLE)),$(TRANSLATETABLE))
TranslateTableNotAbsolute:
	ERROR: TRANSLATETABLE must be an absolute path.
endif




# ---------------  Variable Definitions  --------------------------------


# When app pages are loaded into the db, their ID becomes the name of the 
# file containing the app page, with a "aa-" appended to the front of it.

APGPREFIX = aa-



# --- Misc Executables

# Preserve permissions on copies to target or staging directories.

TARGET_CP  = /bin/cp -fp
STAGING_CP = /bin/cp -fp

# Touch call needed after the _CP calls because _CP creates 
# files with exactly the same timestamp as the source file, and that
# confuses gmake into thinking it needs to remake the file the next
# time around.

TOUCH = /bin/touch

# Any created dirs should be created with 775 perms.

TARGET_MKDIR = /bin/mkdir -pm 775

LOADAPPPAGE = /research/zcentral/Commons/bin/loadapppage.pl
UNLOADAPPPAGE = /research/zcentral/Commons/bin/unloadapppage.pl

MAKESPECIFIC = /research/zcentral/Commons/bin/makespecific.pl

SPECIFICCHECK = echo specificcheck -t $(TRANSLATETALE)

DBACCESS = $(INFORMIXDIR)/bin/dbaccess


# --- Java

JAVAHOME_11   = /private/apps/java1.1
JAVAC_11      = $(JAVAHOME)/bin/javac

JAVAHOME_14  = /private/apps/java1.4
JAVAC_14      = $(JAVAHOME_14)/bin/javac

JDBCHOME     = /private/apps/jdbc2.21

JAVACFLAGS = 



# ---- One time variables used in onetimeonlyl targets.  The onetimeonly 
# targets are set up so that if we ever need to do a sweeping change in
# all directories, we might be able to use the onetimeonly targets to do it.

ONETIMEONLY = echo "ontimeonly targets are currently undefined.
