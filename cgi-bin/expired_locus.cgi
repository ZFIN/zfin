#!/local/bin/perl 

##################################################################
#
# Search locus registrations for expired entries. For each expired
# registration send an email notification to the submitter.
#
##################################################################

use DBI;
use lib "/research/zfin/users/bsprunge/Perl/lib";
use MIME::Lite;


# ----------------- Email Message -------------
# Parameters
#   @_ => {locus,abbrev,allele,person}

sub messageContent (@_) {

  my $message = "Hello @_[3],\n\n";
  $message = $message."It has been 6 months since you registered your locus/allele, @_[0](@_[1])/(@_[2]), with ZFIN. Has this been published yet?\n\n";
  $message = $message."*  If so, would you please send us the citation?\n"; 
  $message = $message."*  If not, would you like a 6-month extension for your registration?\n"; 
  $message = $message."(Please include a note telling us its status and when you expect to publish.)\n\n";
  $message = $message."Thanks for your help.\n";
  $message = $message."Pat Edwards\n";
  $message = $message."Zebrafish Information Network";

  $message = $message."\n\n\n(Note:This message was generated by an automated process. If you received this message by mistake, please alert us.)";

  return $message;
}


# ----------------- Send Email Notification -------------
# Parameters
#   @_ => {locus,abbrev,allele,person,email}

sub sendNotification (@_) {
  
  my $SUBJECT="Your ZFIN Locus Registration";
  my $MAILTO="bsprunge\@cs.uoregon.edu"; #@_[4]
  my $TXTFILE="./report.txt";
 
  # Create a new multipart message:
  $msg1 = MIME::Lite->new(
    From    => "Pat Edwards <edwards@uoneuro.uoregon.edu>",
    To      => "$MAILTO",
    Subject => "$SUBJECT",
    Type    => 'TEXT',
    Data    => messageContent(@_[0],@_[1],@_[2],@_[3]))
  or die "Error creating MIME body: $!\n";

 
#  $msg1=>send();
}

sub emailError()
  {
    &writeReport($_[0]);
    &sendReport();
    exit;
  }

sub writeReport()
  {
    open (REPORT, ">>report") or die "cannot open report";
    print REPORT "$_[0] \n\n";
    close (REPORT);
  }

sub openReport()
  {
    system("/bin/rm -f report");
    system("touch report");
  }

sub sendReport()
  {
    open(MAIL, "| $mailprog") || die "cannot open mailprog $mailprog, stopped";
    open(REPORT, "report") || die "cannot open report";

    print MAIL "To: bsprunge\@cs.uoregon.edu\n";
    print MAIL "Subject: Expired Locus Registrations\n";
    while($line = <REPORT>)
    {
      print MAIL $line;
    }
    close (REPORT);
    close (MAIL);
    $dbh->disconnect();
  }


sub expiredLocusReg()
  {
    open (REPORT, ">>report") or die "can not open report";

    print REPORT "Expired Locus Registration\n";

    my $cur = $dbh->prepare('select locus_name, abbrev, allele, p.name, p.email
                             from locus_registration, person p
                             where locusreg_expiration_deadline < TODAY
                               and owner = p.zdb_id;'
			   );
    $cur->execute;
    my($locus, $abbrev, $allele, $person, $email);
    $cur->bind_columns(\$locus,\$abbrev,\$allele,\$person,\$email);
    while ($cur->fetch)
    {
      sendNotification($locus, $abbrev, $allele, $person, $email);
      print REPORT "$person <$email> - $locus($abbrev)/($allele)\n";
    }
    print REPORT "\n";
    close(REPORT);
  }


#set environment variables
$ENV{"INFORMIXDIR"}="<!--|INFORMIX_DIR|-->";
$ENV{"INFORMIXSERVER"}="<!--|INFORMIX_SERVER|-->";
$ENV{"ONCONFIG"}="<!--|ONCONFIG_FILE|-->";
$ENV{"INFORMIXSQLHOSTS"}="<!--|INFORMIX_DIR|-->/etc/<!--|SQLHOSTS_FILE|-->";

### open a handle on the db
my $dbh = DBI->connect('DBI:Informix:<!--|DB_NAME|-->',
                       '', 
                       '', 
		       {AutoCommit => 1,RaiseError => 1}
		      )
  || emailError("Failed while connecting to <!--|DB_NAME|--> "); 

chdir "<!--|ROOT_PATH|-->/cgi-bin/";

openReport();

expiredLocusReg();

sendReport();

exit;

