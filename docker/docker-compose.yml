version: '3.8'

services:
  compile:
    container_name: compile_container
    build: ./compile/
    profiles:
      - compile
    environment:
      PGHOST: db
      PGUSER: postgres
      SOLR_HOME: /var/solr
      SSH_AUTH_SOCK: /run/host-services/ssh-auth.sock
      SSH_USER: ${DOCKER_SSH_USER}
      TZ: ${TZ}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
#      #UNCOMMENT BELOW FOR PERL DEBUGGING
#    ports:
#      - "127.0.0.1:12345:12345"
    volumes:
      - www_data:/opt/zfin/www_homes/zfin.org
      - httpd_log:/opt/zfin/log/httpd
      - tls_certs:/opt/zfin/tls
      - keystore:/opt/apache/apache-tomcat/conf
      - catalina_base:/opt/zfin/catalina_bases/zfin.org
      - jenkins_data:/opt/zfin//www_homes/zfin.org/server_apps/jenkins/jenkins-home
      - ../:/opt/zfin/source_roots/zfin.org
      #- nfs-zunloads:/research/zunloads
      - ${DOCKER_DB_UNLOADS_PATH}:/opt/zfin/unloads/db
      - ${DOCKER_SOLR_UNLOADS_PATH}:/opt/zfin/unloads/solr
      - ${DOCKER_BLASTSERVER_BLAST_DATABASE_PATH}:/opt/zfin/blastdb
      - ${DOCKER_ABBLAST_PATH}:/opt/ab-blast
      - solr_data:/var/solr
      - ./pg_pass:/run/secrets/pg_pass
      - ${DOCKER_SSH_AUTH_SOCK}:/run/host-services/ssh-auth.sock
      - ~/.ssh/known_hosts:/home/gradle/.ssh/known_hosts
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    container_name: pg_container
    build: ./postgresql/
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_pass
      POSTGRES_INITDB_ARGS: "-E SQL_ASCII"
      POSTGRES_DB: zfindb
      POSTGRES_HOST_AUTH_METHOD: trust
    shm_size: 1g
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/
      - ./pg_pass:/run/secrets/pg_pass:ro
  solr:
    container_name: solr_container
    build: ./solr/
    restart: always
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
  httpd:
    container_name: httpd_container
    build: ./httpd/
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - www_data:/opt/zfin/www_homes/zfin.org
      - httpd_log:/var/log/httpd
      - tls_certs:/opt/zfin/tls
      #- nfs-loadup:/opt/zfin/loadUp
      #- /etc/pki/tls/certs/incommon_intermediate_bundle.crt:/etc/pki/tls/certs/incommon_intermediate_bundle.crt,ro
      #- /etc/pki/tls/certs/zfin_2021.crt:/etc/pki/tls/certs/zfin_2021.crt,ro
      #- /etc/pki/tls/private/zfin_2021.key:/etc/pki/tls/private/zfin_2021.key,ro
      - certbot_data:/etc/letsencrypt
  certbot:
    container_name: certbot_container
    build: ./certbot/
    volumes:
      - certbot_data:/etc/letsencrypt
  tomcat:
    container_name: tomcat_container
    build: ./tomcat/
    restart: always
    environment:
      CATALINA_BASE: /opt/zfin/catalina_bases/zfin.org
      INSTANCE: docker
      JVM_OPTS: -Xms2048m -Xmx8192m -Xss2m
      #UNCOMMENT BELOW TO ENABLE DEBUGGING#
      JPDA_ADDRESS: "*:5000"
      JPDA_TRANSPORT: dt_socket
    entrypoint: ["catalina.sh", "jpda", "run"]
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - www_data:/opt/zfin/www_homes/zfin.org
      - catalina_base:/opt/zfin/catalina_bases/zfin.org
      - keystore:/opt/apache/apache-tomcat/conf
      - ${DOCKER_BLASTSERVER_BLAST_DATABASE_PATH}:/opt/zfin/blastdb
      - ${DOCKER_ABBLAST_PATH}:/opt/ab-blast
  mailhog:
    container_name: mailhog
    build: ./mailhog/
    restart: always
    environment:
      MH_SMTP_BIND_ADDR: "0.0.0.0:25"
    ports:
      - "25:1025"
      - "8025:8025"
  jenkins:
    container_name: jenkins_container
    build: ./jenkins/
    restart: always
    ports:
      - "8888:8080"
  elasticsearch:
    container_name: elasticsearch_container
    build: 
      context: ./elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    profiles:
      - logging
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  logstash:
    container_name: logstash_container
    build: 
      context: ./logstash/
      args:
        ELK_VERSION: ${ELK_VERSION}
    profiles:
      - logging
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
  filebeat:
    container_name: filebeat_container
    build: 
      context: ./filebeat/
      args:
        ELK_VERSION: ${ELK_VERSION}
    profiles:
      - logging
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - httpd_log:/var/log/httpd
      - catalina_base:/opt/zfin/catalina_bases/zfin.org
  kibana:
    container_name: kibana_container
    build: 
      context: ./kibana/
      args:
        ELK_VERSION: ${ELK_VERSION}
    profiles:
      - logging
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    ports:
      - "127.0.0.1:5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data

volumes:
  www_data:
  httpd_log:
  tls_certs:
  keystore:
  catalina_base:
  pg_data:
  solr_data:
  jenkins_data:
  elasticsearch_data:
  kibana_data:
  certbot_data:
  nfs-zunloads:
    driver_opts:
      type: nfs
      o: addr=10.128.116.85,ro
      device: :/vol/unloads/
  nfs-loadup:
    driver_opts:
      type: nfs
      o: addr=10.128.116.85,ro
      device: :/vol/central/loadUp
