<dataConfig>

    <dataSource name="db"
                driver="@JDBC_DRIVER@"
                url="@JDBC_URL@"
                transactionIsolation="TRANSACTION_READ_UNCOMMITTED"/>

    <document>

            <entity name="gene"
            dataSource="db" datasource="db" query="
select 
    mrkr_zdb_id as id,
    'Gene / Transcript' as category,
    mrkrtype_type_display as type,
    mrkr_comments as note,
    mrkr_abbrev as name,
    mrkr_abbrev as proper_name,
    mrkr_abbrev as gene,
    mrkr_name as full_name,
    mrkr_name as gene_full_name,
    mrkr_abbrev_order as name_sort,
       '/' || mrkr_zdb_id as url,
    to_date(get_date_from_id(mrkr_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
from marker, marker_types
inner join marker_type_group_member
on marker_types.marker_type = marker_type_group_member.mtgrpmem_mrkr_type
where mtgrpmem_mrkr_type_group IN ('GENEDOM', 'EFG')
  and mrkr_type = marker_type
       ;">


        <entity name="gene_type_hierarchy_ncRNA_children"
                        query="select 'Gene' type_0,
                           case
                             when mrkr_type = 'GENE' then 'Protein Coding Gene'
                             else mrkrtype_type_display end as type_1,
                           mrkr_zdb_id as gene_zdb_id
                    from marker
                         join marker_types on mrkr_type = marker_type
                    where mrkr_type in ('GENE',
                                        'GENEP',
                                        'EFG',
                                        'NCRNAG');"
                        where="gene_zdb_id=gene.id"
                        cacheImpl="SortedMapBackedCache">
                    <column name="type_0" column="type_0"/>
                    <column name="type_1" column="type_1"/>
        </entity>

        <entity name="gene_type_hierarchy_ncRNA_children"
           query="select 'Gene' type_0,
                           'ncRNA Gene' as type_1,
                           mrkrtype_type_display as type_2,
                           mrkr_zdb_id as gene_zdb_id
                    from marker
                         join marker_types on mrkr_type = marker_type
                    where mrkr_type in ('LINCRNAG',
                                        'LNCRNAG',
                                        'MIRNAG',
                                        'PIRNAG',
                                        'RRNAG',
                                        'SCRNAG',
                                        'SNORNAG',
                                        'SRPRNAG',
                                        'TRNAG');"
           where="gene_zdb_id=gene.id"
           cacheImpl="SortedMapBackedCache">
       <column name="type_0" column="type_0"/>
       <column name="type_1" column="type_1"/>
       <column name="type_2" column="type_2"/>
   </entity>

   <entity name="gene_typegroup" datasource="db"
           query="select mtgrp_display_name as typegroup,
                           mrkr_zdb_id as gene_zdb_id
                    from marker
                         join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                         join marker_type_group on mtgrpmem_mrkr_type_group = mtgrp_name
                    where mtgrp_searchable = 't'"
           where="gene_zdb_id=gene.id"
           cacheImpl="SortedMapBackedCache"/>

   <entity name="gene_attribution"
           datasource="db" query="select recattrib_data_zdb_id as data_zdb_id, count(recattrib_source_zdb_id) as attribution_count
                  from marker
                       join record_attribution on recattrib_data_zdb_id = mrkr_zdb_id
                       join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                            and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))
                  group by 1"
           where="data_zdb_id=gene.id"
           cacheImpl="SortedMapBackedCache"/>

   <entity name="gene_aliases"
             datasource="db" query="select dalias_alias alias, dalias_alias gene_previous_name, dalias_data_zdb_id
             from data_alias
                  join marker on dalias_data_zdb_id = mrkr_zdb_id
                  join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                            and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))"
            where="dalias_data_zdb_id=gene.id"
            cacheImpl="SortedMapBackedCache"/>

   <entity name="gene_replaced_ids"
             datasource="db" query="select zrepld_old_zdb_id alias, zrepld_old_zdb_id gene_previous_name, zrepld_new_zdb_id
             from zdb_replaced_data
                  join marker on zrepld_new_zdb_id = mrkr_zdb_id
                  join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                            and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))"
            where="zrepld_new_zdb_id=gene.id"
            cacheImpl="SortedMapBackedCache"/>


                <entity name="gene_ortholog"
                        datasource="db" query="select ortho_other_species_symbol as ortholog_other_species_symbol,
                                      ortho_other_species_name as ortholog_other_species_name,
                                      ortho_zebrafish_gene_zdb_id as gene_zdb_id
                                 from ortholog"
                        where="gene_zdb_id=gene.id"
                        cacheImpl="SortedMapBackedCache"/>

                <entity name="gene_ortholog_organism"
                        datasource="db" query="select organism_species as ortholog_organism,
                                      ortho_zebrafish_gene_zdb_id as gene_zdb_id
                                 from ortholog
				    join organism on organism_taxid = ortho_other_species_taxid
				    "
                        where="gene_zdb_id=gene.id"
                        cacheImpl="SortedMapBackedCache"/>

                <entity name="gene_omim"
                        datasource="db" query="select strip_omim(omimp_name) as disease,
                                      omimp_omim_id as omim_id,
                                      ortho_zebrafish_gene_zdb_id as gene_zdb_id
                              from omim_phenotype
                                     join ortholog on omimp_ortho_zdb_id = ortholog.ortho_zdb_id
                                     "
                        where="gene_zdb_id=gene.id"
                        cacheImpl="SortedMapBackedCache"/>

                <entity name="gene_disease"
                        datasource="db" query="select
                                term_name as disease,
                                term_ont_id as xref,
                                ortholog.ortho_zebrafish_gene_zdb_id as gene_zdb_id
                                from term
                                     join term_xref on tx_term_zdb_id = term_zdb_id
                                     join omimp_termxref_mapping on otm_tx_id = tx_pk_id
                                     join omim_phenotype on otm_omimp_id = omimp_pk_id
                                     join ortholog on omimp_ortho_zdb_id = ortho_zdb_id
                                where term_ontology = 'disease_ontology'
                                "
                        where="gene_zdb_id=gene.id"
                        cacheImpl="SortedMapBackedCache"/>

                <entity name="gene_expression_stage"
                        datasource="db" query="select this_stage.stg_name as stage, xpatex_gene_zdb_id as gene_zdb_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join stage start_stage on efs_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on efs_end_stg_zdb_id = end_stage.stg_zdb_id
                                join stage this_stage on this_stage.stg_hours_start &gt;= start_stage.stg_hours_start
                                                         and this_stage.stg_hours_end &lt;= end_stage.stg_hours_end
                            where start_stage.stg_name != 'Unknown'
                              and end_stage.stg_name != 'Unknown'
                              and this_stage.stg_name != 'Unknown';"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_expression_stage_unknowns"
                        datasource="db" query="select start_stage.stg_name as stage, xpatex_gene_zdb_id as gene_zdb_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join stage start_stage on efs_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on efs_end_stg_zdb_id = end_stage.stg_zdb_id
                            where (start_stage.stg_name = 'Unknown'
                                   OR end_stage.stg_name = 'Unknown')
                           union
                           select end_stage.stg_name as stage, xpatex_gene_zdb_id as gene_zdb_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join stage start_stage on efs_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on efs_end_stg_zdb_id = end_stage.stg_zdb_id
                            where (start_stage.stg_name = 'Unknown'
                                   OR end_stage.stg_name = 'Unknown');"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


                <entity name="gene_expressed_in_direct"
                        datasource="db" query="
                        select
                            term_ont_id as xref, term_name as anatomy_direct,
                             ee.xpatex_gene_zdb_id as gene_zdb_id
                        from expression_result er
                            join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                            join fish_experiment ge on ge.genox_zdb_id = ee.xpatex_genox_zdb_id
                            join fish on fish_zdb_id = ge.genox_fish_zdb_id
                            join genotype g on g.geno_zdb_id=fish_genotype_zdb_id
                            join term on er.xpatres_superterm_zdb_id=term_zdb_id
                        where ge.genox_is_std_or_generic_control='t'
                            and er.xpatres_expression_found='t'
                            and g.geno_is_wildtype='t'
                            and ee.xpatex_gene_zdb_id is not null

                        union
                        select
                           term_ont_id as xref, term_name as anatomy_direct,
                                 ee.xpatex_gene_zdb_id as gene_zdb_id
                            from expression_result er
                                join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                join fish_experiment ge on ge.genox_zdb_id = ee.xpatex_genox_zdb_id
                                join fish on fish_zdb_id = ge.genox_fish_zdb_id
                                join genotype g on g.geno_zdb_id=fish_genotype_zdb_id
                                join term  on er.xpatres_subterm_zdb_id=term_zdb_id
                            where ge.genox_is_std_or_generic_control='t'
                                and er.xpatres_expression_found='t'
                                and g.geno_is_wildtype='t'
                                and ee.xpatex_gene_zdb_id is not null


                           "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_expressed_in_parent"
                        datasource="db" query="select
                                                                                term_ont_id as xref, term_name as anatomy_parent,
                                                                                 ee.xpatex_gene_zdb_id as gene_zdb_id
                                                                            from expression_result er
                                                                                join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                                                                join fish_experiment ge on ge.genox_zdb_id = ee.xpatex_genox_zdb_id
                                                                                join fish on fish_zdb_id = ge.genox_fish_zdb_id
                                                                                join genotype g on g.geno_zdb_id=fish_genotype_zdb_id
                                                                                join all_term_contains on alltermcon_contained_zdb_id = er.xpatres_superterm_zdb_id
                                                                                join term on alltermcon_container_zdb_id=term_zdb_id
                                                                            where ge.genox_is_standard='t'
                                                                                and er.xpatres_expression_found='t'
                                                                                and g.geno_is_wildtype='t'
                                                                                and ee.xpatex_gene_zdb_id is not null

                                                union
                                                select                           term_ont_id as xref, term_name as anatomy_parent,
                                                                                 ee.xpatex_gene_zdb_id as gene_zdb_id
                                                                            from expression_result er
                                                                                join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                                                                join fish_experiment ge on ge.genox_zdb_id = ee.xpatex_genox_zdb_id
                                                                                join fish on fish_zdb_id = ge.genox_fish_zdb_id
                                                                                join genotype g on g.geno_zdb_id=fish_genotype_zdb_id
                                                                                join all_term_contains on alltermcon_contained_zdb_id = er.xpatres_subterm_zdb_id
                                                                                join term on alltermcon_container_zdb_id=term_zdb_id
                                                                            where ge.genox_is_standard='t'
                                                                                and er.xpatres_expression_found='t'
                                                                                and g.geno_is_wildtype='t'
                                                                                and ee.xpatex_gene_zdb_id is not null

                                                "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


                <entity name="gene_efg_expressed_in_direct"
                        datasource="db" query="select
                                    term_ont_id as xref, term_name as anatomy_direct,
                                     ee.xpatex_gene_zdb_id as gene_zdb_id
                                from expression_result er
                                    join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                    join term on er.xpatres_superterm_zdb_id=term_zdb_id
                                    join marker on ee.xpatex_gene_zdb_id = mrkr_zdb_id
                                    join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                         and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))
                                where er.xpatres_expression_found='t'
                                    and ee.xpatex_gene_zdb_id is not null
                                    and term_ontology='zebrafish_anatomy'
                                union
                                select
                                   term_ont_id as xref, term_name as anatomy_direct,
                                         ee.xpatex_gene_zdb_id as gene_zdb_id
                                    from expression_result er
                                        join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                        join term  on er.xpatres_subterm_zdb_id=term_zdb_id
                                        join marker on ee.xpatex_gene_zdb_id = mrkr_zdb_id
                                        join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                             and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))
                                    where er.xpatres_expression_found='t'
                                        and ee.xpatex_gene_zdb_id is not null
                                        and term_ontology='zebrafish_anatomy'
                                "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_efg_expressed_in_parent"
                        datasource="db" query="select
                                    term_ont_id as xref, term_name as anatomy_direct,
                                     ee.xpatex_gene_zdb_id as gene_zdb_id
                                from expression_result er
                                    join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                    join all_term_contains on alltermcon_contained_zdb_id = er.xpatres_superterm_zdb_id
                                    join term on alltermcon_container_zdb_id = term_zdb_id
                                    join marker on ee.xpatex_gene_zdb_id = mrkr_zdb_id
                                    join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                         and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))
                                where er.xpatres_expression_found='t'
                                    and ee.xpatex_gene_zdb_id is not null
                                    and term_ontology='zebrafish_anatomy'
                                union
                                select
                                   term_ont_id as xref, term_name as anatomy_direct,
                                         ee.xpatex_gene_zdb_id as gene_zdb_id
                                    from expression_result er
                                        join expression_experiment ee on ee.xpatex_zdb_id=er.xpatres_xpatex_zdb_id
                                        join all_term_contains on alltermcon_contained_zdb_id = er.xpatres_subterm_zdb_id
                                        join term on alltermcon_container_zdb_id = term_zdb_id
                                        join marker on ee.xpatex_gene_zdb_id = mrkr_zdb_id
                                        join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                             and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG'))
                                    where er.xpatres_expression_found='t'
                                        and ee.xpatex_gene_zdb_id is not null
                                        and term_ontology='zebrafish_anatomy'
                                "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


                <entity name="gene_affected_anatomy_direct"
                        datasource="db" query="
                            select term_ont_id as xref, term_name as affected_anatomy_direct, mfs_mrkr_zdb_id as gene_zdb_id
                              from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                             where term_zdb_id = psg_e1a_zdb_id
                               and psg_pg_id = pg_id
                               and pg_genox_zdb_id = mfs_genox_zdb_id
                               and ps.psg_tag = 'abnormal'
                               and term_ontology='zebrafish_anatomy'
                            union
                            select term_ont_id as xref, term_name as affected_anatomy_direct, mfs_mrkr_zdb_id as gene_zdb_id
                              from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                             where term_zdb_id = psg_e1b_zdb_id
                               and psg_pg_id = pg_id
                               and pg_genox_zdb_id = mfs_genox_zdb_id
                               and ps.psg_tag = 'abnormal'
                               and term_ontology='zebrafish_anatomy'
                            union
                            select term_ont_id as xref, term_name as affected_anatomy_direct, mfs_mrkr_zdb_id as gene_zdb_id
                              from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                             where term_zdb_id = psg_e1a_zdb_id
                               and psg_pg_id = pg_id
                               and pg_genox_zdb_id = mfs_genox_zdb_id
                               and ps.psg_tag = 'abnormal'
                               and term_ontology='zebrafish_anatomy'
                            union
                            select term_ont_id as xref, term_name as affected_anatomy_direct, mfs_mrkr_zdb_id as gene_zdb_id
                              from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                             where term_zdb_id = psg_e2b_zdb_id
                               and psg_pg_id = pg_id
                               and pg_genox_zdb_id = mfs_genox_zdb_id
                               and ps.psg_tag = 'abnormal'
                               and term_ontology='zebrafish_anatomy'
                            "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_affected_anatomy_parent"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_anatomy_parent, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                         where term_zdb_id = alltermcon_container_zdb_id
                           and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as affected_anatomy_parent, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                         where term_zdb_id = alltermcon_container_zdb_id
                           and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as affected_anatomy_parent, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                         where term_zdb_id = alltermcon_container_zdb_id
                           and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as affected_anatomy_parent, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                         where term_zdb_id = alltermcon_container_zdb_id
                           and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_affected_biological_process_direct"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_biological_process_direct, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                         where term_zdb_id = psg_e1a_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='biological_process'
                        union
                        select term_ont_id as xref, term_name as affected_biological_process_direct, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                         where term_zdb_id = psg_e1b_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='biological_process'
                        union
                        select term_ont_id as xref, term_name as affected_biological_process_direct, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                         where term_zdb_id = psg_e1a_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='biological_process'
                        union
                        select term_ont_id as xref, term_name as affected_biological_process_direct, mfs_mrkr_zdb_id as gene_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                         where term_zdb_id = psg_e2b_zdb_id
                           and psg_pg_id = pg_id
                           and pg_genox_zdb_id = mfs_genox_zdb_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='biological_process'
                       "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>
                <entity name="gene_affected_biological_process_parent"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_biological_process_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                 where term_zdb_id = alltermcon_container_zdb_id
                                                   and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='biological_process'
                                                union
                                                select term_ont_id as xref, term_name as affected_biological_process_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                 where term_zdb_id = alltermcon_container_zdb_id
                                                   and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='biological_process'
                                                union
                                                select term_ont_id as xref, term_name as affected_biological_process_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                 where term_zdb_id = alltermcon_container_zdb_id
                                                   and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='biological_process'
                                                union
                                                select term_ont_id as xref, term_name as affected_biological_process_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                 where term_zdb_id = alltermcon_container_zdb_id
                                                   and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='biological_process'
                                                "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


                <entity name="gene_affected_cellular_component_direct"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_cellular_component_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e1a_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='cellular_component'
                                                union
                                                select term_ont_id as xref, term_name as affected_cellular_component_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e1b_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='cellular_component'
                                                union
                                                select term_ont_id as xref, term_name as affected_cellular_component_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e1a_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='cellular_component'
                                                union
                                                select term_ont_id as xref, term_name as affected_cellular_component_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e2b_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='cellular_component'
                                               "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>
                <entity name="gene_affected_cellular_component_parent"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_cellular_component_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='cellular_component'
                                                                        union
                                                                        select term_ont_id as xref, term_name as affected_cellular_component_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='cellular_component'
                                                                        union
                                                                        select term_ont_id as xref, term_name as affected_cellular_component_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='cellular_component'
                                                                        union
                                                                        select term_ont_id as xref, term_name as affected_cellular_component_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='cellular_component'
                                                                       "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


                <entity name="gene_affected_molecular_function_direct"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_molecular_function_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e1a_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='molecular_function'
                                                union
                                                select term_ont_id as xref, term_name as affected_molecular_function_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e1b_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='molecular_function'
                                                union
                                                select term_ont_id as xref, term_name as affected_molecular_function_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e1a_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='molecular_function'
                                                union
                                                select term_ont_id as xref, term_name as affected_molecular_function_direct, mfs_mrkr_zdb_id as gene_zdb_id
                                                  from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term
                                                 where term_zdb_id = psg_e2b_zdb_id
                                                   and psg_pg_id = pg_id
                                                   and pg_genox_zdb_id = mfs_genox_zdb_id
                                                   and ps.psg_tag = 'abnormal'
                                                   and term_ontology='molecular_function'
                                               "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>
                <entity name="gene_affected_molecular_function_parent"
                        datasource="db" query="select term_ont_id as xref, term_name as affected_molecular_function_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='molecular_function'
                                                                        union
                                                                        select term_ont_id as xref, term_name as affected_molecular_function_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='molecular_function'
                                                                        union
                                                                        select term_ont_id as xref, term_name as affected_molecular_function_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='molecular_function'
                                                                        union
                                                                        select term_ont_id as xref, term_name as affected_molecular_function_parent, mfs_mrkr_zdb_id as gene_zdb_id
                                                                          from phenotype_observation_generated ps, phenotype_source_generated, mutant_fast_search, term, all_term_contains
                                                                         where term_zdb_id = alltermcon_container_zdb_id
                                                                           and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                                                           and psg_pg_id = pg_id
                                                                           and pg_genox_zdb_id = mfs_genox_zdb_id
                                                                           and ps.psg_tag = 'abnormal'
                                                                           and term_ontology='molecular_function'
                                                                       "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>



                <entity name="gene_phenotype_statement" transformer="HTMLStripTransformer"
                        datasource="db" query="

                             select distinct psg_short_name as phenotype_statement,
                                        mfs_mrkr_zdb_id as gene_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                 join term as super_1 on psg_e1a_zdb_id = super_1.term_zdb_id
                                 left outer join term as sub_1 on psg_e1b_zdb_id = sub_1.term_zdb_id
                                 join term as quality on psg_quality_zdb_id = quality.term_zdb_id
                                 left outer join term as super_2 on psg_e2a_zdb_id = super_2.term_zdb_id
                                 left outer join term as sub_2 on psg_e2b_zdb_id = sub_2.term_zdb_id
                            where psg_tag != 'normal'
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id">
                    <field column="phenotype_statement" stripHTML="true"/>
                </entity>


                <entity name="gene_misexpressed_gene" datasource="db" transformer="RegexTransformer"
                        query="select distinct misexpressed_gene.mrkr_abbrev || ',Any' as misexpressed_gene,
                                               mrkr_abbrev || ' misexpression' as expression_observation,
                                               mfs_mrkr_zdb_id as gene_zdb_id
                                from expression_experiment2
                                     join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                     join expression_result2 on xpatres_efs_id = efs_pk_id
                                     join expression_phenotype_term on ept_xpatres_id = xpatres_pk_id
                                     join marker as misexpressed_gene on xpatex_gene_zdb_id = mrkr_zdb_id
                                     join mutant_fast_search on mfs_genox_zdb_id = xpatex_genox_zdb_id;"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id">
                    <field name="misexpressed_gene" column="misexpressed_gene" splitBy=","/>
                </entity>

                <entity name="gene_molecular_function_direct"
                        datasource="db" query="select term_ont_id as xref, term_name as molecular_function_direct,
                                                       ev.mrkrgoev_mrkr_zdb_id as gene_zdb_id
                                                from term t
                                                    join marker_go_term_evidence ev on t.term_zdb_id=ev.mrkrgoev_term_zdb_id
                                                where term_ontology = 'molecular_function'

                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_molecular_function_parent"
                        datasource="db" query="select term_ont_id as xref, term_name as molecular_function_parent,
                                                       mrkrgoev_mrkr_zdb_id as gene_zdb_id
                                                from term
                                                    join all_term_contains on alltermcon_container_zdb_id = term_zdb_id
                                                    join marker_go_term_evidence on alltermcon_contained_zdb_id = mrkrgoev_term_zdb_id
                                                where term_ontology = 'molecular_function'
                                                ;
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>








                <entity name="gene_biological_process_direct"
                        datasource="db" query="select term_ont_id as xref, term_name as biological_process_direct,
                                                       ev.mrkrgoev_mrkr_zdb_id as gene_zdb_id
                                                from term t
                                                    join marker_go_term_evidence ev on t.term_zdb_id=ev.mrkrgoev_term_zdb_id
                                                where term_ontology = 'biological_process'
                                                ;
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_biological_process_parent"
                        datasource="db" query=" select term_ont_id as xref, term_name as biological_process_parent,
                                                       mrkrgoev_mrkr_zdb_id as gene_zdb_id
                                                from term
                                                    join all_term_contains on alltermcon_container_zdb_id = term_zdb_id
                                                    join marker_go_term_evidence on alltermcon_contained_zdb_id = mrkrgoev_term_zdb_id
                                                where term_ontology = 'biological_process'
                                                ;
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>











                <entity name="gene_cellular_component_direct"
                        datasource="db" query=" select term_ont_id as xref, term_name as cellular_component_direct,
                                                       ev.mrkrgoev_mrkr_zdb_id as gene_zdb_id
                                                from term t
                                                    join marker_go_term_evidence ev on t.term_zdb_id=ev.mrkrgoev_term_zdb_id
                                                where term_ontology = 'cellular_component'
                                                ;
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_cellular_component_parent"
                        datasource="db" query="                        select term_ont_id as xref, term_name as cellular_component_parent,
                                                       mrkrgoev_mrkr_zdb_id as gene_zdb_id
                                                from term
                                                    join all_term_contains on alltermcon_container_zdb_id = term_zdb_id
                                                    join marker_go_term_evidence on alltermcon_contained_zdb_id = mrkrgoev_term_zdb_id
                                                where term_ontology = 'cellular_component'
                                                ;
                        "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>












                <entity name="gene_accession"
                        datasource="db" query="select fdb_db_name || ':' || dblink_acc_num as related_accession,
                                                     dblink_linked_recid as gene_zdb_id
                                             from db_link, foreign_db_contains, foreign_db,
                                                  marker, marker_type_group_member
                                             where dblink_fdbcont_zdb_id = fdbcont_zdb_id
                                               and fdbcont_fdb_db_id = fdb_db_pk_id
                                               and dblink_linked_recid = mrkr_zdb_id
                                               and mtgrpmem_mrkr_type = mrkr_type
                                               and mtgrpmem_mrkr_type_group in ('GENEDOM','EFG')
                                               and dblink_acc_num not like 'OTTDARG%'
                        union
                                             select fdb_db_name || ':' || oef_accession_number as related_accession,
                                                     ortho_zebrafish_gene_zdb_id as gene_zdb_id
                                             from ortholog_external_reference, foreign_db_contains, foreign_db, ortholog
                                             where oef_fdbcont_zdb_id = fdbcont_zdb_id
                                               and fdbcont_fdb_db_id = fdb_db_pk_id
                                               and ortholog.ortho_zdb_id = oef_ortho_Zdb_id
                        union
                          select fdb_db_name || ':' || dblink_acc_num as related_accession,
                                                     mrel_mrkr_1_zdb_id as gene_zdb_id
                                             from db_link, foreign_db_contains, foreign_db,marker_relationship,
                                                   marker, marker_type_group_member
                                             where dblink_fdbcont_zdb_id = fdbcont_zdb_id
                                               and fdbcont_fdb_db_id = fdb_db_pk_id
                                               and mrkr_zdb_id = dblink_linked_recid
                                               and mtgrpmem_mrkr_type = mrkr_type
                                               and mtgrpmem_mrkr_type_group in ('TRANSCRIPT')
                                               and mrel_mrkr_2_zdb_id=dblink_linked_recid
                                               and dblink_acc_num like 'OTTDARG%'
                                               and mrel_type='gene produces transcript'
                           ;"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


            

                <entity name="gene_allele"
                        datasource="db" query="select feature_zdb_id as xref, feature_abbrev as allele, fmrel_mrkr_zdb_id as gene_zdb_id
                        from feature, feature_marker_relationship
                        where fmrel_ftr_zdb_id = feature_zdb_id
                          and fmrel_type in ('is allele of')
                          ;"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_chromosome"
                        datasource="db" query="select ul_chromosome as chromosome,
                                       mrkr_zdb_id as gene_zdb_id
                                from unique_location
                                     join marker on ul_data_zdb_id = mrkr_zdb_id
                                     join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                          and (mtgrpmem_mrkr_type_group in ('GENEDOM','EFG','TRANSCRIPT'))"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>


                <entity name="gene_ambig_chromosome"
                        datasource="db" query="select distinct 'ambiguous' as chromosome,
                                       sfclg_data_Zdb_id as gene_zdb_id
                                from sequence_feature_chromosome_location_generated
                                where sfclg_data_zdb_id not in (select ul_data_Zdb_id from unique_location where substring(ul_data_zdb_id from 1 for 8) = 'ZDB-GENE'
                                                                   or substring(ul_data_zdb_id from 1 for 7) = 'ZDB-EFG'
                                                                                                      or substring(ul_data_zdb_id from 1 for 11) = 'ZDB-TSCRIPT')
                                                                                                      and sfclg_data_zdb_id like 'ZDB-GENE%' group by sfclg_data_zdb_id,sfclg_chromosome having count(sfclg_Data_zdb_id)>1
                                                                                                      ;"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>




                <entity name="gene_markers_and_clones"
                        datasource="db" query="select clone.mrkr_abbrev as clone,
                             g_produces_t.mrel_mrkr_1_zdb_id as gene_zdb_id
                      from marker_relationship g_produces_t, marker_relationship c_contains_t, marker clone
                      where g_produces_t.mrel_type = 'gene produces transcript'
                        and c_contains_t.mrel_type = 'clone contains transcript'
                        and g_produces_t.mrel_mrkr_2_zdb_id = c_contains_t.mrel_mrkr_2_zdb_id
                        and c_contains_t.mrel_mrkr_1_zdb_id = clone.mrkr_zdb_id
                      UNION
                        select mrkr_abbrev as clone, mrel_mrkr_1_zdb_id as gene_zdb_id
                                              from marker , marker_relationship
                                             where mrel_mrkr_2_zdb_id = mrkr_zdb_id
                                              and mrel_type in ('gene contains small segment','gene encodes small segment')
                      UNION
                        select mrkr_abbrev as clone, mrel_mrkr_2_zdb_id as gene_zdb_id
                                              from marker , marker_relationship
                                             where mrel_mrkr_1_zdb_id = mrkr_zdb_id
                                             and mrel_type in ('clone contains gene')
                     ;  "
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_publication_xref"
                        datasource="db" query="select distinct mrkr_zdb_id as gene_zdb_id, recattrib_source_zdb_id as xref
                                from record_attribution, marker, marker_type_group_member
                                where recattrib_data_zdb_id = mrkr_zdb_id
                                  and mtgrpmem_mrkr_type = mrkr_type
                                  and mtgrpmem_mrkr_type_group in ('GENEDOM','EFG')
                                  ;"
                        cacheImpl="SortedMapBackedCache"
                        where="gene_zdb_id=gene.id"/>

                <entity name="gene_go_annotation_xref"
                        datasource="db" query="select
                            distinct mrkrgoev_mrkr_zdb_id as gene_zdb_id ,
                            mrkrgoev_term_zdb_id as xref
                            from term, marker_go_term_evidence
                            where term_ontology_id = 3
                            and mrkrgoev_term_zdb_id = term_zdb_id
                                                     ;"
                        where="gene_zdb_id=gene.id"
                        cacheImpl="SortedMapBackedCache"/>


            </entity>


   <entity name="marker"
               datasource="db" query="
select
    mrkr_zdb_id as id,
    case when mrkr_type = 'TSCRIPT' then rtrim('Gene / Transcript')
         else 'Marker / Clone' end as category,
    mrkrtype_type_display as type,
    mrkr_abbrev as name,
    mrkr_abbrev as proper_name,
    mrkr_abbrev as marker_abbrev,
    mrkr_name as full_name,
    mrkr_abbrev_order as name_sort,
       '/' || mrkr_zdb_id as url,
       to_date(get_date_from_id(mrkr_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
from marker, marker_types
where mrkr_type not in (
    SELECT mtgrpmem_mrkr_type
    FROM marker_type_group_member
    WHERE mtgrpmem_mrkr_type_group in ('GENEDOM', 'EFG')
  )
  and mrkr_type != 'ATB'
  and substring(mrkr_zdb_id from 1 for 9) != 'ZDB-TGCON'
  and mrkr_type != 'MRPHLNO'
  and mrkr_type != 'TALEN'
  and mrkr_type != 'CRISPR'
  and mrkr_type = marker_type
       ;
               ">

       <entity name="marker_typegroup" datasource="db"
               query="select mtgrp_display_name as typegroup,
                           mrkr_zdb_id
                    from marker
                         join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                         join marker_type_group on mtgrpmem_mrkr_type_group = mtgrp_name
                     where mtgrp_searchable = 't'"
               where="mrkr_zdb_id=marker.id"
               cacheImpl="SortedMapBackedCache"/>

       <entity name="marker_type_hierarchy"
               query="select 'Transcript' type_0,
                           tscriptt_display as type_1,
                           mrkr_zdb_id as mrkr_zdb_id
                    from marker
                         join transcript on tscript_mrkr_zdb_id = mrkr_zdb_id
                         join transcript_type on tscript_type_id = tscriptt_pk_id
                    where tscriptt_type in ('mRNA', 'disrupted domain',
                                            'polycistronic transcript',
                                            'transposable element',
                                            'V-gene', 'ncRNA');"
               where="mrkr_zdb_id=marker.id"
               cacheImpl="SortedMapBackedCache">
           <column name="type_0" column="type_0"/>
           <column name="type_1" column="type_1"/>
           <column name="type_2" column="type_2"/>
       </entity>

       <entity name="marker_type_hierarchy_ncRNA"
               query="select 'Transcript' type_0,
                             'ncRNA' as type_1,
                           tscriptt_display as type_2,
                           mrkr_zdb_id as mrkr_zdb_id
                    from marker
                         join transcript on tscript_mrkr_zdb_id = mrkr_zdb_id
                         join transcript_type on tscript_type_id = tscriptt_pk_id
                    where tscriptt_type in ('miRNA','piRNA','pre miRNA','pseudogenic transcript',
                                            'rRNA','scRNA','snRNA','snoRNA','tRNA','antisense',
                                            'aberrant processed transcript');"
               where="mrkr_zdb_id=marker.id"
               cacheImpl="SortedMapBackedCache">
           <column name="type_0" column="type_0"/>
           <column name="type_1" column="type_1"/>
           <column name="type_2" column="type_2"/>
       </entity>


       <entity name="marker_aliases"
               datasource="db" query="select dalias_alias alias, dalias_data_zdb_id from data_alias, marker
                   where dalias_data_zdb_id = mrkr_zdb_id;"
               where="dalias_data_zdb_id=marker.id"
               cacheImpl="SortedMapBackedCache" >
       </entity>

       <entity name="marker_attribution_count"
               datasource="db" query="
                    select recattrib_data_zdb_id as data_zdb_id, count(recattrib_source_zdb_id) as attribution_count
                    from record_attribution, marker
                    where recattrib_data_zdb_id = mrkr_zdb_id
                    group by 1;"
               where="data_zdb_id=marker.id"
               cacheImpl="SortedMapBackedCache"/>

       <entity name="marker_accession"
               datasource="db" query="select fdb_db_name || ': ' || dblink_acc_num as related_accession,
                             dblink_linked_recid
                     from db_link, foreign_db_contains, foreign_db
                     where dblink_fdbcont_zdb_id = fdbcont_zdb_id  and dblink_acc_num not like 'OTTDARG%'
                       and fdbcont_fdb_db_id = fdb_db_pk_id ;"
               cacheImpl="SortedMapBackedCache"
               where="dblink_linked_recid=marker.id"/>
       <entity name="marker_relations_1"
               datasource="db" query="select mrel_mrkr_1_zdb_id as marker_zdb_id,mrkr_abbrev as gene,mrkr_name as gene_full_name
                      from marker , marker_relationship
                     where mrel_mrkr_2_zdb_id = mrkr_zdb_id
                      and mrel_type in ('clone contains gene','clone contains small segment');"
                     cacheImpl="SortedMapBackedCache"
               where="marker_zdb_id=marker.id"/>

       <entity name="marker_related_genes"
               datasource="db" query="select gene.mrkr_abbrev as gene,
                             gene.mrkr_name as gene_full_name,
                             c_contains_t.mrel_mrkr_1_zdb_id as marker_zdb_id
                      from marker_relationship g_produces_t, marker_relationship c_contains_t, marker gene
                      where g_produces_t.mrel_type = 'gene produces transcript'
                        and c_contains_t.mrel_type = 'clone contains transcript'
                        and g_produces_t.mrel_mrkr_2_zdb_id = c_contains_t.mrel_mrkr_2_zdb_id
                        and g_produces_t.mrel_mrkr_1_zdb_id = gene.mrkr_zdb_id
                      UNION
                        select mrkr_abbrev as gene,mrkr_name as gene_full_name, mrel_mrkr_2_zdb_id as marker_zdb_id
                                              from marker , marker_relationship
                                             where mrel_mrkr_1_zdb_id = mrkr_zdb_id
                                              and mrel_type in ('gene contains small segment','gene encodes small segment')
                      UNION
                        select mrkr_abbrev as gene,mrkr_name as gene_full_name, mrel_mrkr_2_zdb_id as marker_zdb_id
                                              from marker , marker_relationship
                                             where mrel_mrkr_2_zdb_id = mrkr_zdb_id
                                             and mrel_type in ('clone contains gene');"
               cacheImpl="SortedMapBackedCache"
               where="marker_zdb_id=marker.id"/>

       <entity name="marker_related_gene_aliases"
               datasource="db" query="select dalias_alias as gene_previous_name,
                             c_contains_t.mrel_mrkr_1_zdb_id as marker_zdb_id
                      from marker_relationship g_produces_t, marker_relationship c_contains_t, data_alias
                      where g_produces_t.mrel_type = 'gene produces transcript'
                        and c_contains_t.mrel_type = 'clone contains transcript'
                        and g_produces_t.mrel_mrkr_2_zdb_id = c_contains_t.mrel_mrkr_2_zdb_id 
                        and g_produces_t.mrel_mrkr_1_zdb_id = dalias_data_zdb_id
                    UNION
                    select dalias_alias as gene_previous_name, mrel_mrkr_2_zdb_id as marker_zdb_id
                                          from data_alias , marker_relationship
                                         where mrel_mrkr_1_zdb_id = dalias_data_zdb_id
                                          and mrel_type in ('gene contains small segment','gene encodes small segment')
                    UNION
                    select dalias_alias as gene_previous_name, mrel_mrkr_2_zdb_id as marker_zdb_id
                                          from data_alias, marker_relationship
                                         where mrel_mrkr_2_zdb_id = dalias_data_zdb_id
                                         and mrel_type in ('clone contains gene');"
               cacheImpl="SortedMapBackedCache"
               where="marker_zdb_id=marker.id"/>

       <entity name="marker_chromosome"
               datasource="db" query="select ul_chromosome as chromosome,
       ul_data_zdb_id as marker_zdb_id
from unique_location
where substring(ul_data_zdb_id from 1 for 8) != 'ZDB-GENE'
  and substring(ul_data_zdb_id from 1 for 7) != 'ZDB-EFG'"
               cacheImpl="SortedMapBackedCache"
               where="marker_zdb_id=marker.id"/>


       <entity name="marker_ambig_chromosome"
               datasource="db" query="select distinct 'ambiguous' as chromosome,
                                               sfclg_data_Zdb_id as marker_zdb_id
                                        from sequence_feature_chromosome_location_generated
                                        where not exists (select ul_data_Zdb_id from unique_location where ul_data_zdb_id = sfclg_data_zdb_id)
                                        group by sfclg_data_zdb_id,sfclg_chromosome
                                        having count(sfclg_Data_zdb_id)>1;"
               cacheImpl="SortedMapBackedCache"
               where="marker_zdb_id=marker.id"/>

       <entity name="marker_supplier"
               datasource="db" query=" select lab.zdb_id as xref, lab.name as source, idsup_data_zdb_id
                           from int_data_supplier, lab, marker, marker_type_group_member
                           where idsup_data_zdb_id = mrkr_zdb_id
                             and mtgrpmem_mrkr_type = mrkr_type
                             and mtgrpmem_mrkr_type_group not in ('ATB','GENEDOM','EFG')
                             and idsup_supplier_zdb_id = lab.zdb_id
                           union
                           select company.zdb_id as xref, company.name as source, idsup_data_zdb_id
                           from int_data_supplier, company, marker, marker_type_group_member
                            where idsup_data_zdb_id = mrkr_zdb_id
                             and mtgrpmem_mrkr_type = mrkr_type
                             and mtgrpmem_mrkr_type_group not in ('ATB','GENEDOM','EFG')
                             and idsup_supplier_zdb_id = company.zdb_id;"
               cacheImpl="SortedMapBackedCache"
               where="idsup_data_zdb_id=marker.id"/>



       <entity name="marker_mrel_xrefs"
                datasource="db" query="
                select mrel_mrkr_1_zdb_id as xref, mrel_mrkr_2_zdb_id as mrkr_zdb_id
                from marker_relationship,marker, marker_type_group_member
                where mrel_mrkr_2_zdb_id = mrkr_zdb_id
                  and mtgrpmem_mrkr_type = mrkr_type
                  and mtgrpmem_mrkr_type_group not in ('ATB','GENEDOM')
                union
                select mrel_mrkr_2_zdb_id as xref, mrel_mrkr_1_zdb_id as mrkr_zdb_id
                from marker_relationship,marker, marker_type_group_member
                where mrel_mrkr_2_zdb_id = mrkr_zdb_id
                  and mtgrpmem_mrkr_type = mrkr_type
                  and mtgrpmem_mrkr_type_group not in ('ATB','GENEDOM')"
                cacheImpl="SortedMapBackedCache"
                where="marker_zdb_id=marker.id"/>

<!--       <entity name="marker_authors" datasource="db" query="
                    select distinct person.full_name as author, person.zdb_id as xref, recattrib_data_zdb_id
                    from person, int_person_pub, record_attribution, marker
                    where recattrib_source_zdb_id = int_person_pub.target_id
                      and int_person_pub.source_id = person.zdb_id
                      and recattrib_data_zdb_id = mrkr_zdb_id
                      and recattrib_data_zdb_id[1,8]!='ZDB-GENE';"
               cacheImpl="SortedMapBackedCache"
               where="recattrib_data_zdb_id=marker.id"/>-->

       <!--     <entity name="marker_publication_xref"
               datasource="db" query="select distinct mrkr_zdb_id as marker_zdb_id, recattrib_source_zdb_id as xref
from record_attribution, marker
where recattrib_data_zdb_id = mrkr_zdb_id
  and mrkr_zdb_id[1,8] != 'ZDB-GENE';"
               cacheImpl="SortedMapBackedCache"
               where="marker_zdb_id=marker.id"/>-->


   </entity>












       <entity name="fish"
               datasource="db" query="
SELECT fish_zdb_id     AS id, 
       '/' 
       || fish_zdb_id  AS url, 
       fish_name       AS name, 
       fish_name       AS full_name, 
       fish_name       AS proper_name, 
       fish_name_order AS name_sort, 
       'Fish'          AS category,
       geno_zdb_id     AS related_accession,
       fish_order      AS complexity,
       to_date(get_date_from_id(fish_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
FROM   fish 
       JOIN genotype 
         ON fish_genotype_zdb_id = geno_zdb_id 
WHERE  ( NOT geno_is_wildtype 
          OR ( geno_is_wildtype 
               AND EXISTS (SELECT 'x' 
                           FROM   fish_str 
                           WHERE  fishstr_fish_zdb_id = fish_zdb_id) ) ) 
       AND NOT EXISTS (SELECT 'x' 
                       FROM   genotype_background 
                       WHERE  genoback_geno_zdb_id = geno_zdb_id) 
UNION 
SELECT fish_zdb_id     AS id, 
       '/' 
       || fish_zdb_id  AS url, 
       fish_name 
       || ' (' 
       || bg.geno_handle 
       || ')'          AS name, 
       fish_name       AS full_name, 
       fish_name       AS proper_name, 
       fish_name_order AS name_sort, 
       'Fish'          AS category,
       g.geno_zdb_id     AS related_accession,
       fish_order      AS complexity,
       to_date(get_date_from_id(fish_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date 
FROM   fish, 
       genotype AS g, 
       genotype AS bg, 
       genotype_background 
WHERE  ( NOT g.geno_is_wildtype 
          OR ( g.geno_is_wildtype 
               AND EXISTS (SELECT 'x' 
                           FROM   fish_str 
                           WHERE  fishstr_fish_zdb_id = fish_zdb_id) ) ) 
       AND fish_genotype_zdb_id = g.geno_zdb_id 
       AND genoback_geno_zdb_id = g.geno_zdb_id 
       AND genoback_background_zdb_id = bg.geno_zdb_id;
                 ">

           <entity name="fish_reporter_line_category"
                   query="select 'Reporter Line' as category, fish_zdb_id
                                 from fish
                                  where fish_genotype_zdb_id in (
                                       select genofeat_geno_zdb_id
                                       from genotype_feature
                                            join feature_marker_relationship
                                              on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                       where fmrel_type = 'contains innocuous sequence feature')
                                   and  fish_genotype_zdb_id not in (
                                           select genofeat_geno_zdb_id
                                           from genotype_feature
                                                join feature_marker_relationship
                                      on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                       where fmrel_type != 'contains innocuous sequence feature')
                                   and fish_zdb_id not in (select fishstr_fish_zdb_id from fish_str)"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_feature"
                   query="select
                            feature_abbrev as sequence_alteration,
                            ftrtype_type_display as mutation_type,
                            feature_zdb_id as xref,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join feature_type on ftrtype_name = feature_type;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <!-- this probably shouldn't actually come in as alias because it will get boosted higher, but
                adding a sequence_alteration_alias field seems like a bit too much... -->
           <entity name="fish_feature_alias"
                   query="select
                            dalias_alias as alias,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                 join data_alias on dalias_data_zdb_id = fmrel_ftr_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_feature_gene"
                   query="select
                            mrkr_abbrev as affected_gene,
                            mrkr_name as affected_gene_full_name,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker on fmrel_mrkr_zdb_id = mrkr_zdb_id
                            where mrkr_type in ('GENE','GENEP');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_feature_gene_previous_name"
                   query="select
                            dalias_alias as affected_gene_previous_name,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker on fmrel_mrkr_zdb_id = mrkr_zdb_id
                                 join data_alias on dalias_data_zdb_id = mrkr_zdb_id
                            where mrkr_type in ('GENE','GENEP');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="fish_str"
                   datasource="db"
                   query="select
                            mrkr_abbrev as sequence_targeting_reagent,
                            mrkr_zdb_id as xref,
                            fishstr_fish_zdb_id as fish_zdb_id
                            from fish_str
                                 join marker on fishstr_str_zdb_id = mrkr_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_str_gene"
                   query="select
                            mrkr_abbrev as affected_gene,
                            mrkr_name as affected_gene_full_name,
                            fishstr_fish_zdb_id as fish_zdb_id
                            from fish_str
                                 join marker_relationship on fishstr_str_zdb_id = mrel_mrkr_1_zdb_id
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_str_gene_previous_name"
                   query="select
                            dalias_alias as affected_gene_previous_name,
                            fishstr_fish_zdb_id as fish_zdb_id
                            from fish_str
                                 join marker_relationship on fishstr_str_zdb_id = mrel_mrkr_1_zdb_id
                                 join data_alias on mrel_mrkr_2_zdb_id = dalias_data_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_str_via_created_feature"
                   datasource="db"
                   query="select
                            mrkr_abbrev as sequence_targeting_reagent,
                            mrkr_zdb_id as xref,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                 join marker on fmrel_mrkr_zdb_id = mrkr_zdb_id and fmrel_type = 'created by';"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_str_via_created_feature_gene"
                   query="select
                            mrkr_abbrev as gene,
                            mrkr_name as gene_full_name,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                 join marker_relationship on fmrel_mrkr_zdb_id = mrel_mrkr_1_zdb_id and fmrel_type = 'created by'
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id
                            where mrkr_type in ('GENE','GENEP');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_str_via_created_feature_gene_previous_name"
                   query="select
                            dalias_alias as gene_previous_name,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                 join marker_relationship on fmrel_mrkr_zdb_id = mrel_mrkr_1_zdb_id and fmrel_type = 'created by'
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id
                                 join data_alias on dalias_data_zdb_id = mrkr_zdb_id
                            where mrkr_type in ('GENE','GENEP');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="fish_construct"
                   query="select
                            mrkr_name as construct,
                            mrkr_name as construct_name,
                            mrkr_zdb_id as xref,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker on mrkr_zdb_id = fmrel_mrkr_zdb_id
                            where fmrel_type in ('contains innocuous sequence feature','contains phenotypic sequence feature');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_regulatory_region"
                   query="select
                            mrkr_abbrev as regulatory_region,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker_relationship on mrel_mrkr_1_zdb_id = fmrel_mrkr_zdb_id
                                                          and mrel_type = 'promoter of'
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_reporter_gene"
                   query="select
                            mrkr_abbrev as reporter_gene,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker_relationship on mrel_mrkr_1_zdb_id = fmrel_mrkr_zdb_id
                                                          and mrel_mrkr_2_zdb_id like 'ZDB-EFG%'
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_development_stage"
                   query="select
                            this_stage.stg_name as stage,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker_relationship on mrel_mrkr_1_zdb_id = fmrel_mrkr_zdb_id
                                                          and mrel_type = 'promoter of'
                                 join fish_experiment on genox_fish_zdb_id = fish_zdb_id
                                 join expression_experiment2 on xpatex_genox_zdb_id = genox_zdb_id
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join stage start_stage on start_stage.stg_zdb_id = efs_start_stg_zdb_id
				 join stage end_stage on end_stage.stg_zdb_id = efs_end_stg_zdb_id
				 join stage this_stage on this_stage.stg_hours_start &gt;= start_stage.stg_hours_start
                                                   and this_stage.stg_hours_end &lt;= end_stage.stg_hours_end;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="reporter_line_image"
                   query="select distinct
                     case
                       when img_image_with_annotation is not null
                       then img_image_with_annotation
                       else img_image end as image,
                       img_thumbnail as thumbnail,
                       'true' as has_image,
                       img_zdb_id,
                       fish_zdb_id
                       from fish
                            join fish_experiment on genox_fish_zdb_id = fish_zdb_id
                            join expression_experiment on genox_zdb_id = xpatex_genox_zdb_id
                            join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                            join image on img_fig_zdb_id = efs_fig_zdb_id
                      where fish_genotype_zdb_id in (
                                 select genofeat_geno_zdb_id
                                 from genotype_feature
                                      join feature_marker_relationship
                                        on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                 where fmrel_type = 'contains innocuous sequence feature')
                             and  fish_genotype_zdb_id not in (
                                     select genofeat_geno_zdb_id
                                     from genotype_feature
                                          join feature_marker_relationship
                                on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                 where fmrel_type != 'contains innocuous sequence feature')
                             and fish_zdb_id not in (select fishstr_fish_zdb_id from fish_str);"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_construct_alias"
                   query="select
                            dalias_alias as construct,
                            dalias_alias as construct_name,
                            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join data_alias on dalias_data_zdb_id = fmrel_mrkr_zdb_id
                            where fmrel_type in ('contains innocuous sequence feature','contains phenotypic sequence feature');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_construct_coding_sequence"
                   datasource="db" query="select
                            mrkr_name as coding_sequence,
                            dalias_alias as coding_sequence_full_name,
                            mrkr_zdb_id as xref,
              	            fish_zdb_id
                            from fish
                                 join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id
                                 join feature on genofeat_feature_zdb_id = feature_zdb_id
                              	 join feature_marker_relationship on fmrel_ftr_zdb_id = feature_zdb_id
                                 join marker_relationship on mrel_mrkr_1_zdb_id	= fmrel_mrkr_zdb_id
       	       	       	       	 join marker on mrkr_zdb_id = mrel_mrkr_2_zdb_id
      	      	      	      	 left outer join data_alias on dalias_data_zdb_id = mrkr_zdb_id
                            where fmrel_type in ('contains innocuous sequence feature','contains phenotypic sequence feature')
       	       	       	      and mrel_type = 'coding sequence of';"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_expressed_gene_names"
                   datasource="db" query="select mrkr_abbrev as expressed_gene,
                                                 mrkr_name as expressed_gene_full_name,
                                                 genox_fish_zdb_id as fish_zdb_id
                                          from fish_experiment
                                               join expression_experiment on xpatex_genox_zdb_id = genox_zdb_id
                                               join marker on xpatex_gene_zdb_id = mrkr_zdb_id
                                          where exists (select 'x' from expression_result
                                                        where xpatres_xpatex_zdb_id = xpatex_zdb_id
                                                          and xpatres_expression_found = 't');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_expressed_gene_alias"
                   datasource="db" query="select dalias_alias as expressed_gene_previous_name,
                                                 genox_fish_zdb_id as fish_zdb_id
                                            from fish_experiment
                                                 join expression_experiment on xpatex_genox_zdb_id = genox_zdb_id
                                                 join data_alias on xpatex_gene_zdb_id = dalias_data_zdb_id
                                            where exists (select 'x' from expression_result
                                                          where xpatres_xpatex_zdb_id = xpatex_zdb_id
                                                            and xpatres_expression_found = 't');"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_background"
                   datasource="db" query="select geno_display_name as background, fish_zdb_id
                                    from fish, genotype_background, genotype
                                    where fish_genotype_zdb_id = genoback_geno_zdb_id
                                      and geno_zdb_id = genoback_background_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>




           <entity name="fish_disease" transformer="RegexTransformer"
                   datasource="db" query="select distinct term_name || '|Any' as disease,
                                                 term_ont_id,
                                                 genox_fish_zdb_id
                                          from term
                                          inner join disease_annotation on term.term_zdb_id = disease_annotation.dat_term_zdb_id
                                          inner join disease_annotation_model on disease_annotation.dat_zdb_id = disease_annotation_model.damo_dat_zdb_id
                                          inner join fish_experiment on fish_experiment.genox_zdb_id = disease_annotation_model.damo_genox_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="genox_fish_zdb_id=fish.id">
               <field name="disease" column="disease" splitBy="\|"/>
           </entity>



           <entity name="fish_phenotype_observation_generated" transformer="HTMLStripTransformer"
                   datasource="db" query="select distinct psg_short_name as phenotype_statement,
       genox_fish_zdb_id as fish_zdb_id
from phenotype_observation_generated
     join phenotype_source_generated on psg_pg_id = pg_id
     join fish_experiment on pg_genox_zdb_id = genox_zdb_id
     join term as super_1 on psg_e1a_zdb_id = super_1.term_zdb_id
     left outer join term as sub_1 on psg_e1b_zdb_id = sub_1.term_zdb_id
     join term as quality on psg_quality_zdb_id = quality.term_zdb_id
     left outer join term as super_2 on psg_e2a_zdb_id = super_2.term_zdb_id
     left outer join term as sub_2 on psg_e2b_zdb_id = sub_2.term_zdb_id
where psg_tag != 'normal'  "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache">
               <field column="phenotype_statement" stripHTML="true"/>
           </entity>



           <entity name="fish_misexpressed_gene" datasource="db" transformer="RegexTransformer"
                   query="select mrkr_abbrev || ',Any' as misexpressed_gene,
                                 mrkr_abbrev || ' misexpression' as expression_observation,
                                   genox_fish_zdb_id as fish_zdb_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join expression_result2 on xpatres_efs_id = efs_pk_id
                                 join expression_phenotype_term on ept_xpatres_id = xpatres_pk_id
                                 join marker as gene on xpatex_gene_zdb_id = mrkr_zdb_id
                                 join fish_experiment on genox_zdb_id = xpatex_genox_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache">
               <field name="misexpressed_gene" column="misexpressed_gene" splitBy=","/>
           </entity>

           <entity name="fish_affected_anatomy_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_anatomy_direct, genox_fish_zdb_id as fish_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                    where term_zdb_id = psg_e1a_zdb_id
                      and psg_pg_id = pg_id
                      and pg_genox_zdb_id = genox_zdb_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='zebrafish_anatomy'
                   union
                   select term_ont_id as xref, term_name as affected_anatomy_direct, genox_fish_zdb_id as fish_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                    where term_zdb_id = psg_e1b_zdb_id
                      and psg_pg_id = pg_id
                      and pg_genox_zdb_id = genox_zdb_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='zebrafish_anatomy'
                   union
                   select term_ont_id as xref, term_name as affected_anatomy_direct, genox_fish_zdb_id as fish_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                    where term_zdb_id = psg_e2a_zdb_id
                      and psg_pg_id = pg_id
                      and pg_genox_zdb_id = genox_zdb_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='zebrafish_anatomy'
                   union
                   select term_ont_id as xref, term_name as affected_anatomy_direct, genox_fish_zdb_id as fish_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                    where term_zdb_id = psg_e2b_zdb_id
                      and psg_pg_id = pg_id
                      and pg_genox_zdb_id = genox_zdb_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='zebrafish_anatomy'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_affected_anatomy_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_anatomy_parent, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                       where term_zdb_id = alltermcon_container_zdb_id
                                         and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='zebrafish_anatomy'
                                      union
                                      select term_ont_id as xref, term_name as affected_anatomy_parent, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                       where term_zdb_id = alltermcon_container_zdb_id
                                         and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='zebrafish_anatomy'
                                      union
                                      select term_ont_id as xref, term_name as affected_anatomy_parent, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                       where term_zdb_id = alltermcon_container_zdb_id
                                         and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='zebrafish_anatomy'
                                      union
                                      select term_ont_id as xref, term_name as affected_anatomy_parent, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                       where term_zdb_id = alltermcon_container_zdb_id
                                         and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='zebrafish_anatomy';"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>



           <entity name="fish_phenotype_quality_direct"
                   datasource="db" query="select distinct
                   term_ont_id as xref, term_name as phenotype_quality_direct,
                   genox_fish_zdb_id as fish_zdb_id
                   from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                   where term_zdb_id = psg_quality_zdb_id
                    and psg_pg_id = pg_id
                    and pg_genox_zdb_id = genox_zdb_id
                    and ps.psg_tag = 'abnormal'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_phenotype_quality_parent"
                   datasource="db" query=" select distinct
                   term_ont_id as xref, term_name as phenotype_quality_parent,
                   genox_fish_zdb_id as fish_zdb_id
                   from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                   where term_zdb_id = alltermcon_container_zdb_id
                    and alltermcon_contained_zdb_id = psg_quality_zdb_id
                    and psg_pg_id = pg_id
                    and pg_genox_zdb_id = genox_zdb_id
                    and ps.psg_tag = 'abnormal'
                    and alltermcon_container_zdb_id != alltermcon_contained_zdb_id;"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="fish_affected_cellular_component_direct"
                   datasource="db" query="            select term_ont_id as xref, term_name as affected_cellular_component_direct, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                       where term_zdb_id = psg_e1a_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='cellular_component'
                                      union
                                      select term_ont_id as xref, term_name as affected_cellular_component_direct, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                       where term_zdb_id = psg_e1b_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='cellular_component'
                                      union
                                      select term_ont_id as xref, term_name as affected_cellular_component_direct, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                       where term_zdb_id = psg_e2a_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='cellular_component'
                                      union
                                      select term_ont_id as xref, term_name as affected_cellular_component_direct, genox_fish_zdb_id as fish_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                       where term_zdb_id = psg_e2b_zdb_id
                                         and psg_pg_id = pg_id
                                         and pg_genox_zdb_id = genox_zdb_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='cellular_component';
                    "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>
           <entity name="fish_phenotype__cellular_component_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_cellular_component_parent, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                          where term_zdb_id = alltermcon_container_zdb_id
                                                            and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='cellular_component'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_cellular_component_parent, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                          where term_zdb_id = alltermcon_container_zdb_id
                                                            and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='cellular_component'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_cellular_component_parent, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                          where term_zdb_id = alltermcon_container_zdb_id
                                                            and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='cellular_component'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_cellular_component_parent, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                          where term_zdb_id = alltermcon_container_zdb_id
                                                            and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='cellular_component'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_affected_biological_process_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_biological_process_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e1a_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='biological_process'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_biological_process_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e1b_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='biological_process'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_biological_process_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e2a_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='biological_process'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_biological_process_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e2b_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='biological_process'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>
           <entity name="fish_affected_biological_process_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_biological_process_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='biological_process'
                                                                            union
                                                                            select term_ont_id as xref, term_name as affected_biological_process_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='biological_process'
                                                                            union
                                                                            select term_ont_id as xref, term_name as affected_biological_process_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='biological_process'
                                                                            union
                                                                            select term_ont_id as xref, term_name as affected_biological_process_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='biological_process'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="fish_affected_molecular_function_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_molecular_function_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e1a_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='molecular_function'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_molecular_function_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e1b_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='molecular_function'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_molecular_function_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e2a_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='molecular_function'
                                                         union
                                                         select term_ont_id as xref, term_name as affected_molecular_function_direct, genox_fish_zdb_id as fish_zdb_id
                                                           from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term
                                                          where term_zdb_id = psg_e2b_zdb_id
                                                            and psg_pg_id = pg_id
                                                            and pg_genox_zdb_id = genox_zdb_id
                                                            and ps.psg_tag = 'abnormal'
                                                            and term_ontology='molecular_function'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>
           <entity name="fish_affected_molecular_function_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_molecular_function_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='molecular_function'
                                                                            union
                                                                            select term_ont_id as xref, term_name as affected_molecular_function_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='molecular_function'
                                                                            union
                                                                            select term_ont_id as xref, term_name as affected_molecular_function_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='molecular_function'
                                                                            union
                                                                            select term_ont_id as xref, term_name as affected_molecular_function_parent, genox_fish_zdb_id as fish_zdb_id
                                                                              from phenotype_observation_generated ps, phenotype_source_generated, fish_experiment, term, all_term_contains
                                                                             where term_zdb_id = alltermcon_container_zdb_id
                                                                               and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                                                               and psg_pg_id = pg_id
                                                                               and pg_genox_zdb_id = genox_zdb_id
                                                                               and ps.psg_tag = 'abnormal'
                                                                               and term_ontology='molecular_function'; "
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>




           <entity name="fish_expression_anatomy_direct"
                   datasource="db" query="
select
                                             term_ont_id as xref, term_name as expression_anatomy_direct,
                                             genox_fish_zdb_id as fish_zdb_id
                                      from fish_experiment,
                                           expression_experiment,
                                           expression_result,
                                           term
                                      where xpatres_superterm_zdb_id = term_zdb_id
                                        and genox_zdb_id = xpatex_genox_zdb_id
                                        and xpatres_xpatex_zdb_id = xpatex_zdb_id
                                           and term_ontology='zebrafish_anatomy'
                                           and xpatres_expression_found='t'
union
select
                                             term_ont_id as xref, term_name as expression_anatomy_direct,
                                             genox_fish_zdb_id as fish_zdb_id
                                      from fish_experiment,
                                           expression_experiment,
                                           expression_result,
                                           term
                                      where xpatres_subterm_zdb_id = term_zdb_id
                                        and genox_zdb_id = xpatex_genox_zdb_id
                                        and xpatres_xpatex_zdb_id = xpatex_zdb_id
                                        and term_ontology='zebrafish_anatomy'
                                        and xpatres_expression_found='t';"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="fish_expression_anatomy_parent"
                   datasource="db" query="select
                                                                term_ont_id as xref, term_name as expression_anatomy_parent,
                                                                genox_fish_zdb_id as fish_zdb_id
                                                         from fish_experiment,
                                                              expression_experiment,
                                                              expression_result,
                                                              term,
                                                              all_term_contains
                                                         where xpatres_superterm_zdb_id = alltermcon_contained_zdb_id
                                                           and alltermcon_container_zdb_id = term_zdb_id
                                                           and genox_zdb_id = xpatex_genox_zdb_id
                                                           and xpatres_xpatex_zdb_id = xpatex_zdb_id
                                                              and term_ontology='zebrafish_anatomy'
                                                              and xpatres_expression_found='t'
                   union
                   select
                                                                term_ont_id as xref, term_name as expression_anatomy_parent,
                                                                genox_fish_zdb_id as fish_zdb_id
                                                         from fish_experiment,
                                                              expression_experiment,
                                                              expression_result,
                                                              term,
                                                              all_term_contains
                                                         where xpatres_subterm_zdb_id = alltermcon_contained_zdb_id
                                                           and alltermcon_container_zdb_id = term_zdb_id
                                                           and genox_zdb_id = xpatex_genox_zdb_id
                                                           and xpatres_xpatex_zdb_id = xpatex_zdb_id
                                                           and term_ontology='zebrafish_anatomy'
                                                           and xpatres_expression_found='t';"
                   where="fish_zdb_id=fish.id"
                   cacheImpl="SortedMapBackedCache"/>







       </entity>





       <entity name="construct"
               datasource="db" query="
                      select
                        cons_construct_zdb_id as id,
                        cons_pk_id as construct_pk_id,
                        'Construct' as category,
                        mrkrtype_type_display as type,
                        mrkr_comments as note,
                        cons_name as name,
                        cons_name as proper_name,
                        cons_name as construct_name,
                        cons_name as full_name,
                        mrkr_abbrev_order as name_sort,
                        cons_name as organism,
                        cons_name as reporter_color,
                        '/' || cons_construct_zdb_id as url,
                        to_date(get_date_from_id(cons_construct_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
                      from construct_search, marker, marker_types
                      where cons_construct_zdb_id = mrkr_zdb_id
                        and mrkr_type = marker_type
       ;">

      <entity name="construct_typegroup" datasource="db"
              query="select mtgrp_display_name as typegroup, mtgrp_name,
                           mrkr_zdb_id as construct_id
                    from marker
                         join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                         join marker_type_group on mtgrpmem_mrkr_type_group = mtgrp_name
                                               and mtgrp_name = 'SEARCHABLE_CONSTRUCT'
                    where mtgrp_searchable = 't'"
              where="construct_id=construct.id"
              cacheImpl="SortedMapBackedCache"/>

       <entity name="construct_aliases"
               datasource="db" query="select dalias_alias alias, dalias_alias construct_alias, dalias_data_zdb_id from data_alias
                      where substring(dalias_data_zdb_id from 1 for 9) in ('ZDB-TGCON','ZDB-PTCON','ZDB-GTCON','ZDB-ETCON') "
               where="dalias_data_zdb_id=construct.id"
               cacheImpl="SortedMapBackedCache" />

           <entity name="construct_attribution"
                   datasource="db" query="select cons_construct_zdb_id as construct_id, count(recattrib_source_zdb_id) as attribution_count
                            from record_attribution, construct_search
                            where recattrib_data_zdb_id = cons_construct_zdb_id
                            group by 1; "
                   where="construct_id=construct.id"
                   cacheImpl="SortedMapBackedCache" />

           <entity name="construct_gfrv"
                   datasource="db" query="
                   select
                     cgfrv_cs_id as construct_pk_id,
                     cgfrv_allele_gene_abbrev as inserted_in_gene,
                     cgfrv_feature_abbrev as sequence_alteration,
                     cgfrv_feature_zdb_id as xref,
                     cgfrv_lab_name as lab
                   from construct_gene_feature_result_view;"
                   where="construct_pk_id=construct.construct_pk_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="construct_inserted_in_gene_full_name"
                   datasource="db" query="select cgfrv_cs_id as construct_pk_id,
                                             mrkr_name as inserted_in_gene_full_name
                                      from construct_gene_feature_result_view, marker
                                      where cgfrv_allele_gene_zdb_id = mrkr_zdb_id;"
                   where="construct_pk_id=construct.construct_pk_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="construct_inserted_in_gene_previous_name"
                   datasource="db" query="select cgfrv_cs_id as construct_pk_id,
                                             dalias_alias as inserted_in_gene_previous_name
                                      from construct_gene_feature_result_view, data_alias
                                      where cgfrv_allele_gene_zdb_id = dalias_data_zdb_id;"
                   where="construct_pk_id=construct.construct_pk_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="construct_expressed_in_direct"
                   datasource="db" query="select DISTINCT term_ont_id as xref, term_name as expressed_in_parent, cc_construct_zdb_id as construct_id
                                            from expression_experiment
                                            join construct_component as efg on (xpatex_gene_zdb_id = efg.cc_component_zdb_id and cc_component_Type = 'coding sequence of')
                                            join expression_result on xpatres_xpatex_zdb_id = xpatex_zdb_id
                                            join term on (term_zdb_id = xpatres_superterm_zdb_id OR term_zdb_id = xpatres_subterm_zdb_id)
                                            join fish_experiment on xpatex_genox_zdb_id = genox_zdb_id
                                            join fish on genox_fish_zdb_id = fish_zdb_id
                                            join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                            join feature_marker_relationship on (genofeat_feature_zdb_id = fmrel_ftr_zdb_id and fmrel_mrkr_zdb_id = cc_construct_zdb_id)
                                             ;"
                   cacheImpl="SortedMapBackedCache"
                   where="construct_id=construct.id"/>
@PG_XML_COMMENT_OPEN@
           <entity name="construct_expressed_in_parent"
                   datasource="db" query="select DISTINCT term_ont_id as xref, term_name as expressed_in_parent, cc_construct_zdb_id as construct_id
                                            from expression_experiment
                                            join construct_component as efg on (xpatex_gene_zdb_id = efg.cc_component_zdb_id and cc_component_Type = 'coding sequence of')
                                            join expression_result on xpatres_xpatex_zdb_id = xpatex_zdb_id
                                            join all_term_contains on (alltermcon_contained_zdb_id = xpatres_superterm_zdb_id  or alltermcon_contained_zdb_id = xpatres_subterm_zdb_id)
                                            join term on alltermcon_container_zdb_id = term_zdb_id
                                            join fish_experiment on xpatex_genox_zdb_id = genox_zdb_id
                                            join fish on genox_fish_zdb_id = fish_zdb_id
                                            join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                            join feature_marker_relationship on (genofeat_feature_zdb_id = fmrel_ftr_zdb_id and fmrel_mrkr_zdb_id = cc_construct_zdb_id)
                                             ;"
                   where="construct_id=construct.id"
                   cacheImpl="SortedMapBackedCache"/>
@PG_XML_COMMENT_CLOSE@

<!--           <entity name="construct_authors"
                  datasource="db" query="
                        select person.zdb_id as xref, person.full_name as author, recattrib_data_zdb_id
                        from person, int_person_pub, record_attribution
                        where recattrib_source_zdb_id = int_person_pub.target_id
                          and int_person_pub.source_id = person.zdb_id
                          and recattrib_data_zdb_id[1,9] in ('ZDB-TGCON','ZDB-PTCON','ZDB-GTCON','ZDB-ETCON')"
                   cacheImpl="SortedMapBackedCache"
                   where="recattrib_data_zdb_id=construct.id">
           </entity>-->




           <!-- these mrel queries could be sped up by grabbing 3 relationships and using a case statement to change
                the column alias for mrkr_abbrev based on which relationship it is...  -->
           <entity name="construct_coding_promoter"
                   datasource="db" query="select mrel_mrkr_1_zdb_id, mrkr_abbrev as regulatory_region, mrkr_name as promoter_full_name
                          from marker_relationship, marker
                          where mrel_type = 'promoter of'
                            and mrel_mrkr_2_zdb_id = mrkr_zdb_id "
                   cacheImpl="SortedMapBackedCache"
                   where="mrel_mrkr_1_zdb_id=construct.id">
           </entity>

           <entity name="construct_coding_sequence"
                   datasource="db" query="select mrel_mrkr_1_zdb_id, mrkr_abbrev as coding_sequence, mrkr_name as coding_sequence_full_name
                          from marker_relationship, marker
                          where mrel_type = 'coding sequence of'
                            and mrel_mrkr_2_zdb_id = mrkr_zdb_id"
                         cacheImpl="SortedMapBackedCache"
                   where="mrel_mrkr_1_zdb_id=construct.id">
           </entity>

           <entity name="construct_regulatory_region"
                   datasource="db" query="select mrel_mrkr_1_zdb_id, mrkr_abbrev as engineered_region, mrkr_name as engineered_region_full_name
                          from marker_relationship, marker
                          where mrel_type = 'contains region'
                            and mrel_mrkr_2_zdb_id = mrkr_zdb_id "
                   cacheImpl="SortedMapBackedCache"
                   where="mrel_mrkr_1_zdb_id=construct.id">
           </entity>

           <entity name="construct_publication_xref"
                   datasource="db" query="select distinct cons_construct_zdb_id as construct_zdb_id, recattrib_source_zdb_id as xref
                            from record_attribution, construct_search
                            where recattrib_data_zdb_id = cons_construct_zdb_id
                            union
                            select distinct cons_construct_zdb_id as construct_zdb_id, recattrib_source_zdb_id as xref
                            from record_attribution, construct_search,feature_marker_relationship
                            where recattrib_data_zdb_id = fmrel_ftr_zdb_id
                            and fmrel_mrkr_zdb_id=cons_construct_zdb_id"

                   where="construct_zdb_id=construct.id"
                   cacheImpl="SortedMapBackedCache"/>


       </entity>

       <entity name="str"
               datasource="db" query="select
                        mrkr_zdb_id as id,
                        'Sequence Targeting Reagent (STR)' as category,
                        mrkr_abbrev as name,
                        mrkr_abbrev as proper_name,
                        mrkr_abbrev as marker_abbrev,
                        mrkr_name as full_name,
                        mrkrtype_type_display as type,
                        mrkr_zdb_id as str_zdb_id,
                        '/' || mrkr_zdb_id as url,
                        to_date(get_date_from_id(mrkr_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
                        from marker
                             join marker_types on mrkr_type = marker_type
                             join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                        where mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT';">

           <entity name="str_name_sort" datasource="db"
                   query="select nvl(gene.mrkr_abbrev_order,'') || ' ' || str.mrkr_abbrev_order as name_sort,
                                 str.mrkr_zdb_id as str_zdb_id
                            from marker str
                                 left outer join marker_relationship on  mrel_mrkr_1_zdb_id = str.mrkr_zdb_id
                                                          and mrel_type = 'knockdown reagent targets gene'
                                 left outer join marker gene on mrel_mrkr_2_zdb_id = gene.mrkr_zdb_id
                                 join marker_types on str.mrkr_type = marker_type
                                 join marker_type_group_member on mtgrpmem_mrkr_type = str.mrkr_type
                                                              and mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT';"
                   where="str_zdb_id=str.id"
                   cacheImpl="SortedMapBackedCache"/>

            <entity name="str_alias"
                    datasource="db" query="select
                            dalias_alias as alias,
                            mrkr_zdb_id as str_zdb_id
                            from data_alias
                                 join marker on mrkr_zdb_id = dalias_data_zdb_id
                                 join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                      and mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT';"
                    where="str_zdb_id=str.id"
                    cacheImpl="SortedMapBackedCache"/>

   <entity name="str_accession"
                        datasource="db" query="select fdb_db_name || ':' || dblink_acc_num as related_accession,
                                                     dblink_linked_recid as mrkr_zdb_id
                                             from db_link, foreign_db_contains, foreign_db
                                             where dblink_fdbcont_zdb_id = fdbcont_zdb_id
                                               and fdbcont_fdb_db_id = fdb_db_pk_id
                                               and (substring(dblink_linked_recid from 1 for 12) = 'ZDB-MRPHLNO-'
                                                    or substring(dblink_linked_recid from 1 for 11) = 'ZDB-CRISPR-'
                                                    or substring(dblink_linked_recid from 1 for 10) = 'ZDB-TALEN-')
                           ;"
                        cacheImpl="SortedMapBackedCache"
                        where="mrkr_zdb_id=str.id"/>

           <entity name="str_target"
                   datasource="db" query="select
                            mrkr_abbrev as target,
                            mrkr_name as target_full_name,
                            mrel_mrkr_1_zdb_id as str_zdb_id
                            from marker_relationship
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id
                            where mrel_type = 'knockdown reagent targets gene';"
                   where="str_zdb_id=str.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="str_target_previous_name"
                   datasource="db" query="select
                            dalias_alias as target_previous_name,
                            mrel_mrkr_1_zdb_id as str_zdb_id
                            from data_alias
                                 join marker_relationship on mrel_mrkr_2_zdb_id = dalias_data_zdb_id
                                 join marker on mrel_mrkr_1_zdb_id = mrkr_zdb_id
                            where mrel_type = 'knockdown reagent targets gene';"
                   where="str_zdb_id=str.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="str_source"
                   datasource="db" query="select
                            organization.zdb_id as xref, organization.name as source, ids_data_zdb_id as str_zdb_id
                              from int_data_source
                                   join marker on mrkr_zdb_id = ids_data_zdb_id
                                   join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                        and mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT'
                                   join lab organization on ids_source_zdb_id = organization.zdb_id
                            union
                            select
                            organization.zdb_id as xref, organization.name as source, ids_data_zdb_id as str_zdb_id
                              from int_data_source
                                   join marker on mrkr_zdb_id = ids_data_zdb_id
                                   join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                                        and mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT'
                                   join company organization on ids_source_zdb_id = organization.zdb_id;"
                   where="str_zdb_id=str.id"
                   cacheImpl="SortedMapBackedCache"/>
           <entity name="str_pub_xref"
                   datasource="db" query="select
                            pub_mini_ref as attributed_publication,
                            mrkr_zdb_id as str_zdb_id,
                            publication.zdb_id as xref
                            from marker, record_Attribution, marker_type_group_member, publication
                                 where mrkr_zdb_id=recattrib_data_zdb_id
                                   and publication.zdb_id = recattrib_source_zdb_id
                                   and mtgrpmem_mrkr_type = mrkr_type
                                   and mtgrpmem_mrkr_type_group = 'KNOCKDOWN_REAGENT'
                                 ;"
                   where="str_zdb_id=str.id"
                   cacheImpl="SortedMapBackedCache"/>

       </entity>

       <entity name="phenotype"
               datasource="db" query="select distinct
                        'Phenotype' as category,
                        '/' || pg_fig_zdb_id as url,
                        pg_fig_zdb_id as figure_id,
                        fish_name || ' from ' || nvl(pub_mini_ref,'--')
                                  || ' ' ||  nvl(fig_label,'') as name,
                        fish_name || ' from ' || nvl(pub_mini_ref,'--')
                                  || ' ' ||  nvl(fig_label,'') as full_name,
                        fish_name_order || pub_mini_ref || fig_full_label as name_order,
                        fig_zdb_id as xref,
                        pub_date as date,
                        fish_name as fish,
                        pgcm_source_id
                        || '|' || pg_fig_zdb_id
                        || '|' || pg_start_stg_zdb_id
                        || '|' || pg_end_stg_zdb_id
                         as pgcmid,
                        'pg-' || pg_id as id
                        from phenotype_source_generated
                        join phenotype_generated_curated_mapping on pg_id=pgcm_pg_id
                             join fish_experiment on pg_genox_zdb_id = genox_zdb_id
                             join fish on fish_zdb_id = genox_fish_zdb_id
                             join figure on pg_fig_zdb_id = fig_zdb_id
                             join publication on publication.zdb_id = fig_source_zdb_id
                             join stage start_stage on pg_start_stg_zdb_id = start_stage.stg_zdb_id
                             join stage end_stage on pg_end_stg_zdb_id = end_stage.stg_zdb_id;
              ">

           <entity name="phenotype_stage"
                   datasource="db" query="select this_stage.stg_name as stage, 'pg-' || pg_id as pg_id
                          from phenotype_source_generated
                                join stage start_stage on pg_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on pg_end_stg_zdb_id = end_stage.stg_zdb_id
                                join stage this_stage on this_stage.stg_hours_start &gt;= start_stage.stg_hours_start
                                                         and this_stage.stg_hours_end &lt;= end_stage.stg_hours_end
                            where start_stage.stg_name != 'Unknown'
                              and end_stage.stg_name != 'Unknown'
                              and this_stage.stg_name != 'Unknown';"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_stage_unknown" datasource="db"
                   query="select start_stage.stg_name as stage, 'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                join stage start_stage on pg_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on pg_end_stg_zdb_id = end_stage.stg_zdb_id
                            where (start_stage.stg_name = 'Unknown'
                                   OR end_stage.stg_name = 'Unknown')
                           union
                           select end_stage.stg_name as stage, 'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                join stage start_stage on pg_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on pg_end_stg_zdb_id = end_stage.stg_zdb_id
                            where (start_stage.stg_name = 'Unknown'
                                   OR end_stage.stg_name = 'Unknown');"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_publication_xref"
                   datasource="db" query="select fig_source_zdb_id as xref,
                                   'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join figure on pg_fig_zdb_id = fig_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_statement" transformer="HTMLStripTransformer"
                   datasource="db" query="select
                            distinct
                            psg_short_name as phenotype_statement,
                            'pg-' || pg_id as pg_id
                            from phenotype_observation_generated
                                 join phenotype_source_generated on psg_pg_id = pg_id
                            where psg_tag != 'normal';"
                   where="pg_id=phenotype.id"
                   cacheImpl="SortedMapBackedCache">
               <field column="phenotype_statement" stripHTML="true"/>
           </entity>

           <entity name="phenotype_misexpressed_gene" datasource="db" transformer="RegexTransformer"
                   query="select mrkr_abbrev || '!Any' as misexpressed_gene,
                                 mrkr_abbrev || ' misexpression' as expression_observation,
                                        'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join phenotype_observation_generated on psg_pg_id = pg_id
                                 join marker on mrkr_zdb_id = psg_mrkr_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id">
               <field name="misexpressed_gene" column="misexpressed_gene" splitBy="!"/>
           </entity>

           <entity name="phenotype_image"
                   datasource="db" query="select
                     case
                       when img_image_with_annotation is not null
                       then img_image_with_annotation
                       else img_image end as image,
                       img_thumbnail as thumbnail,
                       'true' as has_image,
                       img_zdb_id,
                       'pg-' || pg_id as pg_id
                       from phenotype_source_generated
                            join image on img_fig_zdb_id = pg_fig_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_feature"
                   datasource="db" query="select
                            feature_abbrev as sequence_alteration,
                            'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join fish_experiment on genox_zdb_id =	pg_genox_zdb_id
                                 join fish on fish_zdb_id = genox_fish_zdb_id
                                 join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                 join feature on feature_zdb_id = genofeat_feature_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_gene"
                   datasource="db" query="select
                            mrkr_abbrev as gene,
                            mrkr_name as gene_full_name,
                            mrkr_zdb_id as xref,
                            'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join fish_experiment on genox_zdb_id = pg_genox_zdb_id
                                 join fish on fish_zdb_id = genox_fish_zdb_id
                                 join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                                                     and fmrel_type	= 'is allele of'
                                 join marker on fmrel_mrkr_zdb_id = mrkr_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_gene_alias"
                   datasource="db" query="select
                            dalias_alias as gene_previous_name,
                            'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join fish_experiment on genox_zdb_id = pg_genox_zdb_id
                                 join fish on fish_zdb_id = genox_fish_zdb_id
                                 join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
                                 join feature_marker_relationship on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                                                     and fmrel_type	= 'is allele of'
                                 join data_alias on fmrel_mrkr_zdb_id = dalias_data_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_str"
                   datasource="db" query="select mrkr_abbrev as sequence_targeting_reagent,
                                   mrkr_zdb_id as xref,
                                   'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join fish_experiment on genox_zdb_id = pg_genox_zdb_id
                                 join fish on fish_zdb_id = genox_fish_zdb_id
                                 join fish_str on fishstr_fish_zdb_id = fish_zdb_id
                                 join marker on fishstr_str_zdb_id = mrkr_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_str_gene"
                   datasource="db" query="select mrkr_abbrev as gene,
                               mrkr_name as gene_full_name,
                               mrkr_zdb_id as xref,
                               'pg-' || pg_id as pg_id
                        from phenotype_source_generated
                             join fish_experiment on genox_zdb_id = pg_genox_zdb_id
                             join fish on fish_zdb_id = genox_fish_zdb_id
                             join fish_str on fishstr_fish_zdb_id = fish_zdb_id
                             join marker_relationship on mrel_mrkr_1_zdb_id = fishstr_str_zdb_id and mrel_type = 'knockdown reagent targets gene'
                             join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_str_gene_alias"
                   datasource="db" query="select dalias_alias as gene_previous_name,
                               'pg-' || pg_id as pg_id
                        from phenotype_source_generated
                             join fish_experiment on genox_zdb_id = pg_genox_zdb_id
                             join fish on fish_zdb_id = genox_fish_zdb_id
                             join fish_str on fishstr_fish_zdb_id = fish_zdb_id
                             join marker_relationship on mrel_mrkr_1_zdb_id = fishstr_str_zdb_id and mrel_type = 'knockdown reagent targets gene'
                             join data_alias on mrel_mrkr_2_zdb_id = dalias_data_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_standard_or_control"
                   datasource="db" query="select 
                                   'standard or control' as conditions,
                                   'pg-' || pg_id as pg_id
                            from phenotype_source_generated
                                 join fish_experiment on genox_zdb_id = pg_genox_zdb_id
                                      and genox_is_std_or_generic_control = 't';"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_condition"
                   datasource="db" query="select
                                nvl(zeco.term_name,'') ||
                                nvl(': ' || ao.term_name,'') ||
                                nvl(': ' || go_cc.term_name,'') ||
                                nvl(': ' || chebi.term_name,'') ||
                                nvl(': ' || taxon.term_name,'') as conditions,
                                'pg-' || pg_id as pg_id
                                from condition_data_type
                             join experiment_condition on expcond_cdt_zdb_id = cdt_zdb_id
                             join fish_experiment on genox_exp_zdb_id = expcond_exp_zdb_id and genox_is_std_or_generic_control = 'f'
                             join phenotype_source_generated on genox_zdb_id = pg_genox_zdb_id
                             join term zeco on zeco.term_zdb_id = expcond_zeco_term_zdb_id
                             left outer join term ao on ao.term_zdb_id = expcond_ao_term_zdb_id
                             left outer join term go_cc on go_cc.term_zdb_id = expcond_go_cc_term_zdb_id
                             left outer join term chebi on chebi.term_zdb_id = expcond_chebi_term_zdb_id
                             left outer join term taxon on taxon.term_zdb_id = expcond_taxon_term_zdb_id"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_is_monogenic"
                   datasource="db" query="select 'true' as is_monogenic,
                           'pg-' || pg_id as pg_id
                           from phenotype_source_generated
                             join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_fish_xref"
                   datasource="db" query="select
                              fish_zdb_id as xref,fish_name,
                              'pg-' || pg_id as pg_id
                            from fish
                                 join fish_experiment on genox_fish_zdb_id = fish_zdb_id
                                 join phenotype_source_generated on genox_zdb_id = pg_genox_zdb_id
                            where
                                 fish_zdb_id not in
      	      	      	      	(select	fish_zdb_id
      	      	      	      	  from fish where
                                       fish_genotype_zdb_id in (
                                       	   select genofeat_geno_zdb_id
                                       	     from genotype_feature
                                               	  join feature_marker_relationship
                                               	    on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                       	    where fmrel_type = 'contains innocuous sequence feature')
                                       and fish_genotype_zdb_id not in (
                                            select genofeat_geno_zdb_id
                                              from genotype_feature
                                              	   join feature_marker_relationship
                                       	       	     on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                       	    where fmrel_type != 'contains innocuous sequence feature')
                                       and fish_zdb_id not in (select fishstr_fish_zdb_id from fish_str)
       	       	       	       	);"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_anatomy_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as anatomy_direct, 'pg-' || pg_id as pg_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e1a_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as anatomy_direct, 'pg-' || pg_id as pg_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e1b_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as anatomy_direct, 'pg-' || pg_id as pg_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e2a_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as anatomy_direct, 'pg-' || pg_id as pg_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e2b_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy';"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_anatomy_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as anatomy_parent, 'pg-' || pg_id as pg_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy'
                           union
                           select term_ont_id as xref, term_name as anatomy_parent, 'pg-' || pg_id as pg_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                            where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy'
                           union
                           select term_ont_id as xref, term_name as anatomy_parent, 'pg-' || pg_id as pg_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                            where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy'
                           union
                           select term_ont_id as xref, term_name as anatomy_parent, 'pg-' || pg_id as pg_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                            where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy';"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="figure_phenotype_quality_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as phenotype_quality_direct, 'pg-' || pg_id as pg_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term
                            where term_zdb_id = psg_quality_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'; "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="figure_phenotype_quality_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as phenotype_quality_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_quality_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and alltermcon_contained_zdb_id != alltermcon_container_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_cellular_component_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as cellular_component_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'
                   union
                   select term_ont_id as xref, term_name as cellular_component_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'
                   union
                   select term_ont_id as xref, term_name as cellular_component_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'
                   union
                   select term_ont_id as xref, term_name as cellular_component_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'; "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_cellular_component_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as cellular_component_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'
                          union
                          select term_ont_id as xref, term_name as cellular_component_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'
                          union
                          select term_ont_id as xref, term_name as cellular_component_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'
                          union
                          select term_ont_id as xref, term_name as cellular_component_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'; "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>


           <entity name="phenotype_biological_process_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as biological_process_direct, 'pg-' || pg_id as pg_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e1a_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process'
                                      union
                                      select term_ont_id as xref, term_name as biological_process_direct, 'pg-' || pg_id as pg_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e1b_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process'
                                      union
                                      select term_ont_id as xref, term_name as biological_process_direct, 'pg-' || pg_id as pg_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e2a_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process'
                                      union
                                      select term_ont_id as xref, term_name as biological_process_direct, 'pg-' || pg_id as pg_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e2b_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process';
                    "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_biological_process_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as biological_process_parent, 'pg-' || pg_id as pg_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'
                         union
                         select term_ont_id as xref, term_name as biological_process_parent, 'pg-' || pg_id as pg_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'
                         union
                         select term_ont_id as xref, term_name as biological_process_parent, 'pg-' || pg_id as pg_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'
                         union
                         select term_ont_id as xref, term_name as biological_process_parent, 'pg-' || pg_id as pg_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'; "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_molecular_function_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as molecular_function_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'
                   union
                   select term_ont_id as xref, term_name as molecular_function_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'
                   union
                   select term_ont_id as xref, term_name as molecular_function_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'
                   union
                   select term_ont_id as xref, term_name as molecular_function_direct, 'pg-' || pg_id as pg_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'; "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_molecular_function_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as molecular_function_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'
                          union
                          select term_ont_id as xref, term_name as molecular_function_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'
                          union
                          select term_ont_id as xref, term_name as molecular_function_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'
                          union
                          select term_ont_id as xref, term_name as molecular_function_parent, 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'; "
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_quality_direct"
                   datasource="db" query="select term_name as phenotype_quality_direct, 'pg-' || pg_id as pg_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_quality_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal';"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_quality_synonym"
                   datasource="db" query="select dalias_alias as quality_synonym, 'pg-' || pg_id as pg_id
                          from phenotype_observation_generated ps, phenotype_source_generated, data_alias
                         where dalias_data_zdb_id = psg_quality_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal';"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

           <entity name="phenotype_synonym_phenotype_observation_generated"
                   datasource="db" query="select dalias_alias || ' ' || entity1a.term_name as synonym_phenotype_statement,
                                                 'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, data_alias, term entity1a
                            where dalias_data_zdb_id = psg_quality_zdb_id
                             and term_zdb_id = psg_e1a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and psg_e1b_zdb_id is null
                             and psg_e2a_zdb_id is null
                             and psg_e2b_zdb_id is null
UNION
select quality_alias.dalias_alias || ' ' || entity_alias.dalias_alias as synonym_phenotype_statement,
'pg-' || pg_id as pg_id
                            from phenotype_observation_generated ps, phenotype_source_generated, data_alias quality_alias,
                                 data_alias entity_alias
                            where quality_alias.dalias_data_zdb_id = psg_quality_zdb_id
                             and entity_alias.dalias_data_zdB_id = psg_e1a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and psg_e1b_zdb_id is null
                             and psg_e2a_zdb_id is null
                             and psg_e2b_zdb_id is null;"
                   cacheImpl="SortedMapBackedCache"
                   where="pg_id=phenotype.id"/>

       </entity>

       <entity name="expression"
               datasource="db" query="select
                        'Expression' as category,
                        'xpatex-' || efs_pk_id as id,
                        efs_xpatex_zdb_id as xpat_zdb_id,
                        fig_zdb_id as fig_zdb_id,
                        fish_name as fish,
                        xpatex_assay_name as assay,
                        fig_label as figure,
                        '/' || fig_zdb_id as url,
                        pub_date as date,
                        fig_zdb_id as xref,
                        pub_mini_ref as publication,
                        case
                             when exists (select 'x' from clone where clone_problem_type = 'Chimeric' and xpatex_probe_feature_zdb_id = clone_mrkr_zdb_id)
                             then (select mrkr_abbrev || ' expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_probe_feature_zdb_id)
                             when xpatex_gene_zdb_id is not null and substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                             then (select '&lt;i&gt;' || mrkr_abbrev || '&lt;/i&gt; expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_gene_zdb_id)
                             when xpatex_gene_zdb_id is not null and substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                             then (select mrkr_abbrev || ' expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_gene_zdb_id)
                             else (select mrkr_abbrev || ' expression in ' || fish_name || ' from ' || pub_mini_ref|| ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_atb_zdb_id)
                         end as name,
                         case
                             when exists (select 'x' from clone where clone_problem_type = 'Chimeric' and xpatex_probe_feature_zdb_id = clone_mrkr_zdb_id)
                             then (select mrkr_abbrev || ' expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_probe_feature_zdb_id)
                             when xpatex_gene_zdb_id is not null and substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                             then (select '&lt;i&gt;' || mrkr_abbrev || '&lt;/i&gt; expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_gene_zdb_id)
                             when xpatex_gene_zdb_id is not null and substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                             then (select mrkr_abbrev || ' expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_gene_zdb_id)
                             else (select mrkr_abbrev || ' expression in ' || fish_name || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_atb_zdb_id)
                         end as full_name,
                         case
                             when exists (select 'x' from clone where clone_problem_type = 'Chimeric' and xpatex_probe_feature_zdb_id = clone_mrkr_zdb_id)
                             then (select mrkr_abbrev_order || ' expression in ' || fish_name_order || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_probe_feature_zdb_id)
                             when xpatex_gene_zdb_id is not null and substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                             then (select mrkr_abbrev_order || ' expression in ' || fish_name_order || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_gene_zdb_id)
                             when xpatex_gene_zdb_id is not null and substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                             then (select mrkr_abbrev_order || ' expression in ' || fish_name_order || ' from ' || pub_mini_ref || ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_gene_zdb_id)
                             else (select mrkr_abbrev_order || ' expression in ' || fish_name_order || ' from ' || pub_mini_ref|| ' ' || nvl(fig_label,'') as full_name from marker where mrkr_zdb_id = xpatex_atb_zdb_id)
                         end as name_sort,
                         to_date(get_date_from_id(efs_xpatex_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
                        from expression_experiment2
                             join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                             join fish_experiment on xpatex_genox_zdb_id = genox_zdb_id
                             join fish on genox_fish_zdb_id = fish_zdb_id
                             join figure on efs_fig_zdb_id = fig_zdb_id
                             join publication on fig_source_zdb_id = publication.zdb_id
                        ;
      ">

           <entity name="expression_clone"
                   datasource="db" query="select
                            'xpatex-' || efs_pk_id as efs_pk_id,
                            xpatex_probe_feature_zdb_id as xref,
                            mrkr_abbrev as probe
                            from expression_experiment2, expression_figure_stage, marker
                            where xpatex_probe_feature_zdb_id is not null
                              and xpatex_probe_feature_zdb_id = mrkr_zdb_id
                              and efs_xpatex_zdb_id = xpatex_zdb_id;"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="expression_previous_name_genes"
                   datasource="db" query="select
                            'xpatex-' || efs_pk_id as efs_pk_id,
                                             dalias_alias as expressed_gene_previous_name
                                      from expression_experiment2, expression_figure_stage, data_alias
                                      where xpatex_zdb_id = efs_xpatex_zdb_id
                                          and xpatex_gene_zdb_id = dalias_data_zdb_id
                                          and not exists (
                                           select 'x'
                                           from clone
                                           where xpatex_probe_feature_zdb_id = clone_mrkr_zdb_id
                                           and clone_problem_type = 'Chimeric' );"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="expression_antibody_xref"
                   datasource="db" query="select
                            'xpatex-' || efs_pk_id as efs_pk_id,
                            xpatex_atb_zdb_id as xref
                            from expression_experiment2
                                 join expression_figure_stage on xpatex_zdb_id = efs_xpatex_zdb_id
                            where xpatex_atb_zdb_id is not null
                                                     ;"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="expression_zebrafish_gene"
                   datasource="db" query="select
                            mrkr_abbrev as zebrafish_gene,
                            mrkr_name as zebrafish_gene_full_name,
                            mrkr_zdb_id as xref,
                            'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join marker on xpatex_gene_zdb_id = mrkr_zdb_id
                            where substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                              and not exists (
                                           select 'x'
                                           from clone
                                           where xpatex_probe_feature_zdb_id = clone_mrkr_zdb_id
                                           and clone_problem_type = 'Chimeric' )
                    ;"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="expression_zebrafish_gene_alias"
                   datasource="db" query="select
                            dalias_alias as zebrafish_gene_alias,
                            'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join data_alias on xpatex_gene_zdb_id = dalias_data_zdb_id
                            where substring(xpatex_gene_zdb_id from 1 for 8) != 'ZDB-EFG'
                              and not exists (
                                           select 'x'
                                           from clone
                                           where xpatex_probe_feature_zdb_id = clone_mrkr_zdb_id
                                           and clone_problem_type = 'Chimeric' )
                            ;"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="expression_reporter_gene"
                   datasource="db" query="select
                            mrkr_abbrev as reporter_gene,
                            mrkr_zdb_id as xref,
                            'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join marker on xpatex_gene_zdb_id = mrkr_zdb_id
                            where substring(xpatex_gene_zdb_id from 1 for 8) = 'ZDB-EFG'
                            ;
                   "
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="expression_expression_anatomy_direct"
                   datasource="db" query="select
                            term_name as expression_anatomy_direct,
                            term_ont_id as xref,
                            'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join expression_result2 on xpatres_efs_id = efs_pk_id
                                 join term on (xpatres_superterm_zdb_id = term_zdb_id OR xpatres_subterm_zdb_id = term_zdb_id)
                            ;"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>


@PG_XML_COMMENT_OPEN@

           <entity name="expression_expression_anatomy_parent"
                   datasource="db" query="select
term_name as expression_anatomy_direct,
                            term_ont_id as xref,
                            'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join expression_result2 on xpatres_efs_id = efs_pk_id
                                 join all_term_contains on (xpatres_superterm_zdb_id = alltermcon_contained_zdb_id OR xpatres_subterm_zdb_id = alltermcon_contained_zdb_id)
                                 join term on alltermcon_container_zdb_id = term_zdb_id
                            ;"
                   where="efs_pk_id=expression.id"
                   cacheImpl="SortedMapBackedCache"/>
@PG_XML_COMMENT_CLOSE@

           <entity name="expression_image"
                   datasource="db" query="select
                     case
                       when img_image_with_annotation is not null
                       then img_image_with_annotation
                       else img_image end as image,
                       img_thumbnail as thumbnail,
                       img_zdb_id,
                       'true' as has_image,
                       'xpatex-' || efs_pk_id as efs_pk_id
                       from expression_experiment2
                            join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                            join image on img_fig_zdb_id = efs_fig_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_is_wildtype"
                   datasource="db" query="select
                           case when genox_is_std_or_generic_control = 't' and geno_is_wildtype = 't'  and fish_functional_affected_gene_count = 0
                           then TRIM('true')
                           else TRIM('false') end
                           as is_wildtype,
                           geno_is_wildtype as is_genotype_wildtype,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join fish_experiment on genox_zdb_id = xpatex_genox_zdb_id
                                 join fish on genox_fish_zdb_id = fish_zdb_id
                                 join genotype on geno_zdb_id = fish_genotype_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>


           <entity name="expression_author"
                   datasource="db" query="select person.full_name as registered_author, 'xpatex-' || efs_pk_id as efs_pk_id
                       from expression_experiment2
                            join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                            join int_person_pub on xpatex_source_zdb_id = int_person_pub.target_id
                            join person on person.zdb_id = int_person_pub.source_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="xpatex_zdb_id=expression.id"/>

           <entity name="expression_stage"
                   datasource="db" query="select this_stage.stg_name as stage, 'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join stage start_stage on efs_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on efs_end_stg_zdb_id = end_stage.stg_zdb_id
                                join stage this_stage on this_stage.stg_hours_start &gt;= start_stage.stg_hours_start
                                                         and this_stage.stg_hours_end &lt;= end_stage.stg_hours_end
                            where start_stage.stg_name != 'Unknown'
                              and end_stage.stg_name != 'Unknown'
                              and this_stage.stg_name != 'Unknown';"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_stage_unknowns"
                   datasource="db" query="select start_stage.stg_name as stage, 'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join stage start_stage on efs_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on efs_end_stg_zdb_id = end_stage.stg_zdb_id
                            where (start_stage.stg_name = 'Unknown'
                                   OR end_stage.stg_name = 'Unknown')
                           union
                           select end_stage.stg_name as stage, 'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                join stage start_stage on efs_start_stg_zdb_id = start_stage.stg_zdb_id
                                join stage end_stage on efs_end_stg_zdb_id = end_stage.stg_zdb_id
                            where (start_stage.stg_name = 'Unknown'
                                   OR end_stage.stg_name = 'Unknown');"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_str"
                   datasource="db" query="select mrkr_abbrev as sequence_targeting_reagent,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join fish_experiment on xpatex_genox_zdb_id = genox_zdb_id
                                 join fish_str on fishstr_fish_zdb_id = genox_fish_zdb_id
                                 join marker on fishstr_str_zdb_id = mrkr_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_genotype"
                   datasource="db" query="
SELECT trim(CASE Length(Get_genotype_backgrounds(geno_zdb_id))
			  WHEN '0' THEN geno_display_name
			  ELSE Get_genotype_display(geno_zdb_id)
			  || ' ('
			  || Get_genotype_backgrounds(geno_zdb_id)
			  || ')'
			  END) AS genotype_full_name,
			  'xpatex-' || efs_pk_id as efs_pk_id
		      FROM   expression_experiment2
		         JOIN expression_figure_stage
			 ON efs_xpatex_zdb_id = xpatex_zdb_id
			 JOIN fish_experiment
			 ON xpatex_genox_zdb_id = genox_zdb_id
			 JOIN fish
			 ON fish_zdb_id = genox_fish_zdb_id
			 JOIN genotype
			 ON geno_zdb_id = fish_genotype_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>


           <entity name="expression_standard_conditions"
                   datasource="db" query="select 'standard or control' as conditions,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join fish_experiment on genox_zdb_id = xpatex_genox_zdb_id
                                      and genox_is_std_or_generic_control = 't';"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>


           <entity name="expression_conditions"
                   datasource="db" query="select
                                            nvl(zeco.term_name,'') ||
                                            nvl(': ' || ao.term_name,'') ||
                                            nvl(': ' || go_cc.term_name,'') ||
                                            nvl(': ' || chebi.term_name,'') ||
                                            nvl(': ' || taxon.term_name,'') as conditions,
                                            'xpatex-' || efs_pk_id as efs_pk_id
                                            from condition_data_type
                             join experiment_condition on expcond_cdt_zdb_id = cdt_zdb_id
                             join fish_experiment on genox_exp_zdb_id = expcond_exp_zdb_id and genox_is_std_or_generic_control = 'f'
                             join expression_experiment2 on xpatex_genox_zdb_id = genox_zdb_id
                             join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                             join term zeco on zeco.term_zdb_id = expcond_zeco_term_zdb_id
                             left outer join term ao on ao.term_zdb_id = expcond_ao_term_zdb_id
                             left outer join term go_cc on go_cc.term_zdb_id = expcond_go_cc_term_zdb_id
                             left outer join term chebi on chebi.term_zdb_id = expcond_chebi_term_zdb_id
                             left outer join term taxon on taxon.term_zdb_id = expcond_taxon_term_zdb_id"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_fish_xref"
                   datasource="db" query="select
                              genox_fish_zdb_id as xref,
                              'xpatex-' || efs_pk_id as efs_pk_id
                            from fish_experiment
                                 join expression_experiment2 on genox_zdb_id = xpatex_genox_zdb_id
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                            where
                            genox_fish_zdb_id not in
      	      	      	      	(select	fish_zdb_id
      	      	      	      	  from fish where
                                       fish_genotype_zdb_id in (
                                       	   select genofeat_geno_zdb_id
                                       	     from genotype_feature
                                               	  join feature_marker_relationship
                                               	    on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                       	    where fmrel_type = 'contains innocuous sequence feature')
                                       and fish_genotype_zdb_id not in (
                                            select genofeat_geno_zdb_id
                                              from genotype_feature
                                              	   join feature_marker_relationship
                                       	       	     on fmrel_ftr_zdb_id = genofeat_feature_zdb_id
                                       	    where fmrel_type != 'contains innocuous sequence feature')
                                       and fish_zdb_id not in (select fishstr_fish_zdb_id from fish_str)
       	       	       	       	);"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_publication_xref"
                   datasource="db" query="select fig_source_zdb_id as xref,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join figure on fig_zdb_id = efs_fig_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_fig_xref"
                   datasource="db" query="select efs_fig_zdb_id as xref,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                              join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_clone_xref"
                   datasource="db" query="select xpatex_probe_feature_zdb_id as xref,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                            where xpatex_probe_feature_zdb_id is not null;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>

           <entity name="expression_antibody_xref"
                   datasource="db" query="select xpatex_atb_zdb_id as xref,
                                   'xpatex-' || efs_pk_id as efs_pk_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                            where xpatex_atb_zdb_id is not null;"
                   cacheImpl="SortedMapBackedCache"
                   where="efs_pk_id=expression.id"/>



       </entity>


       <entity name="antibody"
               datasource="db" query=" select
                            mrkr_zdb_id as id,
                            mrkrtype_type_display as category,
                            mrkr_name as name,
                            mrkr_name as proper_name,
                            mrkr_abbrev as marker_abbrev,
                            mrkr_name as full_name,
                            mrkr_abbrev_order as name_sort,
                            mrkr_comments as note,
                               '/' || mrkr_zdb_id as url,
                            atb_type as antibody_type,
                            'Antibody' as type,
                            atb_host_organism as host_organism,
                            to_date(get_date_from_id(mrkr_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date

                        from marker, marker_types,antibody
                        where mrkr_type = 'ATB'
                          and mrkr_type = marker_type
                          and mrkr_zdb_id = atb_zdb_id;">


           <entity name="antibody_aliases"
                   datasource="db" query="select dalias_alias alias, dalias_data_zdb_id from data_alias
                         where substring(dalias_data_zdb_id from 1 for 7) = 'ZDB-ATB' "
                   where="dalias_data_zdb_id=antibody.id"
                   cacheImpl="SortedMapBackedCache"/>


         

                <entity name="atb_accession"
                        datasource="db" query="select fdb_db_name || ':' || dblink_acc_num as related_accession,
                                                     dblink_linked_recid as feature_zdb_id
                                             from db_link, foreign_db_contains, foreign_db
                                             where dblink_fdbcont_zdb_id = fdbcont_zdb_id
                                               and fdbcont_fdb_db_id = fdb_db_pk_id
                                               and substring(dblink_linked_recid from 1 for 8) = 'ZDB-ATB-'
                           ;"
                        cacheImpl="SortedMapBackedCache"
                        where="mrkr_zdb_id=antibody.id"/>


           <entity name="antibody_attribution"
                   datasource="db" query="select recattrib_data_zdb_id as atb_zdb_id, count(recattrib_source_zdb_id) as attribution_count
                            from record_attribution, antibody
                            where recattrib_data_zdb_id = atb_zdb_id
                            group by 1;"
                   where="atb_zdb_id=antibody.id"
                   cacheImpl="SortedMapBackedCache"/>

<!--           <entity name="antibody_authors"
                   datasource="db" query="select person.zdb_id as xref, person.full_name as author, recattrib_data_zdb_id
                    from person, int_person_pub, record_attribution
                    where recattrib_source_zdb_id = int_person_pub.target_id
                      and int_person_pub.source_id = person.zdb_id
                      and recattrib_data_zdb_id[1,7]='ZDB-ATB'"
                   cacheImpl="SortedMapBackedCache"
                   where="recattrib_data_zdb_id=antibody.id"/>-->

           <entity name="antibody_publication_xref"
                   datasource="db" query="select distinct atb_zdb_id,
                                          pub_mini_ref as attributed_publication,
                                          recattrib_source_zdb_id as xref
                            from record_attribution, antibody, publication
                            where recattrib_data_zdb_id = atb_zdb_id
                              and recattrib_source_zdb_id = publication.zdb_id;"
                   where="atb_zdb_id=antibody.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="antibody_supplier"
                   datasource="db" query=" select lab.zdb_id as xref, lab.name as source, idsup_data_zdb_id
                           from int_data_supplier, lab
                           where substring(idsup_data_zdb_id from 1 for 7) = 'ZDB-ATB'
                             and idsup_supplier_zdb_id = lab.zdb_id
                           union
                           select company.zdb_id as xref, company.name as source, idsup_data_zdb_id
                           from int_data_supplier, company
                           where substring(idsup_data_zdb_id from 1 for 7) = 'ZDB-ATB'
                             and idsup_supplier_zdb_id = company.zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="idsup_data_zdb_id=antibody.id"/>

           <entity name="antibody_labeled_anatomy_direct"
                   datasource="db" query="  select distinct term_ont_id as xref, term_name as labeled_anatomy_direct,
                                             xpatex_atb_zdb_id as atb_zdb_id
                                      from expression_experiment
                                           join expression_result
                                             on xpatres_xpatex_zdb_id = xpatex_zdb_id
                                           join term
                                             on xpatres_superterm_zdb_id = term_zdb_id
                                           join fish_experiment
                                             on xpatex_genox_zdb_id = genox_zdb_id
                                           join fish on genox_fish_zdb_id = fish_zdb_id
                                           join genotype
                                             on geno_zdb_id = fish_genotype_zdb_id
                                      where xpatex_atb_zdb_id is not null
                                        and genox_is_std_or_generic_control = 't'
                                        and xpatres_expression_found = 't'
                                        and geno_is_wildtype = 't'
                                        and term_ontology in ('zebrafish_anatomy','cellular_component')
                   union
                                      select distinct term_ont_id as xref, term_name as labeled_anatomy_direct,
                                             xpatex_atb_zdb_id as atb_zdb_id
                                      from expression_experiment
                                           join expression_result
                                             on xpatres_xpatex_zdb_id = xpatex_zdb_id
                                           join term
                                             on xpatres_subterm_zdb_id = term_zdb_id
                                           join fish_experiment
                                             on xpatex_genox_zdb_id = genox_zdb_id
                                           join fish on genox_fish_zdb_id = fish_zdb_id
                                           join genotype
                                             on geno_zdb_id = fish_genotype_zdb_id
                                      where xpatex_atb_zdb_id is not null
                                        and genox_is_std_or_generic_control = 't'
                                        and xpatres_expression_found = 't'
                                        and geno_is_wildtype = 't'
                                        and term_ontology in ('zebrafish_anatomy','cellular_component');
                                 "
                   cacheImpl="SortedMapBackedCache"
                   where="atb_zdb_id=antibody.id"/>

           <entity name="antibody_labeled_anatomy_parent"
                   datasource="db" query="select distinct term_ont_id as xref, term_name as labeled_anatomy_parent,
                                             xpatex_atb_zdb_id as atb_zdb_id
                                      from expression_experiment
                                           join expression_result
                                             on xpatres_xpatex_zdb_id = xpatex_zdb_id
                                           join all_term_contains
                                             on xpatres_superterm_zdb_id = alltermcon_contained_zdb_id
                                           join term
                                             on term_zdb_id = alltermcon_container_zdb_id
                                           join fish_experiment
                                             on xpatex_genox_zdb_id = genox_zdb_id
                                           join fish on genox_fish_zdb_id = fish_zdb_id
                                           join genotype
                                             on geno_zdb_id = fish_genotype_zdb_id
                                      where xpatex_atb_zdb_id is not null
                                        and genox_is_std_or_generic_control = 't'
                                        and xpatres_expression_found = 't'
                                        and geno_is_wildtype = 't'
                                        and alltermcon_container_zdb_id != alltermcon_contained_zdb_id
                                        and term_ontology in ('zebrafish_anatomy','cellular_component')
                   union
                                      select distinct term_ont_id as xref, term_name as labeled_anatomy_parent,
                                             xpatex_atb_zdb_id as atb_zdb_id
                                      from expression_experiment
                                           join expression_result
                                             on xpatres_xpatex_zdb_id = xpatex_zdb_id
                                           join all_term_contains
                                             on xpatres_subterm_zdb_id = alltermcon_contained_zdb_id
                                           join term
                                             on term_zdb_id = alltermcon_container_zdb_id
                                           join fish_experiment
                                             on xpatex_genox_zdb_id = genox_zdb_id
                                           join fish on genox_fish_zdb_id = fish_zdb_id
                                           join genotype
                                             on geno_zdb_id = fish_genotype_zdb_id
                                      where xpatex_atb_zdb_id is not null
                                        and genox_is_std_or_generic_control = 't'
                                        and xpatres_expression_found = 't'
                                        and geno_is_wildtype = 't'
                                        and alltermcon_container_zdb_id != alltermcon_contained_zdb_id
                                        and term_ontology in ('zebrafish_anatomy','cellular_component');
                      "
                   cacheImpl="SortedMapBackedCache"
                   where="atb_zdb_id=antibody.id"/>

           <entity name="antibody_assay"
                   datasource="db" query="
                   select distinct xpatassay_abbrev as assay_abbrev,
                          xpatassay_name as assay,
                          xpatex_atb_zdb_id as atb_zdb_id
                   from expression_experiment, expression_pattern_assay
                   where xpatex_assay_name = xpatassay_name
                     and xpatex_atb_zdb_id is not null;"
                   cacheImpl="SortedMapBackedCache"
                   where="atb_zdb_id=antibody.id"/>

           <entity name="antibody_antigen_gene"
                   datasource="db" query="select mrkr_abbrev as antigen_gene,
                          mrkr_name as antigen_gene_full_name,
                          mrel_mrkr_2_zdb_id as atb_zdb_id
                   from marker_relationship, marker, marker_type_group_member
                   where mrel_type = 'gene product recognized by antibody'
                     and mrel_mrkr_1_zdb_id = mrkr_zdb_id
                     and mtgrpmem_mrkr_type = mrkr_type
                     and mtgrpmem_mrkr_type_group in ('GENEDOM')
                     "
                   cacheImpl="SortedMapBackedCache"
                   where="atb_zdb_id=antibody.id"/>

           <entity name="antibody_antigen_gene_previous_names"
                   datasource="db" query="select dalias_alias as antigen_gene_previous_name,
                                             mrel_mrkr_2_zdb_id as atb_zdb_id
                                      from marker_relationship, data_alias, marker, marker_type_group_member
                                      where mrel_type = 'gene product recognized by antibody'
                                        and mrel_mrkr_1_zdb_id = mrkr_zdb_id
                                        and mtgrpmem_mrkr_type = mrkr_type
                                        and mtgrpmem_mrkr_type_group in ('GENEDOM')
                                        and mrel_mrkr_1_zdb_id = dalias_data_zdb_id;
                   "
                   cacheImpl="SortedMapBackedCache"
                   where="atb_zdb_id=antibody.id"/>

       </entity>




       <entity name="feature"
               datasource="db" query="select
                        feature_zdb_id as id,
                        'Mutation / Tg' as category,
                        ftrtype_type_display as type,
                        feature_name as name,
                        feature_name as proper_name,
                        feature_name as full_name,
                        feature_name_order as name_sort,
                        feature_abbrev as alias,
                        fto_priority as complexity,
                           '/' || feature_zdb_id as url,
                        (select case when fp_prefix = 'la' then 'Burgess / Lin'
                           when fp_prefix = 'sa' then 'Sanger'
                           when fp_prefix = 'mn' then 'Zfishbook'
                        end as screen from feature_prefix where feature_lab_prefix_id = fp_pk_id) as screen,
                           to_date(get_date_from_id(feature_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date,
                           (select featassay_mutagen from feature_assay where featassay_feature_zdb_id=feature_zdb_id) as mutagen
                    from feature, feature_type, feature_type_ordering
                    where feature_type = ftrtype_name
                      and ftrtype_type_display = fto_name;
       ">

           <entity name="feature_aliases"
                   datasource="db" query="select dalias_alias alias, dalias_data_zdb_id from data_alias
                   where substring(dalias_data_zdb_id from 1 for 7) = 'ZDB-ALT'"
                   where="dalias_data_zdb_id=feature.id"
                   cacheImpl="SortedMapBackedCache" >
               <field name="alias" column="dalias_alias"/>
	    <entity name="feature_accession"
                        datasource="db" query="select fdb_db_name || ':' || dblink_acc_num as related_accession,
                                                     dblink_linked_recid as feature_zdb_id
                                             from db_link, foreign_db_contains, foreign_db
                                             where dblink_fdbcont_zdb_id = fdbcont_zdb_id
                                               and fdbcont_fdb_db_id = fdb_db_pk_id
                                               and substring(dblink_linked_recid from 1 for 8) = 'ZDB-ALT-'
                           ;"
                        cacheImpl="SortedMapBackedCache"
                        where="feature_zdb_id=feature.id"/>
           </entity>

           <entity name="feature_note"
                   query="select feature_zdb_id, extnote_note as note
                            from feature
                                 join external_note on extnote_data_zdb_id = feature_zdb_id"
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

           <entity name="feature_aliases_from_feature_tracking"
                   datasource="db" query="select ft_feature_abbrev as alias, ft_feature_zdb_id as feature_zdb_id from feature_tracking
                   union
                   select ft_feature_abbrev as alias,zrepld_new_zdb_id as feature_zdb_id
                   from feature_tracking,zdb_replaced_data
                   where  ft_feature_zdb_id=zrepld_old_zdb_id"
                   where="feature_zdb_id=feature.id"
                   cacheImpl="SortedMapBackedCache" >
               <field name="alias" column="alias"/>
           </entity>

	   <entity name="feature_construct_xref"
		   datasource="db" query="select fmrel_ftr_zdb_id as feature_zdb_id, fmrel_mrkr_zdb_id as xref from feature_marker_relationship, marker, marker_type_group_member
where mrkr_zdb_id = fmrel_mrkr_zdb_id
  and mtgrpmem_mrkr_type_group = 'CONSTRUCT'
  and mtgrpmem_mrkr_type = mrkr_type;"
		   cacheImpl="SortedMapBackedCache"
		   where="feature_zdb_id=feature.id"/>

           <entity name="feature_str_xref"
                   datasource="db" query="select fmrel_mrkr_zdb_id as xref,
                                 fmrel_ftr_zdb_id as feature_zdb_id
                            from feature_marker_relationship where fmrel_type = 'created by';"
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

           <entity name="feature_attribution"
                   datasource="db" query="select recattrib_data_zdb_id as feature_zdb_id, count(recattrib_source_zdb_id) as attribution_count
                            from record_attribution, feature
                            where recattrib_data_zdb_id = feature_zdb_id
                            group by 1;"
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

<!--
           <entity name="feature_authors" datasource="db" query="
select person.zdb_id as xref, person.full_name as author, recattrib_data_zdb_id
from person, int_person_pub, record_attribution
where recattrib_source_zdb_id = int_person_pub.target_id
  and int_person_pub.source_id = person.zdb_id
  and recattrib_data_zdb_id[1,7]='ZDB-ALT'"
                   cacheImpl="SortedMapBackedCache"
                   where="recattrib_data_zdb_id=feature.id">
           </entity>-->


           <entity name="feature_publication_xref"
                   datasource="db" query="select distinct feature_zdb_id, recattrib_source_zdb_id as xref
                            from record_attribution, feature
                            where recattrib_data_zdb_id = feature_zdb_id;"
                   where="feature_zdb_id=feature.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="feature_prefix_and_institution"
               datasource="db" query="select
    feature_zdb_id as feature_id,
    fp_prefix as prefix,
    fp_institute_display || ' (' || fp_prefix || ')'   as institution
from feature, feature_type, feature_prefix,source_feature_prefix
where feature_type = ftrtype_name
  and feature_lab_prefix_id = fp_pk_id and fp_pk_id=sfp_prefix_id and sfp_current_designation='t';  "
               cacheImpl="SortedMapBackedCache"
               where="feature_id=feature.id"/>

           <entity name="feature_lab_of_origin"
                   datasource="db" query="select feature_zdb_id as feature_id,
       lab.name as lab_of_origin, lab.zdb_id as xref
from feature, int_data_source, lab
where feature_zdb_id = ids_data_zdb_id
  and ids_source_zdb_id = lab.zdb_id
  and lab.zdb_id != 'ZDB-LAB-000914-1';"
                   cacheImpl="SortedMapBackedCache"
                   where="feature_id=feature.id"/>

           <entity name="feature_rna_consequence"
                   datasource="db" query="select feature_zdb_id as feature_id,
       mdcv_term_display_name as rna_consequence
from feature, mutation_detail_controlled_vocabulary,feature_transcript_mutation_detail
where feature_zdb_id = ftmd_feature_zdb_id
  and ftmd_transcript_consequence_term_zdb_id=mdcv_term_zdb_id ;"
                     cacheImpl="SortedMapBackedCache"
                   where="feature_id=feature.id"/>

       <entity name="feature_supplier"
               datasource="db" query="select lab.zdb_id as xref, lab.name as source, idsup_data_zdb_id as feature_zdb_id
                      from int_data_supplier, lab
                      where substring(idsup_data_zdb_id from 1 for 7) = 'ZDB-ALT'
                        and idsup_supplier_zdb_id = lab.zdb_id
                      union
                      select company.zdb_id as xref, company.name as source, idsup_data_zdb_id
                      from int_data_supplier, company
                      where substring(idsup_data_zdb_id from 1 for 7) = 'ZDB-ALT'
                        and idsup_supplier_zdb_id = company.zdb_id;"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>
       <entity name="feature_affected_gene"
               datasource="db" query="select mrkr_zdb_id as xref,
                             mrkr_abbrev as affected_gene,
                             mrkr_name as affected_gene_full_name,
                             fmrel_ftr_zdb_id as feature_zdb_id
                      from marker, feature_marker_relationship
                      where fmrel_mrkr_zdb_id = mrkr_zdb_id
                        and fmrel_type in ('markers missing', 'is allele of') and mrkr_type in ('GENE','GENEP');"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>
       <entity name="feature_affected_gene_previous_name"
               datasource="db" query="select dalias_alias as affected_gene_previous_name,
                                            fmrel_ftr_zdb_id as feature_zdb_id
                                     from data_alias, feature_marker_relationship
                                     where fmrel_mrkr_zdb_id = dalias_data_zdb_id
                                       and fmrel_type in ('markers missing', 'is allele of')"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>

       <entity name="feature_deficiency_affected_gene"
               datasource="db" query="select mrkr_abbrev as affected_gene,
                               mrkr_name as affected_gene_full_name,
                               fmrel_ftr_zdb_id as feature_zdb_id
                        from feature_marker_relationship
                             join marker on fmrel_mrkr_zdb_id = mrkr_zdb_id
                        where fmrel_type in ('markers missing', 'markers moved', 'markers present') and mrkr_type in ('GENE','GENEP');"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>



       <entity name="feature_deficiency_affected_gene_previous_name"
               datasource="db" query="select dalias_alias as affected_gene_previous_name,
                               fmrel_ftr_zdb_id as feature_zdb_id
                        from feature_marker_relationship
                             join data_alias on fmrel_mrkr_zdb_id = dalias_data_zdb_id
                        where fmrel_type in ('markers missing', 'markers moved', 'markers present');"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>

       <entity name="feature_phenotype_statement"
               datasource="db" query="select distinct psg_short_name as phenotype_statement,

                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                  join fish_experiment on pg_genox_zdb_id = genox_zdb_id
                                  join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as super_1 on psg_e1a_zdb_id = super_1.term_zdb_id
                                 left outer join term as sub_1 on psg_e1b_zdb_id = sub_1.term_zdb_id
                                 join term as quality on psg_quality_zdb_id = quality.term_zdb_id
                                 left outer join term as super_2 on psg_e2a_zdb_id = super_2.term_zdb_id
                                 left outer join term as sub_2 on psg_e2b_zdb_id = sub_2.term_zdb_id
                            where psg_tag != 'normal';"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id">
           <field column="phenotype_statement" stripHTML="true"/>
       </entity>

       <entity name="feature_misexpressed_gene" datasource="db" transformer="RegexTransformer"
               query="select distinct mrkr_abbrev || ',Any' as misexpressed_gene,
                                      mrkr_abbrev || ' misexpression' as expression_observation,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from expression_experiment2
                                  join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                  join expression_result2 on xpatres_efs_id = efs_pk_id
                                  join expression_phenotype_term on ept_xpatres_id = xpatres_pk_id
                                  join marker as gene on xpatex_gene_zdb_id = mrkr_zdb_id
                                  join mutant_fast_search on xpatex_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                  join fish_experiment on xpatex_genox_zdb_id = genox_zdb_id
                                  join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id;"
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id">
           <field name="misexpressed_gene" column="misexpressed_gene" splitBy=","/>
       </entity>

       <entity name="feature_affected_anatomy_direct"
               datasource="db" query="select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy' "
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>

       <entity name="feature_affected_anatomy_parent"
               datasource="db" query="select distinct
                        term.term_name as affected_anatomy_parent,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'zebrafish_anatomy' "
               cacheImpl="SortedMapBackedCache"
               where="feature_zdb_id=feature.id"/>


           <entity name="feature_affected_biological_process_direct"
                   datasource="db" query="select distinct
                        term.term_name as affected_biological_process_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'; "
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

           <entity name="feature_affected_biological_process_parent"
                   datasource="db" query="select distinct
                        term.term_name as affected_biological_process_parent,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'biological_process'; "
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>


           <entity name="feature_affected_cellular_component_direct"
                   datasource="db" query="select distinct
                        term.term_name as affected_cellular_component_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'; "
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

           <entity name="feature_affected_cellular_component_parent"
                   datasource="db" query="select distinct
                        term.term_name as affected_cellular_component_parent,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'cellular_component'; "
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

           <entity name="feature_affected_molecular_function_direct"
                   datasource="db" query="select distinct
                        term.term_name as affected_molecular_function_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e1b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2a_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                 join term as term on psg_e2b_zdb_id = term.term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'; "
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>

           <entity name="feature_affected_molecular_function_parent"
                   datasource="db" query="select distinct
                        term.term_name as affected_molecular_function_parent,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e1b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2a_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'
                        UNION
                        select distinct
                        term.term_name as affected_anatomy_direct,
                                        genofeat_feature_zdb_id as feature_zdb_id
                             from phenotype_observation_generated
                                  join phenotype_source_generated on psg_pg_id = pg_id
                                  join mutant_fast_search on pg_genox_zdb_id = mfs_genox_zdb_id
                                  join feature_marker_relationship on fmrel_mrkr_zdb_id = mfs_mrkr_zdb_id and fmrel_type = 'is allele of'
                                   join fish_experiment on pg_genox_zdb_id = genox_zdb_id join fish on genox_fish_zdb_id = fish_zdb_id
                                  join genotype_feature on fish_genotype_zdb_id = genofeat_geno_zdb_id and genofeat_feature_zdb_id = fmrel_ftr_zdb_id
                                  join all_term_contains as allterm on alltermcon_contained_zdb_id = psg_e2b_zdb_id
                                  join term as term on allterm.alltermcon_container_zdb_id = term_zdb_id
                            where psg_tag != 'normal'
                              and term.term_ontology = 'molecular_function'; "
                   cacheImpl="SortedMapBackedCache"
                   where="feature_zdb_id=feature.id"/>
     </entity>



       <entity name="term"
               datasource="db" query="select term_ont_id as id,
                             term_zdb_id as internal_id,
                             term_name as name,
                             term_name as proper_name,
                             term_name as full_name,
                             zero_pad(term_name) as name_sort,
                             to_date(get_date_from_id(term_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date,
                             TRIM('Anatomy / GO / Human Disease') as category,
                             case
                               when term_ontology = 'biological_process' then 'Biological Process'
                               when term_ontology = 'cellular_component' then 'Cellular Component'
                               when term_ontology = 'molecular_function' then 'Molecular Function'
                               when term_ontology = 'zebrafish_anatomy' then 'Zebrafish Anatomy'
                               when term_ontology = 'disease_ontology' then 'Human Disease'
                             end as ontology,
                             '/' || term_ont_id as url,
                             case
                                when term_is_obsolete = 't' then 'obsolete'
                                when term_is_obsolete = 'f' then 'current'
                             end as term_status,
                             term_is_obsolete as root_only,
                             term_definition as definition
                      from term
                      where term_ontology in ('biological_process', 'cellular_component', 'molecular_function','zebrafish_anatomy','disease_ontology')
                      and term_is_secondary = 'f';
 ">

           <entity name="term_human_disease"
                   datasource="db" query="select 'Human Disease' as category, term_zdb_id
                      from term
                      where term_ontology in ('disease_ontology')
                      and term_is_secondary = 'f'"
		   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache" >
           </entity>

           <entity name="term_aliases"
                   datasource="db" query="select dalias_alias alias, dalias_data_zdb_id
                         from data_alias
                         where substring(dalias_data_zdb_id from 1 for 8) = 'ZDB-TERM'"
                   where="dalias_data_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache" >
               <field name="alias" column="dalias_alias"/>
           </entity>

           <entity name="term_replacements"
                   datasource="db" query="select zrepld_old_zdb_id related_accession, zrepld_new_zdb_id
                         from zdb_replaced_data
                         where substring(zrepld_new_zdb_id from 1 for 8) = 'ZDB-TERM'"
                   where="zrepld_new_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache" >
           </entity>

           <entity name="term_external_xref"
                   datasource="db" query="select
                            tx_full_accession as related_accession,
                            tx_term_zdb_id as term_zdb_id
                            from term_xref;"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="disease_disease_model_fish" transformer="RegexTransformer"
                   datasource="db" query="select distinct
                                          fish_name || '|Any' as fish,
                                          genox_fish_zdb_id as xref,
                                          term_zdb_id
                                          from term
                                          join disease_annotation on term.term_zdb_id = disease_annotation.dat_term_zdb_id
                                          join disease_annotation_model on disease_annotation.dat_zdb_id=disease_annotation_model.damo_dat_zdb_id
                                          join fish_experiment on fish_experiment.genox_zdb_id = disease_annotation_model.damo_genox_zdb_id
                                          join fish on genox_fish_zdb_id = fish_zdb_id;"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache">
               <field name="fish" column="fish" splitBy="\|"/>
           </entity>


           <entity name="disease_publication_xref"
                   datasource="db" query="
                                   select
                                        dat_source_zdb_id as xref,
                                        term_zdb_id
                                        from term
                                             join disease_annotation on term_zdb_id = dat_term_zdb_id
                                   union
                                   select
                                        recattrib_source_zdb_id as xref,
                                        term_zdb_id
                                        from term
                                             join record_attribution on recattrib_data_zdb_id = term_zdb_id"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="disease_condition"
                   datasource="db"
                   query="select
                                nvl(zeco.term_name,'') ||
                                nvl(': ' || ao.term_name,'') ||
                                nvl(': ' || go_cc.term_name,'') ||
                                nvl(': ' || chebi.term_name,'') ||
                                nvl(': ' || taxon.term_name,'') as conditions,
                                dat_term_zdb_id as term_zdb_id
                                from condition_data_type
                             join experiment_condition on expcond_cdt_zdb_id = cdt_zdb_id
                             join fish_experiment on genox_exp_zdb_id = expcond_exp_zdb_id and genox_is_std_or_generic_control = 'f'
                             join disease_annotation_model on damo_genox_zdb_id = genox_zdb_id
                             join disease_annotation on damo_dat_zdb_id = dat_zdb_id
                             join term zeco on zeco.term_zdb_id = expcond_zeco_term_zdb_id
                             left outer join term ao on ao.term_zdb_id = expcond_ao_term_zdb_id
                             left outer join term go_cc on go_cc.term_zdb_id = expcond_go_cc_term_zdb_id
                             left outer join term chebi on chebi.term_zdb_id = expcond_chebi_term_zdb_id
                             left outer join term taxon on taxon.term_zdb_id = expcond_taxon_term_zdb_id"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="disease_standard_conditions"
                   datasource="db"
                   query="select
                           'standard or control' as conditions,
                           term_zdb_id
                          from term
                          join disease_annotation on term.term_zdb_id = disease_annotation.dat_term_zdb_id
                          join disease_annotation_model on disease_annotation.dat_zdb_id=disease_annotation_model.damo_dat_zdb_id
                          join fish_experiment on fish_experiment.genox_zdb_id = disease_annotation_model.damo_genox_zdb_id
                          where fish_experiment.genox_is_std_or_generic_control = 't';"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="term_disease_gene"
                   datasource="db" query="select
                            mrkr_abbrev as gene,
                            mrkr_name as gene_full_name,
                            mrkr_zdb_id as xref,
                            term_zdb_id as term_zdb_id
                            from term
                                 join term_xref on tx_term_zdb_id = term_zdb_id
                                 join omimp_termxref_mapping on otm_tx_id =	tx_pk_id
                                 join omim_phenotype on otm_omimp_id = omimp_pk_id
                                 join ortholog on	omimp_ortho_zdb_id = ortho_zdb_id
                                 join marker on ortholog.ortho_zebrafish_gene_zdb_id = mrkr_zdb_id
                            where term_ontology = 'disease_ontology';"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="term_disease_gene_alias"
                   datasource="db" query="select
                            dalias_alias as	gene_previous_name,
                            term_zdb_id as term_zdb_id
                            from term, term_xref, omim_phenotype, ortholog, data_alias,omimp_termxref_mapping 
                                 where tx_term_zdb_id = term_zdb_id
                                  and  otm_tx_id = tx_pk_id
                                and otm_omimp_id = omimp_pk_id
                                 and omimp_ortho_zdb_id = ortho_zdb_id
                                 and dalias_data_zdb_id = ortho_zebrafish_gene_zdb_id
                            and term_ontology = 'disease_ontology';"
                   where="term_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache"/>

               <!--  disease parent / child relationship stuff.   I think it should be: my id gets found in my parents record
                     should get commented out & tested once disease_ontology is in all_term_contains

select
child.term_ont_id as xref,
alltermcon_container_zdb_id as term_zdb_id
from all_term_contains
     join term as child on alltermcon_contained_zdb_id = child.term_zdb_id
     join term as parent on alltermcon_container_zdb_id = parent.term_zdb_id
where parent.term_ontology = 'disease_ontology'
  and child.term_ontology = 'disease_ontology';

               -->



<!--   *** Pardon me leaving this commented out, the but the value,Any pattern with the splitter is nice...

           <entity name="direct_term_usages" transformer="RegexTransformer"
                   datasource="db" query="select term_ont_id, 'Phenotype,Any' as term_usage
from term
where exists (select 'x' from phenotype_observation_generated where psg_e1a_zdb_id = term_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_e1b_zdb_id = term_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_quality_zdb_id = term_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_e2a_zdb_id = term_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_e2b_zdb_id = term_zdb_id)
union
select term_ont_id, 'Expression,Any' as term_usage
from term
where exists (select 'x' from expression_result where xpatres_superterm_zdb_id = term_zdb_id)
  and exists (select 'x' from expression_result where xpatres_subterm_zdb_id = term_zdb_id)
union
select term_ont_id, 'Gene,Any' as term_usage
from term
where exists (select 'x' from marker_go_term_evidence where mrkrgoev_term_zdb_id = term_zdb_id)"

                    where="term_ont_id=term.id"
                   cacheImpl="SortedMapBackedCache">
                 <field name="term_usage" column="term_usage" splitBy=","/>
               </entity>


       <entity name="term_usages" transformer="RegexTransformer"
               datasource="db" query="select alltermcon_container_zdb_id as term_zdb_id, 'Phenotype,Any' as term_usage_with_children
from all_term_contains
where exists (select 'x' from phenotype_observation_generated where psg_e1a_zdb_id = alltermcon_contained_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_e1b_zdb_id = alltermcon_contained_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_quality_zdb_id = alltermcon_contained_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_e2a_zdb_id = alltermcon_contained_zdb_id)
  or exists (select 'x' from phenotype_observation_generated where psg_e2b_zdb_id = alltermcon_contained_zdb_id)
union
select alltermcon_container_zdb_id as term_zdb_id, 'Expression,Any' as term_usage_with_children
from all_term_contains
where exists (select 'x' from expression_result where xpatres_superterm_zdb_id = alltermcon_contained_zdb_id)
  and exists (select 'x' from expression_result where xpatres_subterm_zdb_id = alltermcon_contained_zdb_id)
union
select alltermcon_container_zdb_id as term_zdb_id, 'Gene,Any' as term_usage_with_children
from all_term_contains
where exists (select 'x' from marker_go_term_evidence where mrkrgoev_term_zdb_id = alltermcon_contained_zdb_id)"
               where="term_zdb_id=term.internal_id"
               cacheImpl="SortedMapBackedCache">
           <field name="term_usage_with_children" column="term_usage_with_children" splitBy=","/>

       </entity>
-->


       </entity>

       <entity name="publication"
               datasource="db" query="select zdb_id as id,
                             title as name,
                             title as full_name,
                             zero_pad(pub_mini_ref) as name_sort,
                             pub_mini_ref as alias,
                             'Publication' as category,
                             '/' || zdb_id as url,
                             pub_date as date,
                             pub_arrival_date as pet_date,
                             jtype as publication_type,
                             pub_abstract as abstract,
                             pub_jrnl_zdb_id as xref,
                             'PMID:' || accession_no as related_accession,
                             case when pub_is_indexed = 't' then 'Indexed'
                                  else 'Not Indexed' end as indexing_status,
                             case when status = 'active' then 'Active'
                                  when status = 'inactive' then 'Inactive'
                                  else status end as publication_status,
                             keywords as keyword,
                             authors as author_string
                             from publication">

           <entity name="pub_images"
                   datasource="db" query="select
                     case
                       when img_image_with_annotation is not null
                       then img_image_with_annotation
                       else img_image end as image,
                       img_thumbnail as thumbnail,
                       img_zdb_id,
                       'true' as has_image,
                       publication.zdb_id as pub_zdb_id
                       from image
                            join figure on img_fig_zdb_id = fig_zdb_id
                            join publication on zdb_id = fig_source_zdb_id
                       where jtype = 'Journal';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_recattrib_xref"
                   datasource="db" query="select distinct recattrib_source_zdb_id as pub_zdb_id, recattrib_data_zdb_id as xref
                            from record_attribution
                            where substring(recattrib_source_zdb_id from 1 for 7) = 'ZDB-PUB'
                              and substring(recattrib_data_zdb_id from 1 for 8) != 'ZDB-GENE'
                              and substring(recattrib_data_zdb_id from 1 for 7) != 'ZDB-ALT'
                              and substring(recattrib_data_zdb_id from 1 for 8) != 'ZDB-ANAT'
                              and substring(recattrib_data_zdb_id from 1 for 10) != 'ZDB-DALIAS'
                              and substring(recattrib_data_zdb_id from 1 for 9) != 'ZDB-APATO'
                              and substring(recattrib_data_zdb_id from 1 for 7) != 'ZDB-EXP'
                              and substring(recattrib_data_zdb_id from 1 for 9) != 'ZDB-IMAGE'
                              and substring(recattrib_data_zdb_id from 1 for 8) != 'ZDB-MREL'
                              and substring(recattrib_data_zdb_id from 1 for 10) != 'ZDB-DBLINK'
                              and substring(recattrib_data_zdb_id from 1 for 8) != 'ZDB-OEVD'
                              and substring(recattrib_data_zdb_id from 1 for 8) != 'ZDB-XPAT';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_gene_slow"
                   datasource="db" query="
                   select distinct recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                            from record_attribution ra , db_link dbl, marker
                            where  dbl.dblink_zdb_id  = ra.recattrib_data_zdb_id
                            and  mrkr_zdb_id = dbl.dblink_linked_recid
                            and mrkr_type in ('GENE','GENEP')
                   "
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_gene_slow_2"
                   datasource="db" query="
                      select distinct recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                      from record_attribution ra , marker_relationship mr, marker
                      where mrkr_zdb_id = mr.mrel_mrkr_1_zdb_id
                      and  ra.recattrib_data_zdb_id = mr.mrel_zdb_id
                      and mrkr_type in ('GENE', 'GENEP')"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>



           <entity name="pub_gene2"
                   datasource="db" query="

                     select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                      from record_attribution ra , marker_relationship mr, marker
                      where mrkr_zdb_id = mr.mrel_mrkr_2_zdb_id
                      and ra.recattrib_data_zdb_id = mr.mrel_zdb_id
                      and mrkr_type in ('GENE', 'GENEP')

                   UNION

                    select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                     from marker, record_attribution
                    where recattrib_data_zdb_id = mrkr_zdb_id
                    and mrkr_type in ('GENE', 'GENEP')

                    UNION

                       select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra , data_alias da, marker
                        where da.dalias_zdb_id = ra.recattrib_data_zdb_id
                        and mrkr_zdb_Id = da.dalias_data_zdb_id
                        and mrkr_type in ('GENE','GENEP')
                        UNION

                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                      from record_attribution ra , marker_relationship mr , marker
                      where mrkr_zdb_id = mr.mrel_mrkr_2_zdb_id
                      and  ra.recattrib_data_zdb_id = mr.mrel_mrkr_1_zdb_id
                      and  mr.mrel_mrkr_1_zdb_id = mrkr_zdb_id

                      UNION

                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra , db_link dbl , marker_relationship mr, marker
                        where  dbl.dblink_zdb_id  = ra.recattrib_data_zdb_id
                        and dbl.dblink_linked_recid = mr.mrel_mrkr_2_zdb_id
                        and  mrkr_zdb_id = mr.mrel_mrkr_1_zdb_id
                        and  mr.mrel_type = 'gene encodes small segment'

                      UNION
                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra ,  ortholog_evidence ev, marker, ortholog
                        where  ev.oev_ortho_zdb_id = ra.recattrib_data_zdb_id
			and ortholog.ortho_zdb_id = ev.oev_ortho_Zdb_id
                        and  mrkr_zdb_Id = ortho_zebrafish_gene_zdb_id

                      UNION
                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra ,  marker_go_term_evidence ev, marker
                        where  ev.mrkrgoev_zdb_id  = ra.recattrib_data_zdb_id
                        and  mrkr_zdb_id = ev.mrkrgoev_mrkr_zdb_id

                      UNION
                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra ,  feature_marker_relationship fmr, marker
                        where  fmr.fmrel_ftr_zdb_id  = ra.recattrib_data_zdb_id
                        and  mrkr_zdb_id = fmr.fmrel_mrkr_zdb_id and fmrel_type='is allele of'
                        and mrkr_type in ('GENE','GENEP')

                       UNION
                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra ,  feature_marker_relationship fmr, genotype_feature gf, marker
                        where  gf.genofeat_geno_zdb_id  = ra.recattrib_data_zdb_id
                        and  mrkr_zdb_id = fmr.fmrel_mrkr_zdb_id
                        and fmr.fmrel_ftr_zdb_id  = gf.genofeat_feature_zdb_id
                        and mrkr_type in ('GENE','GENEP')

                      UNION
                      select recattrib_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from record_attribution ra ,  genotype_feature gf, marker
                        where  gf.genofeat_geno_zdb_id  = ra.recattrib_data_zdb_id
                        and  mrkr_zdb_id = gf.genofeat_feature_zdb_id
                        and mrkr_type in ('GENE','GENEP')

                      UNION
                      select xpatex_source_zdb_id as pub_zdb_id,
                          mrkr_abbrev as gene,
                          mrkr_name as gene_full_name,
                          mrkr_zdb_id as xref
                        from expression_experiment ra , marker
                        where  mrkr_zdb_id = ra.xpatex_gene_zdb_Id
                        and mrkr_type in ('GENE','GENEP')
                                               "
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_antibody"
                   datasource="db" query="select recattrib_source_zdb_id as pub_zdb_id,
                                 recattrib_data_zdb_id as xref
                     from record_attribution
                    where substring(recattrib_data_zdb_id from 1 for 7) = 'ZDB-ATB';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_construct"
                   datasource="db" query="select recattrib_source_zdb_id as pub_zdb_id,
                                 cons_construct_zdb_id as xref
           from record_attribution, construct_search,feature_marker_relationship
           where recattrib_data_zdb_id = fmrel_ftr_zdb_id
           and fmrel_mrkr_zdb_id=cons_construct_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>


           <entity name="pub_fish_xref_from_exp"
                   datasource="db" query="select
                              genox_fish_zdb_id as xref,
                              exp_source_zdb_id as pub_zdb_id
                            from fish_experiment
                                 join experiment on exp_zdb_id = genox_exp_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_fish_xref_from_record_attribution"
                   datasource="db" query="select
                              fish_zdb_id as xref,
                              recattrib_source_zdb_id as pub_zdb_id
                            from record_attribution
                                 join fish on fish_zdb_id = recattrib_data_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>


           <!-- TODO: this should go back to joining on record_attribution instead of disease_annotation when possible -->
           <entity name="pub_disease"
                   datasource="db" query="select
                               term_name as disease,
                               term_ont_id as xref,
                               dat_source_zdb_id as pub_zdb_id
                               from term
                               join disease_annotation on term.term_zdb_id = disease_annotation.dat_term_zdb_id
                               where term_ontology = 'disease_ontology';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <!-- this is sort of an experiment, is it reasonable to just reverse this for pubs... ? -->
           <entity name="pub_attribution"
                   datasource="db" query="select recattrib_source_zdb_id as pub_zdb_id, count(recattrib_data_zdb_id) as attribution_count
                            from record_attribution
                            where substring(recattrib_source_zdb_id from 1 for 7) = 'ZDB-PUB'
                            group by 1;"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>


           <entity name="pub_gene_previous_name"
                   datasource="db" query="select recattrib_source_zdb_id as pub_zdb_id,
                                             dalias_alias as gene_previous_name
                                        from data_alias, record_attribution
                                       where recattrib_data_zdb_id = dalias_data_zdb_id
                                         and substring(recattrib_data_zdb_id from 1 for 8) = 'ZDB-GENE';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_has_orthology"
                   datasource="db" query="select 'true' as has_orthology,
                                   recattrib_source_zdb_id as pub_zdb_id
                            from record_attribution
                            where exists (select 'x'
                                          from ortholog
                                          where recattrib_data_zdb_id = ortho_zdb_id);"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

<!-- this works, but until there's a full set of expression/phenotype stuff, I'm gonna comment it out..

             <entity name="pub_expressed_gene"
                   datasource="db" query="select
                          distinct mrkr_abbrev as expressed_gene,
                          xpatex_source_zdb_id as pub_zdb_id
                   from marker,
                        expression_experiment,
                        expression_result,
                        expression_pattern_figure,
                        figure
                   where mrkr_zdb_id = xpatex_gene_zdb_id
                     and xpatres_xpatex_zdb_id = xpatex_zdb_id"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>-->

           <entity name="pub_feature"
                   datasource="db" query="select recattrib_source_zdb_id as pub_zdb_id,
                          feature_abbrev as sequence_alteration, feature_zdb_id as xref
                     from feature, record_attribution
                    where recattrib_data_zdb_id = feature_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_authors"
                   datasource="db" query="select person.zdb_id as xref, person.full_name as registered_author, target_id as pub_zdb_id
                         from person, int_person_pub
                         where int_person_pub.source_id = person.zdb_id"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>




           <entity name="pub_journal"
                   datasource="db" query="select jrnl_abbrev as journal, jrnl_name as journal_name, zdb_id as pub_zdb_id
                     from publication,journal
                    where pub_jrnl_zdb_id = jrnl_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_topic"
                   datasource="db" query="select cur_pub_zdb_id as pub_zdb_id, cur_topic as topic
                   from curation
                   where cur_data_found = 't'
                     and cur_topic != 'Linked Authors';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_tracking_location"
                   datasource="db" query="select nvl(ptl_location_display,'') as location, pth_pub_zdb_id as pub_zdb_id
                   from pub_tracking_history,pub_tracking_location
                   where pth_location_id=ptl_pk_id
                   and pth_status_is_current='t';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_tracking_status"
                   datasource="db" query="select pts_status_display as curation_status,pth_pub_zdb_id as pub_zdb_id
                   from pub_tracking_history,pub_tracking_status
                   where pth_status_id=pts_pk_id
                   and pth_status_is_current='t';"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

           <entity name="pub_owner"
                   datasource="db" query="select nvl(first_name || ' ' || last_name,'None') as owner,
                           pth_pub_zdb_id as pub_zdb_id
                    from pub_tracking_history
                         join person on pth_claimed_by = person.zdb_id
                         where pth_status_is_current='t';"
                     cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>


<!--
           This is commented out because it causes locks

           <entity name="pub_abstract_from_clob" &lt;!&ndash;transformer="ClobTransformer"&ndash;&gt;
                   query="select zdb_id as pub_zdb_id, pub_abstract as abstract
                          from publication"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id">

               &lt;!&ndash; de-clob-ify abstracts &ndash;&gt;
               <field column="pub_abstract" name="abstract" &lt;!&ndash;clob="true"&ndash;&gt; />
           </entity>
-->
           <entity name="pub_mesh_term"
                   datasource="db" query="
                        SELECT des.mesht_term_name || nvl('/' || qual.mesht_term_name, '') AS full_mesh_term, mh_pub_zdb_id AS pub_zdb_id
                        FROM mesh_heading
                        LEFT JOIN mesh_heading_qualifier ON mh_pk_id = mhq_mesh_heading_id
                        INNER JOIN mesh_term des ON des.mesht_mesh_id = mh_mesht_mesh_descriptor_id
                        LEFT JOIN mesh_term qual ON qual.mesht_mesh_id = mhq_mesht_mesh_qualifier_id"
                   cacheImpl="SortedMapBackedCache"
                   where="pub_zdb_id=publication.id"/>

       </entity>





       <entity name="figure" transformer="HTMLStripTransformer"
               datasource="db" query="select fig_zdb_id as id,
                             nvl(pub_mini_ref,'') || ' ' || nvl(fig_label,'') as name,
                             nvl(pub_mini_ref,'') || ' ' || nvl(fig_label,'') as full_name,
                             zero_pad(nvl(pub_mini_ref,'') || ' ' || nvl(fig_label,'')) as name_sort,
                             'Figure' as category,
                             to_date(get_date_from_id(fig_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date,
                             '/' || fig_zdb_id as url,
                             fig_caption as caption
                      from figure, publication
                      where fig_source_zdb_id = zdb_id">
           <field column="caption" stripHTML="true"/>

           <entity name="figure_authors"
                   datasource="db" query="select person.full_name as registered_author, fig_zdb_id
                         from person, int_person_pub, figure
                         where int_person_pub.source_id = person.zdb_id
                           and fig_source_zdb_id = target_id"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id">
           </entity>

           <entity name="figure_image"
                   datasource="db" query="
                   select
                     case
                       when img_image_with_annotation is not null
                       then img_image_with_annotation
                       else img_image end as image,
                       img_thumbnail as thumbnail,
                       'true' as has_image,
                       img_zdb_id,
                       img_fig_zdb_id as fig_zdb_id
                       from image where img_fig_zdb_id is not null;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_fish_from_pheno"
                   datasource="db" query="select
                    pg_fig_zdb_id as fig_zdb_id,
                    fish_name as fish
                    from phenotype_source_generated
                         join fish_experiment on pg_genox_zdb_id = genox_zdb_id
                         join fish on genox_fish_zdb_id = fish_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_fish_from_expression"
                   datasource="db" query="select
                      fish_name as fish,
                      efs_fig_zdb_id as fig_zdb_d
                    from expression_experiment2
                         join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                         join fish_experiment on genox_zdb_id = xpatex_genox_zdb_id
                         join fish on genox_fish_zdb_id = fish_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_expression_xref"
                   datasource="db" query="select xpatres_xpatex_zdb_id as xref,
                                 xpatfig_fig_zdb_id as fig_zdb_id
                           from expression_result
                                join expression_pattern_figure on xpatfig_xpatres_zdb_id = xpatres_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>


           <entity name="figure_zebrafish_gene"
                   datasource="db" query="select
mrkr_abbrev as zebrafish_gene,
mrkr_name as zebrafish_gene_full_name,
xpatfig_fig_zdb_id as fig_zdb_id
from expression_experiment
     join marker on xpatex_gene_zdb_id = mrkr_zdb_id
     join expression_result on xpatres_xpatex_zdb_id = xpatex_zdb_id
     join expression_pattern_figure on xpatfig_xpatres_zdb_id = xpatres_zdb_id
where substring(xpatex_gene_zdb_id from 1 for 7) != 'ZDB-EFG' "
                   where="fig_zdb_id=figure.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="figure_zebrafish_gene_alias"
                   datasource="db" query="select
dalias_alias as zebrafish_gene_previous_name,
xpatfig_fig_zdb_id as fig_zdb_id
from expression_experiment
     join data_alias on xpatex_gene_zdb_id = dalias_data_zdb_id
     join expression_result on xpatres_xpatex_zdb_id = xpatex_zdb_id
     join expression_pattern_figure on xpatfig_xpatres_zdb_id = xpatres_zdb_id
where substring(xpatex_gene_zdb_id from 1 for 7) != 'ZDB-EFG'"
                   where="fig_zdb_id=figure.id"
                   cacheImpl="SortedMapBackedCache"/>


           <entity name="figure_reporter_gene"
                   datasource="db" query="select
mrkr_abbrev as reporter_gene,
xpatfig_fig_zdb_id as fig_zdb_id
from expression_experiment
     join expression_result on xpatres_xpatex_zdb_id = xpatex_zdb_id
     join expression_pattern_figure on xpatfig_xpatres_zdb_id = xpatres_zdb_id
     join marker on xpatex_gene_zdb_id = mrkr_zdb_id
where substring(xpatex_gene_zdb_id from 1 for 7) = 'ZDB-EFG'
                   "
                   where="fig_zdb_id=figure.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="figure_feature"
                   datasource="db" query="
select feature_abbrev as sequence_alteration,
       pg_fig_zdb_id as fig_zdb_id
from phenotype_source_generated
     join fish_experiment on pg_genox_zdb_id = genox_zdb_id
     join fish on genox_fish_zdb_id = fish_zdb_id
     join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
     join feature on genofeat_feature_zdb_id = feature_zdb_id
UNION
select feature_abbrev as sequence_alteration,
     efs_fig_zdb_id as fig_zdb_id
from expression_experiment2
     join expression_figure_stage on xpatex_zdb_id = efs_xpatex_zdb_id
     join fish_experiment on xpatex_genox_zdb_id = genox_zdb_id
     join fish on genox_fish_zdb_id = fish_zdb_id
     join genotype_feature on genofeat_geno_zdb_id = fish_genotype_zdb_id
     join feature on genofeat_feature_zdb_id = feature_zdb_id;
                   "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_expression_anatomy_direct"
                   datasource="db" query="select
                                             term_ont_id as xref, term_name as expression_anatomy_direct,
                                             xpatfig_fig_zdb_id as fig_zdb_id
                                      from expression_result,
                                           expression_pattern_figure,
                                           term
                                      where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                                        and xpatres_superterm_zdb_id = term_zdb_id
                                           and term_ontology='zebrafish_anatomy'

                   union
                   select
                                             term_ont_id as xref, term_name as expression_anatomy_direct,
                                             xpatfig_fig_zdb_id as fig_zdb_id
                                      from expression_result,
                                           expression_pattern_figure,
                                           term
                                      where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                                        and xpatres_subterm_zdb_id = term_zdb_id
                                           and term_ontology='zebrafish_anatomy' ;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>
           <entity name="figure_expression_anatomy_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as expression_anatomy_parent,
                                                                xpatfig_fig_zdb_id as fig_zdb_id
                                                         from expression_result,
                                                              expression_pattern_figure,
                                                              term,
                                                              all_term_contains
                                                         where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                                                           and xpatres_superterm_zdb_id = alltermcon_contained_zdb_id
                                                           and alltermcon_container_zdb_id = term_zdb_id
                                                              and term_ontology='zebrafish_anatomy'

                                      union
                                      select
                                                                term_ont_id as xref, term_name as expression_anatomy_parent,
                                                                xpatfig_fig_zdb_id as fig_zdb_id
                                                         from expression_result,
                                                              expression_pattern_figure,
                                                              term,
                                                              all_term_contains
                                                         where xpatfig_xpatres_zdb_id = xpatres_zdb_id
                                                           and xpatres_subterm_zdb_id = alltermcon_contained_zdb_id
                                                           and alltermcon_container_zdb_id = term_zdb_id
                                                              and term_ontology='zebrafish_anatomy' ;
                   "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>



        <entity name="figure_phenotype_observation_generated"
                         datasource="db" query="select distinct psg_short_name as phenotype_statement,
pg_fig_zdb_id as fig_zdb_id
from phenotype_observation_generated
     join phenotype_source_generated on psg_pg_id = pg_id
     join term as super_1 on psg_e1a_zdb_id = super_1.term_zdb_id
     left outer join term as sub_1 on psg_e1b_zdb_id = sub_1.term_zdb_id
     join term as quality on psg_quality_zdb_id = quality.term_zdb_id
     left outer join term as super_2 on psg_e2a_zdb_id = super_2.term_zdb_id
     left outer join term as sub_2 on psg_e2b_zdb_id = sub_2.term_zdb_id
where psg_tag != 'normal';
 "
                          cacheImpl="SortedMapBackedCache"
                          where="fig_zdb_id=figure.id">
            <field column="phenotype_statement" stripHTML="true"/>
        </entity>


           <entity name="figure_misexpressed_gene" datasource="db" transformer="RegexTransformer"
                   query="select mrkr_abbrev || ',Any' as misexpressed_gene,
                                 mrkr_abbrev || ' misexpression' as expression_observation,
                                 efs_fig_zdb_id as fig_zdb_id
                            from expression_experiment2
                                 join expression_figure_stage on efs_xpatex_zdb_id = xpatex_zdb_id
                                 join expression_result2 on xpatres_efs_id = efs_pk_id
                                 join expression_phenotype_term on ept_xpatres_id = xpatres_pk_id
                                 join marker as gene on xpatex_gene_zdb_id = mrkr_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id">
               <field name="misexpressed_gene" column="misexpressed_gene" splitBy=","/>
           </entity>

          <entity name="figure_affected_anatomy_direct"
                datasource="db" query="select term_ont_id as xref, term_name as affected_anatomy_direct, pg_fig_zdb_id as fig_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e1a_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as affected_anatomy_direct, pg_fig_zdb_id as fig_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e1b_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as affected_anatomy_direct, pg_fig_zdb_id as fig_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e2a_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy'
                        union
                        select term_ont_id as xref, term_name as affected_anatomy_direct, pg_fig_zdb_id as fig_zdb_id
                          from phenotype_observation_generated ps, phenotype_source_generated, term
                         where term_zdb_id = psg_e2b_zdb_id
                           and psg_pg_id = pg_id
                           and ps.psg_tag = 'abnormal'
                           and term_ontology='zebrafish_anatomy';"
                cacheImpl="SortedMapBackedCache"
                where="fig_zdb_id=figure.id"/>

           <entity name="figure_affected_anatomy_parent"
                           datasource="db" query="select term_ont_id as xref, term_name as affected_anatomy_parent, pg_fig_zdb_id as fig_zdb_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy'
                           union
                           select term_ont_id as xref, term_name as affected_anatomy_parent, pg_fig_zdb_id as fig_zdb_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                            where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy'
                           union
                           select term_ont_id as xref, term_name as affected_anatomy_parent, pg_fig_zdb_id as fig_zdb_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                            where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy'
                           union
                           select term_ont_id as xref, term_name as affected_anatomy_parent, pg_fig_zdb_id as fig_zdb_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                            where term_zdb_id = alltermcon_container_zdb_id
                              and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'
                              and term_ontology='zebrafish_anatomy';"
                           cacheImpl="SortedMapBackedCache"
                           where="fig_zdb_id=figure.id"/>


           <entity name="figure_phenotype_quality_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as phenotype_quality_direct, pg_fig_zdb_id as fig_zdb_id
                             from phenotype_observation_generated ps, phenotype_source_generated, term
                            where term_zdb_id = psg_quality_zdb_id
                              and psg_pg_id = pg_id
                              and ps.psg_tag = 'abnormal'; "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_phenotype_quality_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as phenotype_quality_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_quality_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and alltermcon_contained_zdb_id != alltermcon_container_zdb_id;"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>


           <entity name="figure_affected_cellular_component_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_cellular_component_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'
                   union
                   select term_ont_id as xref, term_name as affected_cellular_component_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'
                   union
                   select term_ont_id as xref, term_name as affected_cellular_component_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'
                   union
                   select term_ont_id as xref, term_name as affected_cellular_component_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='cellular_component'; "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_affected_cellular_component_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_cellular_component_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'
                          union
                          select term_ont_id as xref, term_name as affected_cellular_component_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'
                          union
                          select term_ont_id as xref, term_name as affected_cellular_component_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'
                          union
                          select term_ont_id as xref, term_name as affected_cellular_component_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='cellular_component'; "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>


           <entity name="figure_affected_biological_process_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_biological_process_direct, pg_fig_zdb_id as fig_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e1a_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process'
                                      union
                                      select term_ont_id as xref, term_name as affected_biological_process_direct, pg_fig_zdb_id as fig_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e1b_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process'
                                      union
                                      select term_ont_id as xref, term_name as affected_biological_process_direct, pg_fig_zdb_id as fig_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e2a_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process'
                                      union
                                      select term_ont_id as xref, term_name as affected_biological_process_direct, pg_fig_zdb_id as fig_zdb_id
                                        from phenotype_observation_generated ps, phenotype_source_generated, term
                                       where term_zdb_id = psg_e2b_zdb_id
                                         and psg_pg_id = pg_id
                                         and ps.psg_tag = 'abnormal'
                                         and term_ontology='biological_process';
                    "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_affected_biological_process_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_biological_process_parent, pg_fig_zdb_id as fig_zdb_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'
                         union
                         select term_ont_id as xref, term_name as affected_biological_process_parent, pg_fig_zdb_id as fig_zdb_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'
                         union
                         select term_ont_id as xref, term_name as affected_biological_process_parent, pg_fig_zdb_id as fig_zdb_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'
                         union
                         select term_ont_id as xref, term_name as affected_biological_process_parent, pg_fig_zdb_id as fig_zdb_id
                           from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                          where term_zdb_id = alltermcon_container_zdb_id
                            and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                            and psg_pg_id = pg_id
                            and ps.psg_tag = 'abnormal'
                            and term_ontology='biological_process'; "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_affected_molecular_function_direct"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_molecular_function_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'
                   union
                   select term_ont_id as xref, term_name as affected_molecular_function_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e1b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'
                   union
                   select term_ont_id as xref, term_name as affected_molecular_function_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2a_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'
                   union
                   select term_ont_id as xref, term_name as affected_molecular_function_direct, pg_fig_zdb_id as fig_zdb_id
                     from phenotype_observation_generated ps, phenotype_source_generated, term
                    where term_zdb_id = psg_e2b_zdb_id
                      and psg_pg_id = pg_id
                      and ps.psg_tag = 'abnormal'
                      and term_ontology='molecular_function'; "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

           <entity name="figure_affected_molecular_function_parent"
                   datasource="db" query="select term_ont_id as xref, term_name as affected_molecular_function_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'
                          union
                          select term_ont_id as xref, term_name as affected_molecular_function_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e1b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'
                          union
                          select term_ont_id as xref, term_name as affected_molecular_function_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2a_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'
                          union
                          select term_ont_id as xref, term_name as affected_molecular_function_parent, pg_fig_zdb_id as fig_zdb_id
                            from phenotype_observation_generated ps, phenotype_source_generated, term, all_term_contains
                           where term_zdb_id = alltermcon_container_zdb_id
                             and alltermcon_contained_zdb_id = psg_e2b_zdb_id
                             and psg_pg_id = pg_id
                             and ps.psg_tag = 'abnormal'
                             and term_ontology='molecular_function'; "
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>








	    <entity name="figure_construct"
                datasource="db" query="select cons_abbrev as construct, xpatfig_fig_zdb_id as fig_zdb_id, cons_construct_zdb_id as xref
                from construct_search, figure_term_construct_search, expression_experiment, expression_result, expression_pattern_figure
                where cons_pk_id = ftcs_cs_id
                  and ftcs_genox_zdb_id = xpatex_genox_zdb_id
                  and xpatex_zdb_id = xpatres_xpatex_zdb_id
                  and xpatfig_xpatres_zdb_id = xpatres_zdb_id;"
                cacheImpl="SortedMapBackedCache"
                where="fig_zdb_id=figure.id"/>


        <entity name="figure_coding_sequence"
                   datasource="db" query="select distinct mrkr_zdb_id as xref, mrkr_abbrev as coding_sequence, dalias_alias as coding_sequence_full_name, xpatfig_fig_zdb_id as fig_zdb_id
                               from construct_search, figure_term_construct_search, expression_experiment, expression_result,
                               expression_pattern_figure, marker_relationship, marker, data_alias
                               where cons_pk_id = ftcs_cs_id
                                 and ftcs_genox_zdb_id = xpatex_genox_zdb_id
                                 and xpatex_zdb_id = xpatres_xpatex_zdb_id
                                 and xpatfig_xpatres_zdb_id = xpatres_zdb_id
                                 and mrel_mrkr_1_zdb_id = cons_construct_zdb_id
                                 and mrel_mrkr_2_zdb_id = mrkr_zdb_id
                                 and mrel_mrkr_2_zdb_id = dalias_data_zdb_id
                                 and mrel_type = 'coding sequence of';"
                   cacheImpl="SortedMapBackedCache"
                   where="fig_zdb_id=figure.id"/>

        <entity name="figure_expression_observation"
                datasource="db" query="
select
fig_zdb_id,
mrkr_abbrev || ' expressed in ' || term_name
as expression_observation
from figure, expression_experiment, marker,
     expression_result,expression_pattern_figure, term
where fig_zdb_id=xpatfig_fig_zdb_id
  and xpatfig_xpatres_zdb_id=xpatres_zdb_id
  and xpatres_xpatex_zdb_id=xpatex_zdb_id
  and xpatex_gene_zdb_id = mrkr_zdb_id
  and xpatres_superterm_zdb_id = term_zdb_id
  and xpatres_expression_found = 't'
union
select
fig_zdb_id,
mrkr_abbrev || ' expressed in ' || term_name
as expression_observation
from figure, expression_experiment, marker,
     expression_result,expression_pattern_figure, term
where fig_zdb_id=xpatfig_fig_zdb_id
  and xpatfig_xpatres_zdb_id=xpatres_zdb_id
  and xpatres_xpatex_zdb_id=xpatex_zdb_id
  and xpatex_gene_zdb_id = mrkr_zdb_id
  and xpatres_subterm_zdb_id = term_zdb_id
  and xpatres_expression_found = 't'
;"
                cacheImpl="SortedMapBackedCache"
                where="fig_zdb_id=figure.id"/>


   </entity>







       <entity name="person" transformer="HTMLStripTransformer"
               datasource="db" query=" select zdb_id as id,
                              full_name as name,
                              full_name as proper_name,
                              full_name as full_name,
                              full_name as person_name,
                              lower(full_name) as name_sort,
                              'Community' as category,
                              'Person' as type,
                              to_date(get_date_from_id(zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date,
                              '/' || zdb_id as url,
                              image as profile_image,
                              pers_bio as biography,
                              address as postal_address,
                              email as email_address
                       from person;
                              ">
            <field column="biography" stripHTML="true"/>


           <entity name="person_sequence_alteration"
                   datasource="db" query="select distinct feature_abbrev as sequence_alteration, person.zdb_id as person_zdb_id
                     from feature, record_attribution, int_person_pub, person
                    where recattrib_data_zdb_id = feature_zdb_id
                      and int_person_pub.target_id = recattrib_source_zdb_id
                      and int_person_pub.source_id = person.zdb_id; "
                   cacheImpl="SortedMapBackedCache"
                   where="person_zdb_id=person.id"/>


       </entity>

       <entity name="lab" transformer="HTMLStripTransformer"
               datasource="db" query=" select zdb_id as id,
                                             name as name,
                                             name as proper_name,
                                             name as full_name,
                                             lower(name) as name_sort,
                                             'Community' as category,
                                             'Lab' as type,
                                             '/' || zdb_id as url,
                                             to_date(get_date_from_id(zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date,
                                             image as profile_image,
                                             bio as biography,
                                             address as postal_address,
                                             email as email_address
                                      from lab;
                              ">
            <field column="biography" stripHTML="true"/>

            <entity name="lab_PI"
                    datasource="db" query="select first_name || ' ' || last_name as lab_member_name,
                                   target_id as lab_zdb_id
                            from int_person_lab
                                 join person on source_id = person.zdb_id
                            where position_id in (1,7);"
                    cacheImpl="SortedMapBackedCache"
                    where="lab_zdb_id=lab.id"/>

	    <entity name="lab_person_xref"
                    datasource="db" query="select
                            source_id as xref,
                            target_id as lab_zdb_id
                           from int_person_lab;"
                    cacheImpl="SortedMapBackedCache"
                    where="lab_zdb_id=lab.id"/>


       </entity>

       <entity name="company" transformer="HTMLStripTransformer"
               datasource="db" query=" select zdb_id as id,
                                                            name as name,
                                                            name as proper_name,
                                                            name as full_name,
                                                            lower(name) as name_sort,
                                                            'Community' as category,
                                                            'Company' as type,
                                                            '/' || zdb_id as url,
                                                            to_date(get_date_from_id(zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date,
                                                            image as profile_image,
                                                            bio as biography,
                                                            address as postal_address,
                                                            email as email_address
                                                     from company;
                              ">
            <field column="biography" stripHTML="true"/>
       </entity>

        <!--  These are 'autocomplete only' results, which will be filtered out of the main query by default -->

       <entity name="phenotype_statement"
               datasource="db" query="
                        select distinct 'psg-' || psg_id as id,
                        psg_short_name as name,
                        psg_short_name as full_name,
                        'Autocomplete' as category,
                        'Phenotype Statement' as type
                        from phenotype_observation_generated;
               ">

           <entity name="phenotype_statement_alias_statements"
                   datasource="db" query="select dalias_alias || ' ' || entity1a.term_name as alias,
                                 'psg-' || psg_id as psg_id
                            from phenotype_observation_generated ps, data_alias, term entity1a, term quality
                            where dalias_data_zdb_id = psg_quality_zdb_id
      	      	      	     and entity1a.term_zdb_id = psg_e1a_zdb_id
                             and quality.term_zdb_id = psg_quality_zdb_id
                             and ps.psg_tag = 'abnormal'
                             and psg_e1b_zdb_id is null
                             and psg_e2a_zdb_id is null
                             and psg_e2b_zdb_id is null
                            UNION
                            select quality_alias.dalias_alias || ' ' || entity_alias.dalias_alias as alias,
                            'psg-' || psg_id as psg_id
                            from phenotype_observation_generated ps, data_alias quality_alias,
                                 data_alias entity_alias, term entity1a, term quality
                            where quality_alias.dalias_data_zdb_id = psg_quality_zdb_id
            		     and entity_alias.dalias_data_zdB_id = psg_e1a_zdb_id
       	                     and entity1a.term_zdb_id = psg_e1a_zdb_id
                             and quality.term_zdb_id = psg_quality_zdb_id
                             and ps.psg_tag = 'abnormal'
                             and psg_e1b_zdb_id is null
                             and psg_e2a_zdb_id is null
                             and psg_e2b_zdb_id is null;"
                   where="psg_id=phenotype_statement.id"
                   cacheImpl="SortedMapBackedCache"/>
       </entity>

        <entity name="omim_disease"
                datasource="db" query="
                        select distinct
                               strip_omim(omimp_name) as name,
                               strip_omim(omimp_name) as full_name,
                               strip_omim(omimp_name) as id,
                               'Autocomplete' as category,
                               'OMIM Disease' as type
                        from omim_phenotype where strip_omim(omimp_name) not in (Select term_name from term where term_ontology = 'disease_ontology')
                "/>


       <entity name="autocomple_terms"
               datasource="db" query="select term_ont_id as id,
                             term_zdb_id as internal_id,
                             term_name as name,
                             term_name as full_name,
                             'Autocomplete' as category,
                             'Quality' as type,
                             term_is_obsolete as obsolete,
                             term_definition as definition
                      from term
                      where term_ontology in ('quality','zebrafish_experimental_conditions_ontology','zeco_taxonomy'); ">

           <entity name="term_aliases"
                   datasource="db" query="select dalias_alias alias, dalias_data_zdb_id
                             from data_alias
                             where substring(dalias_data_zdb_id from 1 for 8) = 'ZDB-TERM'"
                   where="dalias_data_zdb_id=term.internal_id"
                   cacheImpl="SortedMapBackedCache" />

       </entity>

       <entity name="journal"
               datasource="db" query="select
                      jrnl_name as full_name,
                      jrnl_abbrev as name,
                      jrnl_abbrev as name_order,
                      '/' || jrnl_zdb_id as url,
                      jrnl_zdb_id as id,
                      'Journal' as category,
                      't' as root_only,
                      jrnl_online_issn,
                      jrnl_print_issn,
                      jrnl_nlmid
                      from journal">
            <field column="jrnl_online_issn" name="related_accession"/>
            <field column="jrnl_print_issn" name="related_accession"/>
            <field column="jrnl_nlmid" name="related_accession"/>

           <entity name="journal_no_accession" datasource="db"
                   query="select 'None' as related_accession,
                                 jrnl_zdb_id
                          from journal
                          where jrnl_online_issn is null
                            and jrnl_print_issn is null
                            and jrnl_nlmid is null"
                   where="jrnl_zdb_id=journal.id"
                   cacheImpl="SortedMapBackedCache"/>

           <entity name="journal_alias" datasource="db"
                   query="select salias_alias as alias,
                               salias_source_zdb_id as jrnl_zdb_id
                        from source_alias
                        where salias_source_zdb_id like 'ZDB-JRNL-%';"
                   where="jrnl_zdb_id=journal.id"
                   cacheImpl="SortedMapBackedCache"/>

       </entity>

       <entity name="condition"
               datasource="db" query="select distinct
                             case
                                  when cdt_name = 'Ethinylestradiol (CAS: 57-63-6)' then 'Ethinylestradiol'
                                  when cdt_name = 'TCDD (2,3,7,8-tetrachlorodibenzo-p-dioxin) (CAS: 1746-01-6)' then 'TCDD (2,3,7,8-tetrachlorodibenzo-p-dioxin)'
                                  when cdt_name = 'DEAB (CAS:93148-15-3)' then 'DEAB'
                                  when cdt_name = 'Cadmium chloride (CAS: 10108-64-2)' then 'Cadmium chloride'
                                  when cdt_name = 'all-trans retinoic acid (CAS: 302-79-4)' then 'all-trans retinoic acid'
                                  when cdt_name = 'ENU (CAS: 759-73-9)' then 'ENU'
                                  when cdt_name = '3-methyladenine (CAS: 5142-23-4)' then '3-methyladenine'
                                  when cdt_name = 'Acridine orange (CAS: 65-61-2)' then 'Acridine orange'
                                  when cdt_name = '17beta-estradiol (CAS: 50-28-2)' then '17beta-estradiol'
                                  when cdt_name = 'cyclopamine (CAS: 4449-51-8)' then 'cyclopamine'
                                  when cdt_name = 'SU5416 (CAS:194413-58-6)' then 'SU5416'
                                  when cdt_name = 'Rapamycin (CAS: 53123-88-9)' then 'Rapamycin'
                                  when cdt_group in ('physical','chemical','physiological') then cdt_name
                                  else cdt_group || ':' || cdt_name end as name,
                                  case
                                  when cdt_name = 'Ethinylestradiol (CAS: 57-63-6)' then 'Ethinylestradiol'
                                  when cdt_name = 'TCDD (2,3,7,8-tetrachlorodibenzo-p-dioxin) (CAS: 1746-01-6)' then 'TCDD (2,3,7,8-tetrachlorodibenzo-p-dioxin)'
                                  when cdt_name = 'DEAB (CAS:93148-15-3)' then 'DEAB'
                                  when cdt_name = 'Cadmium chloride (CAS: 10108-64-2)' then 'Cadmium chloride'
                                  when cdt_name = 'all-trans retinoic acid (CAS: 302-79-4)' then 'all-trans retinoic acid'
                                  when cdt_name = 'ENU (CAS: 759-73-9)' then 'ENU'
                                  when cdt_name = '3-methyladenine (CAS: 5142-23-4)' then '3-methyladenine'
                                  when cdt_name = 'Acridine orange (CAS: 65-61-2)' then 'Acridine orange'
                                  when cdt_name = '17beta-estradiol (CAS: 50-28-2)' then '17beta-estradiol'
                                  when cdt_name = 'cyclopamine (CAS: 4449-51-8)' then 'cyclopamine'
                                  when cdt_name = 'SU5416 (CAS:194413-58-6)' then 'SU5416'
                                  when cdt_name = 'Rapamycin (CAS: 53123-88-9)' then 'Rapamycin'
                                  when cdt_group in ('physical','chemical','physiological') then cdt_name
                                  else cdt_group || ':' || cdt_name end as full_name,
                                  cdt_group || cdt_name as id,
                             'Autocomplete' as category,
                             'Condition' as type
                        from condition_data_type
                        where cdt_group || ':' || cdt_name not in ('chemical:other','morpholino:morpholino','TALEN:TALEN');"/>


        <!-- this fills the STR categories on marker search, but is excluded from site search -->
        <entity name="str_relationship"
                datasource="db" query="select mrel_zdb_id as id,
                                       'STR Relationship' as Category,
                                       mrkrtype_type_display as type,
                                       str.mrkr_abbrev as name,
                                       str.mrkr_abbrev as proper_name,
                                       str.mrkr_abbrev as full_name,
                                       gene.mrkr_abbrev_order || ' ' || str.mrkr_abbrev_order as name_sort,
                                       '/' || str.mrkr_zdb_id as url,
                                       to_date(get_date_from_id(mrel_zdb_id,'YYYY-MM-DD'),'%Y-%m-%d') as date
                                from marker_relationship
                                     join marker gene on mrel_mrkr_2_zdb_id = gene.mrkr_zdb_id
                                     join marker str on mrel_mrkr_1_zdb_id = str.mrkr_zdb_id
                                     join marker_types on str.mrkr_type = marker_type
                                where mrel_type = 'knockdown reagent targets gene';">

            <entity name="str_typegroup" datasource="db"
                    query="select mtgrp_display_name as typegroup,
                           mrel_zdb_id
                    from marker_relationship
                         join marker on mrel_mrkr_1_zdb_id = mrkr_zdb_id
                         join marker_type_group_member on mtgrpmem_mrkr_type = mrkr_type
                         join marker_type_group on mtgrpmem_mrkr_type_group = mtgrp_name
                    where mrel_type = 'knockdown reagent targets gene'
                      and mtgrp_searchable = 't'"
                    where="mrel_zdb_id=str_relationship.id"
                    cacheImpl="SortedMapBackedCache"/>

            <entity name="str_alias" datasource="db"
                    query="select
                            dalias_alias as alias,
                            mrel_zdb_id
                            from data_alias
                                 join marker_relationship on mrel_mrkr_1_zdb_id = dalias_data_zdb_id
                                                         and mrel_type = 'knockdown reagent targets gene';"
                    where="mrel_zdb_id=str_relationship.id"
                    cacheImpl="SortedMapBackedCache"/>

            <entity name="str_accession"
                    datasource="db" query="select fdb_db_name || ':' || dblink_acc_num as related_accession,
                                                     mrel_zdb_id
                                             from db_link, marker_relationship, foreign_db_contains, foreign_db
                                             where dblink_fdbcont_zdb_id = fdbcont_zdb_id
                                               and mrel_mrkr_1_zdb_id = dblink_linked_recid
                                               and mrel_type = 'knockdown reagent targets gene'
                                               and fdbcont_fdb_db_id = fdb_db_pk_id;"
                    where="mrel_zdb_id=str_relationship.id"
                    cacheImpl="SortedMapBackedCache"/>

            <entity name="str_target"
                    datasource="db" query="select
                            mrkr_abbrev as target,
                            mrkr_name as target_full_name,
                            mrel_zdb_id
                            from marker_relationship
                                 join marker on mrel_mrkr_2_zdb_id = mrkr_zdb_id
                            where mrel_type = 'knockdown reagent targets gene';"
                    where="mrel_zdb_id=str_relationship.id"
                    cacheImpl="SortedMapBackedCache"/>


            <entity name="str_target_previous_name"
                    datasource="db" query="select
                            dalias_alias as target_previous_name,
                            mrel_zdb_id
                            from data_alias
                                 join marker_relationship on mrel_mrkr_2_zdb_id = dalias_data_zdb_id
                                 join marker on mrel_mrkr_1_zdb_id = mrkr_zdb_id
                            where mrel_type = 'knockdown reagent targets gene';"
                    where="mrel_zdb_id=str_relationship.id"
                    cacheImpl="SortedMapBackedCache"/>

        </entity>

   </document>


</dataConfig>

