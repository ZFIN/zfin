<?xml version="1.0" encoding="UTF-8"?>

<project name="load ontology" default="load-ontology" basedir=".">

    <property name="anatomyOboURL"
              value="http://berkeleybop.org/ontologies/obo-all/zebrafish_anatomy/zebrafish_anatomy.obo"/>
    <property name="qualityOboURL"
              value="http://purl.obolibrary.org/obo/pato.obo"/>
    <property name="geneOboURL" value="http://www.geneontology.org/ontology/obo_format_1_2/gene_ontology.1_2.obo"/>
    <property name="mpathOboURL" value="http://obo.cvs.sourceforge.net/viewvc/obo/obo/ontology/phenotype/mouse_pathology/mouse_pathology.obo"/>
    <property name="sequenceOboURL" value="http://www.berkeleybop.org/ontologies/obo-all/sequence/sequence.obo"/>
    <property name="spatialOboURL"
              value="http://obo.cvs.sourceforge.net/viewvc/obo/obo/ontology/anatomy/caro/spatial.obo"/>

    <property name="root.dir" value="${basedir}/../../../"/>
    <property name="web.dir" value="${root.dir}/home"/>
    <property name="web-inf.dir" value="${web.dir}/WEB-INF"/>
    <property name="classbin.dir" value="${web-inf.dir}/classes"/>
    <property name="lib" value="${root.dir}/lib/Java"/>
    <property name="web.lib" value="${web-inf.dir}/lib"/>
    <property name="log.dir" value="${basedir}/logs"/>

    <property environment="env"/>

    <!-- Classpath definitions -->
    <path id="classpath">
        <pathelement location="${classbin.dir}"/>
        <fileset dir="${web.lib}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${env.SOURCEROOT}/lib/Java">
            <include name="*jdbc*.jar"/>
        </fileset>
    </path>

   <path id="extended.classpath">
        <path refid="classpath"/>
        <!-- This class needs to come first to ensure that unit test methods are executed in the order they appear in the source file -->
        <fileset dir="${lib}">
            <include name="junit-orderOfExecution.jar"/>
        </fileset>
        <fileset dir="${lib}">
            <include name="*.jar"/>
            <include name="*.zip"/>
        </fileset>
        <fileset dir="${gwt.lib}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${jwebunit.lib}">
            <include name="*.jar"/>
        </fileset>
        <!--<fileset dir="${CATALINA_HOME}/common/lib">-->
        <!--<include name="ifxjdbc.jar"/>-->
        <!--</fileset>-->
    </path>

    <target name="load-sm">
        <antcall target="load-spatial-ontology"/>
    </target>

    <target name="load-spatial-ontology" depends="init">
        <load-ontology oboDirectory="${run-directory}" oboFileName="spatial.obo" />
    </target>

    <target name="download-spatial-ontology">
        <property name="localOboFile" value="spatial.obo"/>
        <property name="oboFileURL" value="${spatialOboURL}"/>
        <antcall target="download-ontology"/>
    </target>

    <target name="load-anatomy-ontology" depends="init">
        <property name="localOboFile" value="${run-directory}/zebrafish_anatomy.obo"/>
        <antcall target="load-ontology-with-stages"/>
    </target>

    <target name="load-gene-ontology" depends="init">
        <load-ontology oboDirectory="${run-directory}" oboFileName="gene-ontology.obo" />
    </target>

    <target name="load-mpath-ontology" depends="init">
        <load-ontology oboDirectory="${run-directory}" oboFileName="mouse_pathology.obo" />
    </target>

    <target name="download-gene-ontology">
        <property name="localOboFile" value="gene-ontology.obo"/>
        <property name="oboFileURL" value="${geneOboURL}"/>
        <antcall target="download-ontology"/>
    </target>

    <target name="download-mpath-ontology">
        <property name="localOboFile" value="mouse_pathology.obo"/>
        <property name="oboFileURL" value="${mpathOboURL}"/>
        <antcall target="download-ontology"/>
    </target>

    <target name="download-sequence-ontology">
        <property name="localOboFile" value="sequence-ontology.obo"/>
        <property name="oboFileURL" value="${sequenceOboURL}"/>
        <antcall target="download-ontology"/>
    </target>

    <target name="load-quality-ontology" depends="init">
        <load-ontology oboDirectory="${run-directory}" oboFileName="quality.obo" />
    </target>

    <target name="load-quality" depends="download-quality-ontology,load-quality-ontology"/>

    <target name="load-spatial" depends="download-spatial-ontology,load-spatial-ontology"/>

    <target name="load-gene" depends="download-gene-ontology,load-gene-ontology"/>

    <target name="load-anatomy" depends="load-anatomy-ontology"/>

    <target name="load-mpath" depends="download-mpath-ontology,load-mpath-ontology"/>

    <target name="load-sequence" depends="download-sequence-ontology,load-sequence-ontology"/>

    <target name="load-sequence-ontology" depends="init">
        <property name="localOboFile" value="${run-directory}/sequence-ontology.obo"/>
        <load-ontology oboDirectory="${run-directory}" oboFileName="sequence-ontology.obo" />
    </target>

    <target name="download-quality-ontology">
        <property name="localOboFile" value="quality.obo"/>
        <property name="oboFileURL" value="${qualityOboURL}"/>
        <antcall target="download-ontology"/>
    </target>

    <property name="scriptFiles"
              value="loadTerms.sql,handleSecondaryTerms.sql,handleRelationships.sql,handleSynonyms.sql,fixAnnotationsUponOntologyLoad.sql,loadSubsets.sql,dropTempTables.sql"/>

    <macrodef name="load-ontology" description="Run the ontology loader">
        <attribute name="oboFileName"/>
        <attribute name="oboDirectory"/>

        <sequential>
            <echo>OBO dir : @{oboFileName}</echo>
            <echo>OBO file: @{oboDirectory}</echo>
            <antcall target="clear-output-directory"/>
            <java classname="org.zfin.ontology.datatransfer.service.LoadOntology" fork="yes" maxmemory="1024m"
                  failonerror="true">
                <classpath refid="classpath"/>
                <arg value="-localOboFileName"/>
                <arg value="@{oboDirectory}/@{oboFileName}"/>
                <arg value="-log4jFilename"/>
                <arg value="log4j.xml"/>
                <arg value="-dbScriptFileNames"/>
                <arg value="${scriptFiles}"/>
                <arg value="-webrootDirectory"/>
                <arg value="${web.dir}"/>
                <arg value="-jobName"/>
                <arg value="${JobName}"/>
            </java>
        </sequential>
    </macrodef>

    <target name="clear-output-directory">
        <delete dir="${JobName}"/>
        <mkdir dir="${JobName}"/>
    </target>


    <target name="load-ontology-with-stages" description="Run the ontology loader">
        <antcall target="clear-output-directory"/>
        <property name="dbScriptFiles"
                  value="loadTerms.sql,handleSecondaryTerms.sql,handleRelationshipsAndStages.sql,handleSynonyms.sql,fixAnnotationsUponOntologyLoad.sql,loadSubsets.sql,updateDefinitionReferences.sql,dropTempTables.sql"/>
        <java classname="org.zfin.ontology.datatransfer.service.LoadOntology" fork="yes" maxmemory="512m"
              failonerror="true">
            <classpath refid="classpath"/>
            <arg value="-localOboFileName"/>
            <arg value="${localOboFile}"/>
            <arg value="-log4jFilename"/>
            <arg value="log4j.xml"/>
            <arg value="-dbScriptFileNames"/>
            <arg value="${dbScriptFiles}"/>
            <arg value="-webrootDirectory"/>
            <arg value="${web.dir}"/>
            <arg value="-jobName"/>
            <arg value="${JobName}"/>
        </java>

    </target>

    <target name="term-stage-split-update" description="Split term-stage annotations into multiple annotations.">
        <java classname="org.zfin.ontology.datatransfer.service.OntologyTermFigureStageUpdate" fork="yes"
              maxmemory="256m"
              failonerror="true">
            <classpath refid="extended.classpath"/>
            <arg value="-log4jFilename"/>
            <arg value="log4j.xml"/>
            <arg value="-termStageUpdateFile"/>
            <arg value="term-stage-updates.txt"/>
            <arg value="-webrootDirectory"/>
            <arg value="${web.dir}"/>
        </java>
    </target>

    <target name="update-term-annotations" description="update / delete individual xpatres records with term info.">
        <java classname="org.zfin.ontology.datatransfer.service.ExpressionResultUpdate" fork="yes"
              maxmemory="256m"
              failonerror="true">
            <classpath refid="classpath"/>
            <arg value="-termStageUpdateFile"/>
            <arg value="expression-result-update.txt"/>
            <arg value="-webrootDirectory"/>
            <arg value="${web.dir}"/>
        </java>
    </target>

    <target name="check-obo-7bit" description="Check if a term name or a term definition contain a non-7-bit character">
        <java classname="org.zfin.ontology.datatransfer.service.OntologyValidation" fork="yes" maxmemory="256m"
              failonerror="true">
            <classpath refid="classpath"/>
            <arg value="-localOboFileName"/>
            <arg value="anatomy.obo"/>
            <arg value="-webrootDirectory"/>
            <arg value="${web.dir}"/>
        </java>

    </target>

    <target name="download-anatomy-ontology">
        <property name="localOboFile" value="zebrafish_anatomy.obo"/>
        <property name="oboFileURL" value="${anatomyOboURL}"/>
        <antcall target="download-ontology"/>
    </target>


    <target name="download-ontology" depends="init" description="Run the ontology loader">
        <echo>Downloading OBO file: ${oboFileURL}</echo>

        <java classname="org.zfin.ontology.datatransfer.DownloadOntology" fork="yes"
              failonerror="true">
            <classpath refid="classpath"/>
            <arg value="-localOboFileName"/>
            <arg value="${run-directory}/${localOboFile}"/>
            <arg value="-oboFileURL"/>
            <arg value="${oboFileURL}"/>
        </java>

    </target>

    <target name="init">
        <echo message="Launching Ontology Loader"/>
        <tstamp/>
        <!--
                <property name="run-directory" value="./run-${DSTAMP}"/>
        -->
        <property name="run-directory" value="./obo-files"/>
        <mkdir dir="${run-directory}"/>
    </target>

    <target name="archive-run-directory">
        <echo message="Archive run directory"/>
        <mkdir dir="${run-directory}"/>
    </target>


    <target name="usage">
        <echo>
            TARGETS:
            download-quality-ontology
            download-anatomy-ontology
            download-gene-ontology
            download-spatial-ontology
            download-mpath-ontology
            download-sequence-ontology

            load-quality-ontology
            load-anatomy-ontology
            load-gene-ontology
            load-spatial-ontology
            load-mpath-ontology
            load-sequence-ontology

            load-quality
            load-gene
            load-quality
            load-anatomy
            load-mpath
            load-sequence
        </echo>
    </target>


</project>
