-- loadZfishbookData.sql
-- for FB case 8009 zfishbook (EEkkerer Lab) data load 
-- Input file was generated by sanity_checking_zfishbook.pl
-- input: zfishbook.unl
-- output: a bunch of tables at ZFIN get new data inserted
-- Some of the hard-coded data associated with this loading:
--  ZDB-GENO-960809-7  AB 
--  ZDB-LAB-970908-70  Ekker lab
--  ZDB-LAB-991005-53  ZIRC
--  ZDB-PUB-120111-1

begin work;

create temp table ekkerLabData (
        ekker_indx int not null,
        ekker_alias varchar(255) not null,
        ekker_lineNum varchar(70) not null,
        ekker_alias2 varchar(255) not null,
        ekker_geneId varchar(50),
        ekker_feature varchar(255) not null,
        ekker_featureId varchar(50),
        ekker_constructId varchar(50) not null,
        ekker_accession varchar(50)
) with no log;


load from pre_load_input.txt
 insert into ekkerLabData;
! echo "         into ekkerLabData temp table."

unload to 'ekkerLabData.unl' select * from ekkerLabData;
! echo "         to ekkerLabData.unl"
   
-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  ekker_geneId,
        'ZDB-PUB-120111-1'
 from ekkerLabData
where ekker_geneId is not null
  and ekker_geneId <> "";
 
! echo "         into record_attribution table."

create table pre_feature (
        preftr_indx int not null,
        preftr_feature_name varchar(255),
        preftr_alias varchar(255),
        preftr_alias2 varchar(255) default null,
        preftr_data_source varchar(50),
        preftr_mutagee varchar(20),
        preftr_mutagen varchar(20),        
        preftr_construct varchar(50),
        preftr_feature_abbrev varchar(70),
        preftr_line_number varchar(70),
        preftr_lab_prefix_id int8,
        preftr_known_insertion_site boolean default 't',
        preftr_tg_suffix varchar(5) default null
);

-- if the feature is not in ZFIN and no affected gene
insert into pre_feature (
      preftr_indx,
      preftr_feature_name,
      preftr_alias,
      preftr_alias2,
      preftr_data_source,
      preftr_mutagee,
      preftr_mutagen,
      preftr_construct,
      preftr_feature_abbrev,
      preftr_line_number,
      preftr_lab_prefix_id,
      preftr_known_insertion_site
      )
  select distinct ekker_indx,
                  mrkr_abbrev || ekker_feature,
                  ekker_alias,
                  ekker_alias2,
                  'ZDB-LAB-970908-70',
                  'embryos',
                  'DNA',
                  ekker_constructId,
                  ekker_feature,
                  ekker_lineNum,
                  fp_pk_id,
                  'f'
    from ekkerLabData, marker, feature_prefix
   where ekker_constructId = mrkr_zdb_id
     and fp_prefix = "mn"
     and ekker_featureId is null
     and ekker_geneId is null;
     
! echo "         into pre_feature table."
     

-- if the feature is not in ZFIN and there is affected gene
insert into pre_feature (
      preftr_indx,
      preftr_feature_name,
      preftr_alias,
      preftr_data_source,
      preftr_mutagee,
      preftr_mutagen,
      preftr_construct,
      preftr_feature_abbrev,
      preftr_line_number,
      preftr_lab_prefix_id,
      preftr_tg_suffix
      )
  select distinct ekker_indx,
                  ekker_feature,
                  ekker_alias,
                  'ZDB-LAB-970908-70',
                  'embryos',
                  'DNA',
                  ekker_constructId,
                  ekker_feature,
                  ekker_lineNum,
                  fp_pk_id,
                  'Gt'
    from ekkerLabData, marker, feature_prefix
   where ekker_constructId = mrkr_zdb_id
     and fp_prefix = "mn"
     and ekker_featureId is null
     and ekker_geneId is not null;
! echo "         into pre_feature table."


alter table pre_feature add preftr_feature_zdb_id varchar(50);

update pre_feature set preftr_feature_zdb_id = get_id('ALT');


unload to 'pre_feature.unl' select * from pre_feature order by preftr_indx;
! echo "         to pre_feature.unl"


insert into zdb_active_data select preftr_feature_zdb_id from pre_feature;
! echo "         into zdb_active_data table."


-- load feature table
insert into feature (
    feature_zdb_id,
    feature_name,
    feature_abbrev,
    feature_type,
    feature_lab_prefix_id,
    feature_line_number,
    feature_tg_suffix,
    feature_known_insertion_site
)
select  preftr_feature_zdb_id,
        preftr_feature_name,
        preftr_feature_abbrev,
        'TRANSGENIC_INSERTION',
        preftr_lab_prefix_id,
        preftr_line_number,
        preftr_tg_suffix,
        preftr_known_insertion_site
 from pre_feature;
 
! echo "         into feature table."

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  preftr_feature_zdb_id,
        'ZDB-PUB-120111-1'
 from pre_feature;
 
! echo "         into record_attribution table."


-- load feature_assay table
insert into feature_assay (
    featassay_feature_zdb_id,
    featassay_mutagen,
    featassay_mutagee
)
select  preftr_feature_zdb_id,
        preftr_mutagen,
        preftr_mutagee
 from pre_feature;
 
! echo "         into feature_assay table."

-- load int_data_source table
insert into int_data_source (
    ids_data_zdb_id,
    ids_source_zdb_id
)
select  preftr_feature_zdb_id,
        preftr_data_source
 from pre_feature;
 
! echo "         into int_data_source table."


create table pre_feature_marker_relationship (
        prefmrel_feature_zdb_id varchar(50),
        prefmrel_marker_zdb_id varchar(50),
        prefmrel_type varchar(60)
);

-- relationship between the new features and the constructs
insert into pre_feature_marker_relationship (prefmrel_feature_zdb_id,prefmrel_marker_zdb_id,prefmrel_type)
  select preftr_feature_zdb_id, preftr_construct, 'contains phenotypic sequence feature'
    from pre_feature;
    
! echo "         into pre_feature_marker_relationship table."    

-- relationship between the new features and their affected genes 
insert into pre_feature_marker_relationship (prefmrel_feature_zdb_id,prefmrel_marker_zdb_id,prefmrel_type)
  select preftr_feature_zdb_id, ekker_geneId, 'is allele of'
    from pre_feature, ekkerLabData
   where preftr_indx = ekker_indx
     and ekker_geneId is not null
     and ekker_featureId is null;
    
! echo "         into pre_feature_marker_relationship table."  
 
alter table pre_feature_marker_relationship add prefmrel_zdb_id varchar(50);

update pre_feature_marker_relationship set prefmrel_zdb_id = get_id('FMREL');


insert into zdb_active_data select prefmrel_zdb_id from pre_feature_marker_relationship;

! echo "         into zdb_active_data table."

-- load feature_marker_relationship table
insert into feature_marker_relationship (
    fmrel_zdb_id,
    fmrel_type,
    fmrel_ftr_zdb_id,
    fmrel_mrkr_zdb_id
)
select  prefmrel_zdb_id,
        prefmrel_type,
        prefmrel_feature_zdb_id,
        prefmrel_marker_zdb_id
 from pre_feature_marker_relationship;
 
! echo "         into feature_marker_relationship table."


-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  prefmrel_zdb_id,
        'ZDB-PUB-120111-1'
 from pre_feature_marker_relationship;
 
! echo "         into record_attribution table."


create table pre_data_alias (
    predalias_data_zdb_id varchar(50) not null,
    predalias_alias varchar(255) not null,
    predalias_group_id int8 not null
);

-- if the feature was not in ZFIN before the loading
insert into pre_data_alias (
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
      )
  select distinct preftr_feature_zdb_id,
                  preftr_alias,
                  aliasgrp_significance
    from pre_feature, alias_group
   where preftr_alias is not null
     and aliasgrp_name = "alias";
     
! echo "         into pre_data_alias table."     

insert into pre_data_alias (
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
      )
  select distinct preftr_feature_zdb_id,
                  preftr_alias2,
                  aliasgrp_significance
    from pre_feature, alias_group
   where preftr_alias2 is not null
     and aliasgrp_name = "alias";
     
! echo "         into pre_data_alias table."   


-- if the feature is already in ZFIN before the loading
insert into pre_data_alias (
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
      )
  select distinct ekker_featureId,
                  ekker_alias,
                  aliasgrp_significance
    from ekkerLabData, alias_group
   where ekker_alias is not null
     and ekker_featureId is not null
     and aliasgrp_name = "alias"
     and not exists (select "x" from data_alias
                               where dalias_data_zdb_id = ekker_featureId
                                 and dalias_alias = ekker_alias);
                                 
! echo "         into pre_data_alias table."                                 

alter table pre_data_alias add predalias_dalias_zdb_id varchar(50);

update pre_data_alias set predalias_dalias_zdb_id = get_id('DALIAS');

unload to 'pre_data_alias.unl' select * from pre_data_alias order by predalias_alias;

! echo "         to pre_data_alias.unl"   

insert into zdb_active_data select predalias_dalias_zdb_id from pre_data_alias;

! echo "         into zdb_active_data table."

-- load data_alias table
insert into data_alias (
      dalias_zdb_id,
      dalias_data_zdb_id,
      dalias_alias,
      dalias_group_id
)
select  predalias_dalias_zdb_id,
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
 from pre_data_alias;
 
! echo "         into data_alias table."

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  predalias_dalias_zdb_id,
        'ZDB-PUB-120111-1'
 from pre_data_alias;
 
! echo "         into record_attribution table."

-- find what zfishbook record(s) does not have feature_comments
--select * from feature where feature_comments not like '%zfishbook.org%' 
--                        and exists (select 'x' from ekkerLabData where feature_zdb_id = ekker_featureId);

update feature set feature_comments = '' where feature_comments like '%zfishbook.org%' 
                                           and exists (select 'x' from ekkerLabData where feature_zdb_id = ekker_featureId);


create table pre_geno (
        pregeno_feature_id varchar(50) not null,
        pregeno_display_name varchar(255) not null,
        pregeno_handle varchar(255) not null,
        pregeno_nick_name varchar(255) not null
);

-- load pre_geno table for those features newly added by this script and not having affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select preftr_feature_zdb_id,
       preftr_feature_name || '/+',
       preftr_feature_abbrev || '[1,U,U]' || 'AB',
       preftr_feature_abbrev || '[1,U,U]' || 'AB'
  from pre_feature, ekkerLabData
 where preftr_indx = ekker_indx
   and ekker_geneId is null;
 
! echo "         into pre_geno table."

-- load pre_geno table for those features newly added by this script and having affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select preftr_feature_zdb_id,
       mrkr_abbrev || '<sup>' || preftr_feature_abbrev || '/+' || '</sup>',
       preftr_feature_abbrev || '[1,U,U]' || 'AB',
       preftr_feature_abbrev || '[1,U,U]' || 'AB'
  from pre_feature, ekkerLabData, marker
 where preftr_indx = ekker_indx
   and ekker_geneId = mrkr_zdb_id;
 
! echo "         into pre_geno table."


-- load pre_geno table for those with features already in ZFIN, all of which should have affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select ekker_featureId,
       mrkr_abbrev || '<sup>' || ekker_alias2 || '/+' || '</sup>',
       ekker_feature || '[1,U,U]' || 'AB',
       ekker_feature || '[1,U,U]' || 'AB'
  from ekkerLabData, marker
 where ekker_geneId = mrkr_zdb_id
   and ekker_featureId like "ZDB-ALT-%";
 
! echo "         into pre_geno table."


delete from pre_geno
 where exists (select "x" from genotype
                         where geno_handle = pregeno_handle);
! echo "         from pre_geno table."                             

alter table pre_geno add pregeno_geno_id varchar(50);

update pre_geno set pregeno_geno_id = get_id('GENO');

unload to 'pre_geno.unl' select * from pre_geno order by pregeno_feature_id;
! echo "         to pre_geno.unl"

insert into zdb_active_data select pregeno_geno_id from pre_geno;

! echo "         into zdb_active_data table."

-- load genotype table
insert into genotype (
    geno_zdb_id,
    geno_display_name,
    geno_handle,
    geno_nickname
)
select  pregeno_geno_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
 from pre_geno;
 
! echo "         into genotype table."


-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  pregeno_geno_id,
        'ZDB-PUB-120111-1'
 from pre_geno;
 
! echo "         into record_attribution table."


-- load genotype_background table
insert into genotype_background (
    genoback_geno_zdb_id,
    genoback_background_zdb_id
)
select  pregeno_geno_id,
        'ZDB-GENO-960809-7'
 from pre_geno;
 
! echo "         into genotype_background table."

-- load int_data_supplier table with the new genotypes
--insert into int_data_supplier (
--       idsup_data_zdb_id,
--       idsup_acc_num,
--       idsup_supplier_zdb_id
--) 
--select pregeno_geno_id,
--       pregeno_geno_id,
--       'ZDB-LAB-991005-53' 
--  from pre_geno;
  
--! echo "         into int_data_supplier table."


create table pre_geno_ftr_relationship (
        pregfrel_geno_zdb_id varchar(50),
        pregfrel_feature_zdb_id varchar(50),
        pregfrel_zygocity varchar(50),
        pregfrel_dad_zygocity varchar(50),
        pregfrel_mom_zygocity varchar(50)
);

-- load pre_geno_ftr_relationship table
insert into pre_geno_ftr_relationship (
    pregfrel_geno_zdb_id,
    pregfrel_feature_zdb_id,
    pregfrel_zygocity,
    pregfrel_dad_zygocity,
    pregfrel_mom_zygocity
)
select  pregeno_geno_id,
        pregeno_feature_id,
        'ZDB-ZYG-070117-2',
        'ZDB-ZYG-070117-7',
        'ZDB-ZYG-070117-7'
 from pre_geno;
 
! echo "         into pre_geno_ftr_relationship table."

                            
alter table pre_geno_ftr_relationship add pregfrel_genofeat_id varchar(50);

update pre_geno_ftr_relationship set pregfrel_genofeat_id = get_id('GENOFEAT');

insert into zdb_active_data select pregfrel_genofeat_id from pre_geno_ftr_relationship;

! echo "         into zdb_active_data table."

-- load genotype_feature table
insert into genotype_feature (
    genofeat_zdb_id,
    genofeat_geno_zdb_id,
    genofeat_feature_zdb_id,
    genofeat_zygocity,
    genofeat_dad_zygocity,
    genofeat_mom_zygocity
)
select  pregfrel_genofeat_id,
        pregfrel_geno_zdb_id,
        pregfrel_feature_zdb_id,
        pregfrel_zygocity,
        pregfrel_dad_zygocity,
        pregfrel_mom_zygocity
 from pre_geno_ftr_relationship;
 
! echo "         into genotype_feature table."

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  pregfrel_genofeat_id,
        'ZDB-PUB-120111-1'
 from pre_geno_ftr_relationship;
 
! echo "         into record_attribution table."                            


-- load int_data_supplier table with the new features
--insert into int_data_supplier (
--       idsup_data_zdb_id,
--       idsup_acc_num,
--       idsup_supplier_zdb_id
--) 
--select pregfrel_feature_zdb_id,
--       pregfrel_feature_zdb_id,
--       'ZDB-LAB-991005-53' 
--  from pre_geno_ftr_relationship;
  
--! echo "         into int_data_supplier table."

create table pre_db_link (
        predblink_data_zdb_id varchar(50) not null,
        predblink_acc_num varchar(50) not null,
        predblink_acc_num_display varchar(50) not null,
        predblink_fdbcont_zdb_id varchar(50) not null
);

insert into pre_db_link (
        predblink_data_zdb_id,
        predblink_acc_num,
        predblink_acc_num_display,
        predblink_fdbcont_zdb_id)
  select distinct preftr_feature_zdb_id, preftr_alias, preftr_alias, fdbcont_zdb_id 
    from pre_feature, foreign_db, foreign_db_contains 
   where fdbcont_fdb_db_id = fdb_db_pk_id 
     and fdb_db_name = 'zfishbook';
     
! echo "         into pre_db_link table."  
     

insert into pre_db_link (
        predblink_data_zdb_id,
        predblink_acc_num,
        predblink_acc_num_display,
        predblink_fdbcont_zdb_id)
  select distinct ekker_featureId, ekker_alias, ekker_alias, fdbcont_zdb_id 
    from ekkerLabData, foreign_db, foreign_db_contains 
   where ekker_featureId is not null
     and fdbcont_fdb_db_id = fdb_db_pk_id 
     and fdb_db_name = 'zfishbook';
     
! echo "         into pre_db_link table."  


alter table pre_db_link add predblink_dblink_zdb_id varchar(50);

update pre_db_link set predblink_dblink_zdb_id = get_id('DBLINK');

unload to 'pre_db_link.unl' select * from pre_db_link order by predblink_acc_num;

! echo "         to pre_db_link.unl"  
 
insert into zdb_active_data select predblink_dblink_zdb_id from pre_db_link;

! echo "         into zdb_active_data table."  

insert into db_link (dblink_linked_recid,dblink_acc_num, dblink_zdb_id ,dblink_acc_num_display,dblink_fdbcont_zdb_id) 
  select predblink_data_zdb_id, predblink_acc_num, predblink_dblink_zdb_id, predblink_acc_num_display, predblink_fdbcont_zdb_id 
    from pre_db_link; 

! echo "         into db_link table."      


insert into record_attribution (recattrib_data_zdb_id, recattrib_source_zdb_id)  
  select predblink_dblink_zdb_id,'ZDB-PUB-120111-1' from pre_db_link;

! echo "         into record_attribution table."  

drop table pre_feature;
drop table pre_feature_marker_relationship;
drop table pre_data_alias;
drop table pre_geno;
drop table pre_geno_ftr_relationship;
drop table pre_db_link;

                                 
--rollback work;

commit work;

execute function regen_names();

