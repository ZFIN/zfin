-- loadZfishbookData.sql
-- for FB case 8009 zfishbook (EEkkerer Lab) data load
-- Input file was generated by sanity_checking_zfishbook.pl
-- input: zfishbook.unl
-- output: a bunch of tables at ZFIN get new data inserted
-- Some of the hard-coded data associated with this loading:
--  ZDB-GENO-960809-7  AB
--  ZDB-LAB-991005-53  ZIRC
--  ZDB-PUB-120111-1

begin work;

create temp table ekkerLabData (
        ekker_indx int not null,
        ekker_alias varchar(255) not null,
        ekker_lineNum varchar(70) not null,
        ekker_alias2 varchar(255) not null,
        ekker_geneId text,
        ekker_feature varchar(255) not null,
        ekker_featureId text,
        ekker_constructId text not null,
        ekker_labId text not null,
        ekker_prefix varchar(3)
) ;


\copy ekkerLabData from 'pre_load_input.txt' delimiter '|';

\copy (select * from ekkerLabData) to 'ekkerLabData.unl' delimiter '|';


create table pre_feature (
        preftr_indx int not null,
        preftr_feature_name varchar(255),
        preftr_alias varchar(255),
        preftr_alias2 varchar(255) default null,
        preftr_data_source text,
        preftr_mutagee varchar(20),
        preftr_mutagen varchar(20),
        preftr_construct text,
        preftr_feature_abbrev varchar(70),
        preftr_line_number varchar(70),
        preftr_lab_prefix_id int8,
        preftr_known_insertion_site boolean default true,
        preftr_tg_suffix varchar(5) default null
);

-- if the feature is not in ZFIN and no affected gene
insert into pre_feature (
      preftr_indx,
      preftr_feature_name,
      preftr_alias,
      preftr_alias2,
      preftr_data_source,
      preftr_mutagee,
      preftr_mutagen,
      preftr_construct,
      preftr_feature_abbrev,
      preftr_line_number,
      preftr_lab_prefix_id,
      preftr_known_insertion_site
      )
  select distinct ekker_indx,
                  ekker_alias2,
                  ekker_alias,
                  ekker_alias2,
                  ekker_labId,
                  'embryos',
                  'DNA',
                  ekker_constructId,
                  ekker_alias2,
                  ekker_lineNum,
                  fp_pk_id,
                  false
    from ekkerLabData, marker, feature_prefix
   where ekker_constructId = mrkr_zdb_id
     and fp_prefix = ekker_prefix
     and ekker_featureId = ''
     and ekker_geneId = '';


-- if the feature is not in ZFIN and there is affected gene
insert into pre_feature (
      preftr_indx,
      preftr_feature_name,
      preftr_alias,
      preftr_data_source,
      preftr_mutagee,
      preftr_mutagen,
      preftr_construct,
      preftr_feature_abbrev,
      preftr_line_number,
      preftr_lab_prefix_id,
      preftr_tg_suffix
      )
  select distinct ekker_indx,
                  ekker_alias2,
                  ekker_alias,
                  ekker_labId,
                  'embryos',
                  'DNA',
                  ekker_constructId,
                  ekker_alias2,
                  ekker_lineNum,
                  fp_pk_id,
                  'Gt'
    from ekkerLabData, marker, feature_prefix
   where ekker_constructId = mrkr_zdb_id
     and fp_prefix = ekker_prefix
     and ekker_featureId = ''
     and ekker_geneId = '';


delete from pre_feature where preftr_tg_suffix is null;

alter table pre_feature add preftr_feature_zdb_id varchar(50);

update pre_feature set preftr_feature_zdb_id = get_id('ALT');

\copy (select * from pre_feature order by preftr_indx) to 'pre_feature.unl' delimiter '|'; 


insert into zdb_active_data select preftr_feature_zdb_id from pre_feature;


-- load feature table
insert into feature (
    feature_zdb_id,
    feature_name,
    feature_abbrev,
    feature_type,
    feature_lab_prefix_id,
    feature_line_number,
    feature_tg_suffix,
    feature_known_insertion_site
)
select  preftr_feature_zdb_id,
        preftr_feature_name,
        preftr_feature_abbrev,
        'TRANSGENIC_INSERTION',
        preftr_lab_prefix_id,
        preftr_line_number,
        preftr_tg_suffix,
        preftr_known_insertion_site
 from pre_feature;


-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  preftr_feature_zdb_id,
        'ZDB-PUB-120111-1'
 from pre_feature;


-- load feature_assay table
insert into feature_assay (
    featassay_feature_zdb_id,
    featassay_mutagen,
    featassay_mutagee
)
select  preftr_feature_zdb_id,
        preftr_mutagen,
        preftr_mutagee
 from pre_feature;


-- load int_data_source table
insert into int_data_source (
    ids_data_zdb_id,
    ids_source_zdb_id
)
select  preftr_feature_zdb_id,
        preftr_data_source
 from pre_feature;



create table pre_feature_marker_relationship (
        prefmrel_feature_zdb_id text,
        prefmrel_marker_zdb_id text,
        prefmrel_type varchar(60)
);

-- relationship between the new features and the constructs
insert into pre_feature_marker_relationship (prefmrel_feature_zdb_id,prefmrel_marker_zdb_id,prefmrel_type)
  select preftr_feature_zdb_id, preftr_construct, 'contains phenotypic sequence feature'
    from pre_feature;


-- relationship between the new features and their affected genes
insert into pre_feature_marker_relationship (prefmrel_feature_zdb_id,prefmrel_marker_zdb_id,prefmrel_type)
  select preftr_feature_zdb_id, ekker_geneId, 'is allele of'
    from pre_feature, ekkerLabData
   where preftr_indx = ekker_indx
     and ekker_geneId = ''
     and ekker_featureId = '';

delete from pre_feature_marker_relationship where prefmrel_marker_zdb_id is null;

delete from pre_feature_marker_relationship where prefmrel_marker_zdb_id = '';

alter table pre_feature_marker_relationship add prefmrel_zdb_id text;

update pre_feature_marker_relationship set prefmrel_zdb_id = get_id('FMREL');


insert into zdb_active_data select prefmrel_zdb_id from pre_feature_marker_relationship;

-- load feature_marker_relationship table
insert into feature_marker_relationship (
    fmrel_zdb_id,
    fmrel_type,
    fmrel_ftr_zdb_id,
    fmrel_mrkr_zdb_id
)
select  prefmrel_zdb_id,
        prefmrel_type,
        prefmrel_feature_zdb_id,
        prefmrel_marker_zdb_id
 from pre_feature_marker_relationship;

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  prefmrel_zdb_id,
        'ZDB-PUB-120111-1'
 from pre_feature_marker_relationship;


create table pre_data_alias (
    predalias_data_zdb_id text not null,
    predalias_alias varchar(255) not null,
    predalias_group_id int8 not null
);

-- if the feature was not in ZFIN before the loading
insert into pre_data_alias (
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
      )
  select distinct preftr_feature_zdb_id,
                  preftr_alias,
                  aliasgrp_significance
    from pre_feature, alias_group
   where (preftr_alias is not null or preftr_alias != '')
     and aliasgrp_name = 'alias';
     

-- if the feature is already in ZFIN before the loading
insert into pre_data_alias (
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
      )
  select distinct ekker_featureId,
                  ekker_alias,
                  aliasgrp_significance
    from ekkerLabData, alias_group
   where (ekker_alias is not null or ekker_alias != '')
     and (ekker_featureId is not null or ekker_featureId != '')
     and aliasgrp_name = 'alias'
     and not exists (select 'x' from data_alias
                               where dalias_data_zdb_id = ekker_featureId
                                 and dalias_alias = ekker_alias);

delete from pre_data_alias where predalias_data_zdb_id is null or predalias_data_zdb_id = '';

alter table pre_data_alias add predalias_dalias_zdb_id text;

update pre_data_alias set predalias_dalias_zdb_id = get_id('DALIAS');

\copy (select * from pre_data_alias order by predalias_alias) to 'pre_data_alias.unl' delimiter '|';

insert into zdb_active_data select predalias_dalias_zdb_id from pre_data_alias;

-- load data_alias table
insert into data_alias (
      dalias_zdb_id,
      dalias_data_zdb_id,
      dalias_alias,
      dalias_group_id
)
select  predalias_dalias_zdb_id,
      predalias_data_zdb_id,
      predalias_alias,
      predalias_group_id
 from pre_data_alias;

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  predalias_dalias_zdb_id,
        'ZDB-PUB-120111-1'
 from pre_data_alias;
     

create table pre_geno (
        pregeno_feature_id text not null,
        pregeno_display_name varchar(255) not null,
        pregeno_handle varchar(255) not null,
        pregeno_nick_name varchar(255) not null
);

-- load pre_geno table for those features newly added by this script and not having affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select preftr_feature_zdb_id,
       preftr_feature_name || '/+',
       preftr_feature_abbrev || '[1,U,U]' || 'AB',
       preftr_feature_abbrev || '[1,U,U]' || 'AB'
  from pre_feature, ekkerLabData
 where preftr_indx = ekker_indx
   and (ekker_geneId is null or ekker_geneId = '');
   
-- load pre_geno table for those features newly added by this script and having affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select preftr_feature_zdb_id,
       mrkr_abbrev || '<sup>' || preftr_feature_abbrev || '/+' || '</sup>',
       preftr_feature_abbrev || '[1,U,U]' || 'AB',
       preftr_feature_abbrev || '[1,U,U]' || 'AB'
  from pre_feature, ekkerLabData, marker
 where preftr_indx = ekker_indx
   and ekker_geneId = mrkr_zdb_id;


-- load pre_geno table for those with features already in ZFIN and having affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select ekker_featureId,
       mrkr_abbrev || '<sup>' || ekker_alias2 || '/+' || '</sup>',
       ekker_alias2 || '[1,U,U]' || 'AB',
       ekker_alias2 || '[1,U,U]' || 'AB'
  from ekkerLabData, marker
 where ekker_geneId = mrkr_zdb_id
   and ekker_featureId like 'ZDB-ALT-%';


-- load pre_geno table for those with features already in ZFIN and having no affected gene
insert into pre_geno (
        pregeno_feature_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
)
select ekker_featureId,
       feature_name || '/+',
       feature_abbrev || '[1,U,U]' || 'AB',
       feature_abbrev || '[1,U,U]' || 'AB'
  from ekkerLabData, feature
 where (ekker_geneId is null or ekker_geneId = '')
   and ekker_featureId = feature_zdb_id;
   
delete from pre_geno
 where exists (select 'x' from genotype
                         where geno_handle = pregeno_handle);

alter table pre_geno add pregeno_geno_id varchar(50);

update pre_geno set pregeno_geno_id = get_id('GENO');

alter table pre_geno add pregeno_fish_id varchar(50);

update pre_geno set pregeno_fish_id = get_id('FISH');

\copy (select * from pre_geno order by pregeno_feature_id) to 'pre_geno.unl' delimiter '|';

insert into zdb_active_data select pregeno_geno_id from pre_geno;

-- load genotype table
insert into genotype (
    geno_zdb_id,
    geno_display_name,
    geno_handle,
    geno_nickname
)
select  pregeno_geno_id,
        pregeno_display_name,
        pregeno_handle,
        pregeno_nick_name
 from pre_geno;

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  pregeno_geno_id,
        'ZDB-PUB-120111-1'
 from pre_geno;

insert into zdb_active_data select pregeno_fish_id from pre_geno;


-- load fish table
insert into fish (
    fish_zdb_id,
    fish_genotype_zdb_id,    
    fish_name,
    fish_handle
)
select  pregeno_fish_id,
        pregeno_geno_id,
        pregeno_display_name,
        pregeno_handle
 from pre_geno;


-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  pregeno_fish_id,
        'ZDB-PUB-120111-1'
 from pre_geno;


-- load genotype_background table
insert into genotype_background (
    genoback_geno_zdb_id,
    genoback_background_zdb_id
)
select  pregeno_geno_id,
        'ZDB-GENO-960809-7'
 from pre_geno;


create table pre_geno_ftr_relationship (
        pregfrel_geno_zdb_id text,
        pregfrel_feature_zdb_id text,
        pregfrel_zygocity text,
        pregfrel_dad_zygocity text,
        pregfrel_mom_zygocity text
);

-- load pre_geno_ftr_relationship table
insert into pre_geno_ftr_relationship (
    pregfrel_geno_zdb_id,
    pregfrel_feature_zdb_id,
    pregfrel_zygocity,
    pregfrel_dad_zygocity,
    pregfrel_mom_zygocity
)
select  pregeno_geno_id,
        pregeno_feature_id,
        'ZDB-ZYG-070117-2',
        'ZDB-ZYG-070117-7',
        'ZDB-ZYG-070117-7'
 from pre_geno;


alter table pre_geno_ftr_relationship add pregfrel_genofeat_id text;

update pre_geno_ftr_relationship set pregfrel_genofeat_id = get_id('GENOFEAT');

insert into zdb_active_data select pregfrel_genofeat_id from pre_geno_ftr_relationship;

-- load genotype_feature table
insert into genotype_feature (
    genofeat_zdb_id,
    genofeat_geno_zdb_id,
    genofeat_feature_zdb_id,
    genofeat_zygocity,
    genofeat_dad_zygocity,
    genofeat_mom_zygocity
)
select  pregfrel_genofeat_id,
        pregfrel_geno_zdb_id,
        pregfrel_feature_zdb_id,
        pregfrel_zygocity,
        pregfrel_dad_zygocity,
        pregfrel_mom_zygocity
 from pre_geno_ftr_relationship;

-- load record_attribution table
insert into record_attribution (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
)
select  pregfrel_genofeat_id,
        'ZDB-PUB-120111-1'
 from pre_geno_ftr_relationship;


create table pre_db_link (
        predblink_data_zdb_id text not null,
        predblink_acc_num varchar(50) not null,
        predblink_acc_num_display varchar(50) not null,
        predblink_fdbcont_zdb_id text not null
);

insert into pre_db_link (
        predblink_data_zdb_id,
        predblink_acc_num,
        predblink_acc_num_display,
        predblink_fdbcont_zdb_id)
  select distinct preftr_feature_zdb_id, preftr_alias, preftr_alias, fdbcont_zdb_id
    from pre_feature, foreign_db, foreign_db_contains
   where fdbcont_fdb_db_id = fdb_db_pk_id
     and fdb_db_name = 'zfishbook'
     and not exists (select * from db_link
                             where dblink_acc_num = preftr_alias
                               and dblink_fdbcont_zdb_id = 'ZDB-FDBCONT-120213-1');

insert into pre_db_link (
        predblink_data_zdb_id,
        predblink_acc_num,
        predblink_acc_num_display,
        predblink_fdbcont_zdb_id)
  select distinct ekker_featureId, ekker_alias, ekker_alias, fdbcont_zdb_id
    from ekkerLabData, foreign_db, foreign_db_contains
   where ekker_featureId is not null
     and fdbcont_fdb_db_id = fdb_db_pk_id
     and fdb_db_name = 'zfishbook'
     and not exists (select * from db_link
                             where dblink_acc_num = ekker_alias
                               and dblink_fdbcont_zdb_id = 'ZDB-FDBCONT-120213-1');
                               
                               
delete from pre_db_link where predblink_data_zdb_id is null or predblink_data_zdb_id = '';                            

alter table pre_db_link add predblink_dblink_zdb_id text;

update pre_db_link set predblink_dblink_zdb_id = get_id('DBLINK');

\copy (select * from pre_db_link order by predblink_acc_num) to 'pre_db_link.unl' delimiter '|' ;

insert into zdb_active_data select predblink_dblink_zdb_id from pre_db_link;


insert into db_link (dblink_linked_recid,dblink_acc_num, dblink_zdb_id ,dblink_acc_num_display,dblink_fdbcont_zdb_id)
  select predblink_data_zdb_id, predblink_acc_num, predblink_dblink_zdb_id, predblink_acc_num_display, predblink_fdbcont_zdb_id
    from pre_db_link;


insert into record_attribution (recattrib_data_zdb_id, recattrib_source_zdb_id)
  select predblink_dblink_zdb_id,'ZDB-PUB-120111-1' from pre_db_link;


drop table pre_feature;
drop table pre_feature_marker_relationship;
drop table pre_data_alias;
drop table pre_geno;
drop table pre_geno_ftr_relationship;
drop table pre_db_link;

-- execute the geno_complexity_trigger
update genotype set geno_handle = geno_handle;

rollback work;

--commit work;
