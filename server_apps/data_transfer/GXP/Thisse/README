
==========================
=== Thisse
===========================

--------------------
-- File collection
---------------------

   * Get new data set from /research/zarchive3/stopgap/bthisse/ 

   * Use FileMaker Pro to open the files with user "Thisse" and password "thisse". From 'File' pulldown menu, choose Export, give names as defined below. Note, before exporting DATA_FRX file, go to "Records", click "Show All Records" to make sure all is included. 

	DATA_FRX->probes(.csv) 
	rel_authors->authors(.csv) 
	rel_expression->expression(.csv) 
	rel_images->images(.csv) 

    Be sure to use .csv extension. 
    Be sure to export all columns from _keyValue to "date last modified". Especially for probes.csv, you might need to explicitly include "probe rating" column right before "date last modified" column. 
    Also use Windows(ANSI) as character set.
            
   * At UNIX shell, create a new directory, recommended name FR#_mmdd, # is the package number

     Copy executables from data_transfer/GXP and data_transfer/GXP/Thisse into it.
     Transfer probes.csv, images.csv, expression.csv, authors.csv files into that directory. 
     Under that, create a directory named "images", and transfer all the images into it. 

-------------------
-- Spellcheck 
--------------------

   * ISPELL check for each .csv files, expression.csv normally needs some correction. 

	    >ispell -p ispell_common expression.csv

     You will be using and updating a common ispell dictionary. To enable update, 
		chmod u+w ispell_common
     and commit it back into cvs if you made any updates. 

   * In case of Thisse annotated (CB) loads, (otherwise, skip)
       - Run
		>/private/bin/rebol -sqw get_annotation_txt.r 

    	 which generates "annotation.txt" file, and checks for bad 
  	 apprearance of ":", and "null" in any annotation files. 

       - Correct the .txt file(s) that has violation.
       - ISPELL check the annotation.txt file and make corrections 
            in the .txt file. 

------------------------- 
-- Image processing
--------------------------

    $executables$:  thumbnail.sh, processImage.sh      
    $command$    :

	  > processImage.sh labname [release_type]

	  labname:                  Thisse / Talbot
          release_type: 	    cb    with annotation
          (in case of Thisse)       fr    without annotation
    
    $resulted files$:  images.dim	

    $description$ :
	It pulls images out of directory hierarchy to one level, and does image reality check with images.csv file. It prompts for user input after the reality check, giving you an opportunity to quit on image file missing or image description missing.
	It also calls utility programs to generate image dimension to images.dim file and calls thumbnail.sh to generate thumbnail images, and annotation images in case of Thisse cb release. It is rare to see error at this step, and it is not hard to makeup e.g. rerun thumbnail script for a specific image. 


--------------------------------------------------
-- Preload processing: Parsing, Naming, Blasting
--------------------------------------------------

    $NOTE$ : 
	- Update your test database and source the environment. The scripts would inherit environment from the running shell. 
        - Ask Peiran to update the ZFIN blast database, or run 
	    /research/zblastfiles/users/peirans/Scripts/ZFIN/processZFIN.pl 0
        - EU clones with RefSeq accessions should not need blast efforts since we keep updated with RefSeq. If it ever needs blast efforts, the thissData2Unl.sh needs to be modified to use refseq_zf datafiles (instead of gbk_zf_dna,rna,mrna) to retrieve fasta sequences.  

    $executables$:  parseThisse.pl  checkDups.sql nameClone.pl blast2tab.pl 
		    filterBlast.pl thisseData2Unl.sh

    $command$    :

	   > thisseData2Unl.sh <your_db_name> [release_type]

               release_type:    fr/cb/eu/eu_nm/sc/nr, default is "fr"

    $result files$:   
			probes.unl
			expression.unl 
			images.unl 
			authors.unl 
			(acc_imClone.unl)
			(is_gene.unl)
			(blast2zfin.scnd)
                        (blast2zfin.third) - blast hits only EST, no Gene.
	
    $description$ :
	This master script calls parseThisse.pl to process .csv files into properly formated .unl files. It calls nameClone.pl to match probes to ZFIN objects(gene/est/clone). Unknown probes are written to acc4blast.txt, and used to retrieve fasta sequence from gbk_zf_mrna,rna,dna, and launch blast for sequence analysis. blast2tab.pl and filterBlast.pl are used to categorize blast results to auto-assignments(is_gene.unl), or curation-needed (blast2zfin.scnd, blast2zfin.third).
	Thisse ZGC should not need any blast efforts, since all the probes should match a pair of Gene and MGC clone in zfin. Thus no is_gene.unl, no acc_imClone.unl.
	** Watch out **: make sure the last blast exit code is 0. If not, diagnose.

----------------
-- Loading
----------------

    $NOTE$ : This is the only step to run for ALMOST or PRODUCTION load. 
             To load data into ALMOST or PRODUCTION, you need RESOURCE level permission
        to create tables and drop tables, yet you better not be informix because
        informix do not have the permission to load images into imageLoadUp directory.
        Peiran, Sierra, Judy, Tom as themselves has RESOURCE or DBA level permissions. 
        So ask one of us to load production when you are ready. 

	     For GIS load, when you get the is_gene.txt file from curator, 
	make sure to go over the file checking the format and then append
        it to is_gene.unl for loading. 
 
    $executables$: pre_gxp_load.sql pre_gxp_load_cleanup.sql 
		   gxp_load_func.sql gxp_load_cleanup.sql 
		   gxp_load_quantity_check.sql load_gxp.sh get_fr_gene_list.sql
		   getStat4Load.sql

    $command$ :

	  > load_gxp.sh <db_name> <lab_name> [release_type]

          lab_name   :     Thisse /Talbot
          release_type:    fr/cb/eu/eu_nm/sc/nr

    $input files$   :
			probes.unl
			expression.unl 
			images.unl 
			authors.unl 
			images.dim
			(acc_imClone.unl)
			(is_gene.unl)
		
    $result files$  :  (FR only)

		        fr_gene.txt     FR# to ZFIN gene, cDNA translation table
		        statistics.txt  

    $description$ :
	This master script first calls pre_gxp_load.sql to load the files into a set of temporarily created (but not temp) tables and conduct quality check with zfin db. Some errors are written to separate .err file. The script would exit on any error with table cleanup. (Description for each error file is provided below, read first one at least!) 
	** Watch out **: The pre_gxp_load.sql generates much output, make sure to scroll all the way to the beginning and be sure the execution is error free. Then do "ls -l *.err" to check for other data issues. 
	Upon success, it executes the load function (defined by gxp_load_func.sql) to really affect content in zfin database. If the load fails with exit value "1", check /tmp/gxp_load_exception for the reason. If the load successes with "0", the gxp_load_quantity_check.sql would provide table content comparison report. Please go over the report, especially look for MARKER, EXPRESSION_EXPERIMENT, FISH_IMAGE tables.
	gxp_load_cleanup.sql would drop the non-temp tables. If you kept the talbes around for investigation, REMEMBER to drop them when you finish. 
 	After production run for thisse fr, send fr_gene.txt, and statistics.txt to Ceri.


----------------
-- Post load
----------------

    $NOTE$ : Thisse FR ZGC only 

    $executables$: redundance_check.sh
	
    $command$ : at Embryonix

		> redundance_check.sh <dbname>

    $result files$  : 	
			is_gene.unl
			blast2zfin.scnd
			(blast2zfin.third)
	 
    $description$ :
	Start from FR5, we run BLAST for redundant check after Thisse FR ZGC load. This effort is expected to be replaced by ZFIN redundance pipeline. 
	Please send is_gene.unl and blast2zfin.scnd(blast2zfin.third) to Ceri. 


---------------------
-- Appendix
---------------------

 Do a "ls -l *.err";
    1) exist_same_xpat_experiment_from_directsub.err: 
	When there exists an expression experiment record using the same probe and is also from direct submission, it is highly possible to be from the same submission. Upon this error, check if the existing one has the same submission source, if yes, send to curator to contact the source for correction. Otherwise, ignore this error by commenting out the exit code from load_gxp.sh after all the other errors are fixed. 
	We have seen this error a couple times, it either requires a deletion of misplaced expression data or a switch of the expression data from one clone to another. Peiran has a small SQL file to deal with this, and will create a SPL routine into CVS.
 
    2) unknown_probelib.err  : there might be an alias library name in zfin    

    3) prb_without_xpat.err  : ask curator if we want to only load clone info or delete the entry.

    4) dup_xpat.err : xpat data with same clone name, same start and end stage, delete one. 

    5) xpat_stg_unknown.err: stage not in zfin stage table. (not for thisse but talbot)

    6) keywords.undef.err: keywords not in anatomical dictionary.

    7) keywords_stgerr.err: fail anatitem_overlaps_stg_window check

    8) kwd_xpat_unconsistent.err: keyword's stage not in xpat file

    9) fimg_preparation_unknown.err

    10) fimg_view_unknow.err

    11) img_xpat_unconsist.err: image stage not in xpat file

    12) suthor_dup.err: duplicate entry in author file

    13) non_zfin_author.err: the author doesn't have an existing ZFIN person record

    *) xpatstg_withno_kwd_img.del: There are default stages defined in Thisse template. Occasionally some are left in with no data added. The script identify them by exp_found as "t", comments as "No comments", no keywords and no images. Those are not loaded.  

