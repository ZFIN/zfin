-- This script adds Gene records to MGCs that are not related to a gene
-- in the database. 
-- The ZGC load detects these cases and unloads the necessary information
-- to a file. The same nomenclature conventions applied to the zgc load
-- apply to this script. Check 

begin work;

	-------------------
	--| Temp Tables |--
	-------------------

CREATE TEMP TABLE tmp_Zgc_No_Gene
  (
    nogene_zfin_mrkr_abbrev	varchar(40),
    nogene_zgc_abbrev		varchar(40),
    nogene_acc_num              varchar(40)
  )
with no log;
  
CREATE index nogene_zfin_mrkr_abbrev_index
  ON tmp_Zgc_No_Gene(nogene_zfin_mrkr_abbrev)
  USING btree in idxdbs3;

CREATE index nogene_zgc_abbrev_index
  ON tmp_Zgc_No_Gene(nogene_zgc_abbrev)
  USING btree in idxdbs3;

  
CREATE TEMP TABLE tmp_Zgc_MREL
  (
    zMrel_zdb_id 	varchar(50),
    zMrel_gene_zdb_id	varchar(50),
    zMrel_est_zdb_id	varchar(50)
  )
with no log;



CREATE TEMP TABLE tmp_zUpdate
  (
    zUp_acc_num		varchar(50),
    zUp_zgc_zdb_id	varchar(50),
    zUp_zfin_zdb_id	varchar(50)
  )
with no log;

CREATE index zUp_zgc_zdb_id_index
  ON tmp_zUpdate(zUp_zgc_zdb_id)
  USING btree in idxdbs3;

CREATE index zUp_zfin_zdb_id_index
  ON tmp_zUpdate(zUp_zfin_zdb_id)
  USING btree in idxdbs3;


CREATE TEMP TABLE tmp_Zgc_Upgrade
  (
    zUpgrade_zdb_id	varchar(50),
    zUpgrade_old_name	varchar(255),
    zUpgrade_new_name	varchar(255),
    zUpgrade_length	integer
  )
with no log;

CREATE index zUpgrade_zdb_id_index
  ON tmp_Zgc_Upgrade(zUpgrade_zdb_id)
  USING btree in idxdbs3;


CREATE TEMP TABLE tmp_Zgc_GENE
  (
    zGENE_zdb_id 	varchar(50),
    zGENE_name		varchar(255),
    zGENE_abbrev	varchar(40),
    zGENE_description	lvarchar,
    zGENE_owner		varchar(50)
  )
with no log;

CREATE index zGENE_abbrev_index
  ON tmp_Zgc_GENE(zGENE_abbrev)
  USING btree in idxdbs3;
  

LOAD from no_gene_cdna.unl INSERT into tmp_Zgc_No_Gene;

UPDATE STATISTICS HIGH FOR table tmp_Zgc_No_Gene;


INSERT into tmp_Zgc_Gene
  (
    zGENE_zdb_id,
    zGENE_name,
    zGENE_abbrev,
    zGENE_description,
    zGENE_owner
  )
SELECT
    get_id('GENE'),
    'zgc' || nogene_zgc_abbrev[4,20],
    'zgc' || nogene_zgc_abbrev[4,20],
    "This gene is characterized by full length cDNAs isolated as part of the Zebrafish Gene Collection (ZGC). When more is known about the gene, the current nomenclature will be replaced with more traditional zebrafish gene nomenclature. The prefix `zgc:' indicates that this gene is represented by cDNAs generated by the ZGC project.",
    'ZDB-PERS-010716-1'
FROM
    tmp_Zgc_No_Gene
WHERE
    not exists
    (
      select *
      from marker
      where nogene_zfin_mrkr_abbrev = mrkr_abbrev
    )
    and not exists
    (
      select *
      from marker
      where 'zgc' || nogene_zgc_abbrev[4,20] = mrkr_abbrev
    );

-- ***  UPGRADE ':' Gene Names  ***

INSERT into tmp_Zgc_Upgrade
  (
    zUpgrade_zdb_id,
    zUpgrade_old_name,
    zUpgrade_new_name,
    zUpgrade_length
  )
SELECT 
    mrkr_zdb_id, 
    nogene_zfin_mrkr_abbrev, 
    'zgc'||nogene_zgc_abbrev[4,20],
    accbk_length
FROM tmp_Zgc_No_Gene, marker, accession_bank
WHERE nogene_zfin_mrkr_abbrev[1,3] not in ('si:','zgc') 
  and nogene_zfin_mrkr_abbrev like "%:%"
  and nogene_zfin_mrkr_abbrev = mrkr_abbrev
  and nogene_acc_num = accbk_acc_num;




!echo '--        Choose the longest zgc and remove the shorter zgc '
SELECT 
    mrkr_zdb_id AS zLong_zdb_id,
    max(accbk_length) AS zLong_length
FROM tmp_Zgc_No_Gene, marker, accession_bank
WHERE nogene_zfin_mrkr_abbrev[1,3] not in ('si:','zgc') 
  and nogene_zfin_mrkr_abbrev like "%:%"
  and nogene_zfin_mrkr_abbrev = mrkr_abbrev
  and nogene_acc_num = accbk_acc_num
GROUP by 1
INTO temp tmp_zgc_Upgrade_longest;  

DELETE from tmp_Zgc_Upgrade
WHERE zUpgrade_length NOT IN 
  (
    SELECT zLong_length
    FROM tmp_zgc_Upgrade_longest
    WHERE zLong_zdb_id = zUpgrade_zdb_id
  );

--  IF the zgc are the same length, flip a coin
SELECT zUpgrade_zdb_id AS zSameLen_zdb_id, zUpgrade_old_name AS zSameLen_old_name
FROM tmp_Zgc_Upgrade, tmp_zgc_upgrade_longest
WHERE zUpgrade_zdb_id = zLong_zdb_id
GROUP by 1,2
HAVING count(*) > 1
INTO temp tmp_zgc_Upgrade_same_length;

SELECT 
    nogene_zfin_mrkr_abbrev AS zFlip_mrkr_abbrev,
    max(nogene_zgc_abbrev) AS zFlip_name
FROM tmp_Zgc_No_Gene, tmp_Zgc_Upgrade_same_length
WHERE nogene_zfin_mrkr_abbrev = zSameLen_old_name 
GROUP by 1
INTO temp tmp_zgc_Upgrade_Coin_Flip; 

DELETE from tmp_Zgc_Upgrade
WHERE zUpgrade_new_name IN 
  (
    SELECT 'zgc'||zFlip_name[4,20] 
    FROM tmp_zgc_Upgrade_Coin_flip
  );


-- ***  CREATE Marker_Relationship Records  ***

INSERT into tmp_Zgc_Mrel
  (
    zMrel_zdb_id,
    zMrel_gene_zdb_id,
    zMrel_est_zdb_id  
  )
SELECT
    get_id('MREL'),
    gene.mrkr_zdb_id,
    cdna.mrkr_zdb_id
FROM 
    tmp_Zgc_no_gene, marker as gene, marker as cdna
WHERE
    nogene_zfin_mrkr_abbrev = gene.mrkr_abbrev
    AND nogene_zgc_abbrev = cdna.mrkr_abbrev    
    AND gene.mrkr_type = "GENE";

INSERT into tmp_Zgc_Mrel
  (
    zMrel_zdb_id,
    zMrel_gene_zdb_id,
    zMrel_est_zdb_id  
  )
SELECT
    get_id('MREL'),
    zGene_zdb_id,
    cdna.mrkr_zdb_id
FROM 
    tmp_Zgc_no_gene, tmp_Zgc_Gene, marker as cdna
WHERE
    'zgc' || nogene_zgc_abbrev[4,20] = zGene_abbrev
    AND nogene_zgc_abbrev = cdna.mrkr_abbrev
    AND NOT EXISTS
    (
      select *
      from marker
      where nogene_zfin_mrkr_abbrev = mrkr_abbrev
    );



select zgene_name, count(*)
from tmp_zgc_gene
group by 1
having count(*) > 1;

select *
from tmp_zgc_gene, marker
where mrkr_abbrev = zgene_abbrev;


-- ***  INSERT new records  ***


INSERT into zdb_active_data SELECT zGENE_zdb_id FROM tmp_Zgc_Gene;
INSERT into marker
  (
    mrkr_zdb_id,
    mrkr_name,
    mrkr_abbrev,
    mrkr_type,
    mrkr_comments,
    mrkr_owner
  )
SELECT 
    zGENE_zdb_id,
    zGENE_name,
    zGENE_abbrev,
    'GENE',
    zGENE_description,
    zGENE_owner
FROM tmp_Zgc_GENE;

INSERT into record_attribution
  (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
  )
SELECT zGENE_zdb_id, 'ZDB-PUB-040217-2'
FROM tmp_Zgc_GENE;


-- Mrel
INSERT into zdb_active_data SELECT zMREL_zdb_id FROM tmp_Zgc_MREL;
INSERT into marker_relationship
  (
    mrel_zdb_id,
    mrel_mrkr_1_zdb_id,
    mrel_mrkr_2_zdb_id,
    mrel_type
  )
SELECT 
    zMREL_zdb_id,
    zMREL_gene_zdb_id,
    zMREL_est_zdb_id,
    'gene encodes small segment'
FROM 
   tmp_Zgc_MREL;

INSERT into record_attribution
  (
    recattrib_data_zdb_id,
    recattrib_source_zdb_id
  )
SELECT zMREL_zdb_id, 'ZDB-PUB-040217-1'
FROM tmp_Zgc_MREL;


!echo '-- Upgrades'

--select count(distinct zUpgrade_new_name) from tmp_zgc_upgrade;

UPDATE marker
SET    mrkr_name = (SELECT zUpgrade_new_name FROM tmp_Zgc_Upgrade WHERE mrkr_zdb_id = zUpgrade_zdb_id AND zUpgrade_old_name = mrkr_name)
WHERE  mrkr_zdb_id IN (SELECT zUpgrade_zdb_id FROM tmp_Zgc_Upgrade);

UPDATE marker
SET    mrkr_abbrev = (SELECT zUpgrade_new_name FROM tmp_Zgc_Upgrade WHERE mrkr_zdb_id = zUpgrade_zdb_id AND zUpgrade_old_name = mrkr_abbrev)
WHERE  mrkr_zdb_id IN (SELECT zUpgrade_zdb_id FROM tmp_Zgc_Upgrade);


UPDATE marker_history
SET mhist_reason = 'renamed to conform with zebrafish guidelines'
WHERE mhist_mrkr_zdb_id IN (SELECT zUpgrade_zdb_id FROM tmp_Zgc_Upgrade)
  and mhist_event = "renamed"
  and mhist_mrkr_abbrev_on_mhist_date = (SELECT zUpgrade_old_name FROM tmp_Zgc_Upgrade WHERE mhist_mrkr_zdb_id = zUpgrade_zdb_id);

UPDATE marker_history
SET mhist_reason = 'renamed to conform with zebrafish guidelines'
WHERE mhist_mrkr_zdb_id IN (SELECT zUpgrade_zdb_id FROM tmp_Zgc_Upgrade)
  and mhist_event = "reassigned"
  and mhist_dalias_zdb_id = 
    (
      SELECT dalias_zdb_id 
      FROM data_alias, tmp_Zgc_Upgrade 
      WHERE dalias_alias = zUpgrade_old_name
        AND dalias_data_zdb_id = mhist_mrkr_zdb_id
    );

UPDATE marker
SET mrkr_comments = "This gene is characterized by full length cDNAs isolated as part of the Zebrafish Gene Collection (ZGC). When more is known about the gene, the current nomenclature will be replaced with more traditional zebrafish gene nomenclature. The prefix `zgc:' indicates that this gene is represented by cDNAs generated by the ZGC project."
WHERE mrkr_zdb_id IN (SELECT zUpgrade_zdb_id FROM tmp_zgc_upgrade);


--rollback work;
commit work;