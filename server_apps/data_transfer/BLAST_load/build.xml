<project name="ZFIN" default="usage" basedir=".">


    <property name="buildfiles.dir" value="data_transfer"/>
    <property environment="env"/>

<!--    this file should be autogenerated from its children -->
    <import file="dataTransfer.xml"/>

    <import file="usage.xml"/>

	<target name="deploy" depends="createTargetDir"/> 

	<target name="createTargetDir" description="copies files to ./target/, replacing @variables@ with env equivalents and chmod'ing the files to 755 in /target.">
	  <copy todir="/research/zusers/blast/BLAST_load/target" overwrite="true">
	    <fileset dir="${buildfiles.dir}">
	      <include name="**/*"/>
	      <exclude name="**/*.svn"/>
	      <exclude name="**/*.xml"/>
	      <exclude name="**/*/*.ftp"/>
	      
	    </fileset>
	    <filterset>
	      <filter token="INFORMIXDIR" value="${env.INFORMIXDIR}"/>
	      <filter token="DBNAME" value="${env.DBNAME}"/>
	      <filter token="ROOT_PATH" value="${env.TARGETROOT}"/>
	      <filter token="SCRIPT_PATH" value="/research/zusers/blast/BLAST_load/data_transfer"/>
	      <filter token="TARGET_PATH" value="/research/zusers/blast/BLAST_load/target"/>
	      <filter token="HOSTNAME" value="${env.HOSTNAME}"/>
	      <filter token="WEBHOST_MUTANT" value="${env.WEBHOST_MUTANT}"/>
	      <filter token="BLASTSERVER_FASTA_FILE_PATH" value="${env.BLASTSERVER_FASTA_FILE_PATH}"/>
	      <filter token="BLASTSERVER_BLAST_DATABASE_PATH" value="${env.BLASTSERVER_BLAST_DATABASE_PATH}"/>
              <filter token="BLASTSERVER_BINARY_PATH" value="${env.BLASTSERVER_BINARY_PATH}"/>
	      
	      <filter token="WEBHOST_HOSTNAME" value="${env.WEBHOST_HOSTNAME}"/>
	      <filter token="WEBHOST_FASTA_FILE_PATH" value="${env.WEBHOST_FASTA_FILE_PATH}"/>
	      <filter token="WEBHOST_BLAST_DATABASE_PATH" value="${env.WEBHOST_BLAST_DATABASE_PATH}"/>
	      <filter token="WEBHOST_DBNAME" value="${env.WEBHOST_DBNAME}"/>
	      <filter token="WEBHOST_USER" value="${env.WEBHOST_USER}"/>
	      <filter token="WEBHOST_SOURCE" value="${env.WEBHOST_SOURCE}"/>
	      <filter token="WEBHOST_BLASTDB_CURL_PATH" value="${env.WEBHOST_BLASTDB_CURL_PATH}"/>
	      <filter token="WEBHOST_BLASTDB_TO_COPY" value="${env.WEBHOST_BLASTDB_TO_COPY}"/>
	      <filter token="BLASTSERVER_XDFORMAT" value="${env.BLASTSERVER_XDFORMAT}"/>
	      <filter	token="BLASTSERVER_XDGET" value="${env.BLASTSERVER_XDGET}"/>
	      <filter	token="PROD_WWW_HOMES" value="${env.PROD_WWW_HOMES}"/>
	      <filter	token="DEV_WWW_HOMES" value="${env.PROD_WWW_HOMES}"/>
	    </filterset>
	  </copy>
	  <copy todir="${env.BLASTSERVER_FASTA_FILE_PATH}">
	    <fileset dir="${buildfiles.dir}">
	      <include name="**/*"/>
	      <exclude name="**/*.*"/>
	      <exclude name="**/README"/>
	      <exclude name="**/FLOW"/>
	    </fileset>
	  </copy>
	  <mkdir dir="${env.BLASTSERVER_FASTA_FILE_PATH}/Backup"/>
	  <mkdir dir="${env.BLASTSERVER_FASTA_FILE_PATH}/ZFIN/Backup"/>
	  <mkdir dir="${env.BLASTSERVER_FASTA_FILE_PATH}/GB_daily"/>
	  <chmod perm="775" type="both" verbose="true">
	    <fileset dir="/research/zusers/blast/BLAST_load/target"/>
	    <fileset dir="${env.BLASTSERVER_FASTA_FILE_PATH}" />
	    <fileset dir="${env.BLASTSERVER_FASTA_FILE_PATH}/Backup/" />
	  </chmod>

	</target>
	
	<taskdef resource="task.properties" classpath="./lib/grand-1.8.jar">
	</taskdef>
	
	<target name="graph" description="Creates graph of build process">
	  <grand output="build.dot" buildfile="build.xml"/>
	  <!--<exec executable="dot" >-->
	  <!--<arg line="-Tps -Gsize=11.69,8.27 -Grotate=90 -o build.ps build.dot"/>-->
	  <!--</exec>-->
	</target>
	
	
	<condition property="isInformixOnGenomix">
	  <and>
	    <equals arg1="${env.$WEBHOST_HOSTNAME}" arg2="genomix.cs.uoregon.edu"/>
	    <equals arg1="${env.$BLASTSERVER_USER}" arg2="informix"/>
	  </and>
	</condition>
	
	<target  name="deployCron" depends="createTargetDir" description="replaces informix crontab on genomix with crontab in the cron directory below this one." if="isInformixOnGenomix">
	  <echo message="deployed cron"/>
	</target>
	
	<target name="deployNoGenBankDownload" description="runs the entire deploy, except for GenBank" depends="createTargetDir,processEnsembl,processRefSeq,processSPTrEMBL,processzfin_cdna,processzfin_genomicDNA,processzfin_microRNA,processzfin_mrph,processzfin_publishedProtein,processzfin_publishedRNA,processzfin_unreleasedRNA,processzfin_vega,processzfin_xpat_cdna,devoGenBank,processVegaProtein">
	</target>
	
	<target name="runAll" description="runs the entire deploy" depends="createTargetDir,processEnsembl,processRefSeq,processSPTrEMBL,processzfin_cdna,processzfin_genomicDNA,processzfin_microRNA,processzfin_mrph,processzfin_publishedProtein,processzfin_publishedRNA,processzfin_unreleasedRNA,processzfin_vega,processzfin_xpat_cdna,processGenBank,processVegaProtein">
	</target>
	

</project>
