<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>
    This job loads the UniProt data into the database.
    It will only load the data if there is a new release (as captured by UniProt-Release-Check_d).

  </description>
  <keepDependencies>false</keepDependencies>

  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>UNIPROT_COMMIT_CHANGES</name>
          <description>Check this option to commit the results of the load. Otherwise, it's a dry run.</description>
          <defaultValue>false</defaultValue>
          <trim>true</trim>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>

  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec></spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
        <![CDATA[
TIMESTAMP=`date +%Y-%m-%d_%H-%M-%S`
echo "WORKSPACE=$WORKSPACE"
echo "PWD=$PWD"
echo "UNIPROT_COMMIT_CHANGES=$UNIPROT_COMMIT_CHANGES"
rm -f $PWD/uniprot_load_report*.html $PWD/uniprot_context*.json $PWD/uniprot_load_report*.html.zip $PWD/uniprot_context*.json.zip
export UNIPROT_OUTPUT_REPORT_FILE="$PWD/uniprot_load_report_$TIMESTAMP.html.zip"
export UNIPROT_CONTEXT_FILE="$PWD/uniprot_context_$TIMESTAMP.json.zip"
export NCBI_FETCH_CACHE_OUTPUT_FILE="$PWD/ncbi_refseq_api_results.json"
cd $SOURCEROOT
gradle uniprotLoadTask
        ]]>
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>
