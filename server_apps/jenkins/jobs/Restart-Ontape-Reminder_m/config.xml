<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;pre&gt;&#xd;
Its time to restart ontape so that logs do not fill up /research/zprod.&#xd;
as informix on helix:&#xd;
       % srchelix &#xd;
 &#xd;
     find the process id of ontape&#xd;
       % ps -ef | grep ontape &#xd;
     &#xd;
     issue a kill command for the ontape process &#xd;
       % kill [found_process_id_from_above]&#xd;
       % cdhelix &#xd;
       % cd server_apps/DB_maintenance/ &#xd;
       % gmake dumpLogsContinuous &#xd;
      &#xd;
    dump the informix server &#xd;
       % cd /research/zprod/www_homes/zfin.org/server_apps/DB_maintenance/&#xd;
       % ./dumpServer.pl &#xd;
&#xd;
    If this routine completes successfully, delete the old log file with&#xd;
    last month&apos;s datetime stamp.&#xd;
&#xd;
       % cd /research/zprod/www_homes/zfin.org/server_apps/DB_maintenance/&#xd;
   &#xd;
    Confirm that the logs symlink is pointing to a logfile with &#xd;
    today&apos;s date.&#xd;
       % ls -al logs&#xd;
      &#xd;
    Confirm that the data symlink is pointing to a data file with today&apos;s&#xd;
    date.  Will be created with the dumpServer.pl script&#xd;
       % ls -al data&#xd;
&#xd;
    Remove the old log file that the logs symlink is NOT pointing to.&#xd;
&#xd;
       % rm log[the_date_to_delete.0]&#xd;
&#xd;
    Else, wait untill tomorrow, and make sure we have a dump from tonight&apos;s&#xd;
    cron job and delete the historical log file with last month&apos;s&#xd;
    datetime stamp then.&#xd;
&#xd;
&lt;/pre&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec></spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>$TARGETROOT</customWorkspace>
  <builders/>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.35.1">
      <recipientList></recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <recipientList>@SUCCESS-RECIPIENT-LIST@</recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>${JOB_DESCRIPTION}</body>
            <sendToDevelopers>false</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>text/html</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>[Jenkins] [${DOMAIN_NAME}] ${PROJECT_NAME}: ${BUILD_STATUS}: </defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>${DB_OWNER}@zfin.org</replyTo>
      <saveOutput>false</saveOutput>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.89">
      <info>
        <propertiesFilePath>$TARGETROOT/home/WEB-INF/zfin.properties</propertiesFilePath>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>
