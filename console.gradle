task genotypeNamingIssues(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.nomenclature.repair.GenotypeNamingIssues'

    //so we can pass the log4j config file
    // (eg. "gradle -Dlog4j2.configurationFile=./home/WEB-INF/log4j2.xml genotypeNamingIssues")
    systemProperty "log4j2.configurationFile", System.getProperty("log4j2.configurationFile", "./conf/gradle-log4j2.xml")

    //so we can pass along a specific path to which to write the CSV report
    systemProperty "reportFile", System.getProperty("reportFile", null)
}

task featureAttributionRepair(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.feature.repair.FeatureAttributionRepair'
    systemProperty "reportFile", System.getProperty("reportFile", null)
    systemProperty "publicationsBefore", System.getProperty("publicationsBefore", null)
    systemProperty "publicationsAfter", System.getProperty("publicationsAfter", null)
}

task journalAbbreviationSyncReport(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    systemProperty "executeSql", false
    main = 'org.zfin.publication.JournalAbbreviationSyncTask'
}

task journalAbbreviationSyncAndUpdate(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    systemProperty "executeSql", true
    main = 'org.zfin.publication.JournalAbbreviationSyncTask'
}

task importCloneAssembly(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.mapping.importer.ImportCloneAssemblyTask'
}

task NCBILoadTask(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.datatransfer.webservice.BatchNCBIFastaFetchTask'
    systemProperty "ncbiLoadInput", System.getProperty("ncbiLoadInput", null)
    systemProperty "ncbiLoadOutput", System.getProperty("ncbiLoadOutput", null)
}

task cleanMarkerGoTermEvidenceDuplicatesTask(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.mutant.MarkerGoTermEvidenceCleanupTask'
}

task thisseLegacyImportAnalysisTask(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.thisse.ThisseLegacyImportAnalysisTask'
}

task uniprotAnalysisTask(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.uniprot.UniProtAnalysisTask'
}

task ncbiMatchThroughEnsemblTask(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.uniprot.NcbiMatchThroughEnsemblTask'
}

task createUIIndex(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.indexer.UiIndexer'
}

task runChebiPhenotypeIndexer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.zfin.indexer.UiIndexer'
    args 'ChebiPhenotype'
}

