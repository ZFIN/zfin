#------------------------------------------------------------------------
#
# Makefile for ZFIN_WWW CVS Project, SQL/SPL procedures.
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !! See $(TOP)/Makfile and $(TOP)/make.include for a full explanation !!
# !! of the makefile hierarchy this makefile is a part of, and of the  !!
# !! format and conventions used in this makefile.                     !!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# The routines defined in this directory are written in SPL, the Informix
# Stored Procedure language.  Files must have the same name as the routine 
# they define.  Each file defines only one routine (except for a few cases,
# see below).
#
# See the routines themselves for comments on their parameters and what 
# they do.

# ---------------  Variable Definitions  --------------------------------

TOP = ../../..
include $(TOP)/make.include

TARGETDIR = $(TARGETROOT)/lib/DB_functions/SPL

# Group the SPLs according to these characteristcs
# 1. General area the SPL is for.  This is basically a comment.
# 2. Generic or static.  The makefile needs to know this.

DBLINK_STATS = get_dblink_acc_num_display.sql p_dblink_has_parent.sql \
	       p_check_caps_acc_num.sql p_one_ortho_per_db.sql \
	       get_genbank_dblink_length_type.sql
FISH_STATS   = get_fish_full_name.sql get_image_stats.sql \
	       p_locus_name_abbrev_equal.sql
MRKR_STATS   = gene_contains_seg.sql mhist_event.sql p_mrel_grpmem_correct.sql \
	       p_2_linkage_pairs.sql p_check_zdb_id_in_genedom.sql \
	       p_goterm_not_obsolete.sql p_marker_has_goterm.sql
PUB_STATS    = get_pub_mini_ref.sql
REGEN_GNRCS  = regen_fishsearch.sql regen_genomics.sql regen_oevdisp.sql \
	       regen_panelcount.sql regen_maps.sql
ZDB_GNRCS    = table_exists.sql
ZDB_STATS    = get_obj_name.sql zdb_date.sql get_date_from_id.sql \
	       p_check_zdb_object_table.sql syscall.sql

# Some of the stage functions call other stage functions.  Therefore
# the order they are listed matters.
STAGE_STATS  = create_stg_name_ext.sql create_stg_name_long.sql \
	       get_stg_name_html.sql get_stg_name_long_html.sql \
	       stg_window_consistent.sql fimg_overlaps_stg_window.sql \
	       anatitem_overlaps_stg_window.sql stg_windows_overlap.sql \
	       p_stg_hours_consistent.sql

# insert_clone and regen_anatomy.sql are special cases.  They contain 
# multiple procedures/functions in a single file.  We thought about splitting 
# these into a single file per function, but the functions are tightly
# coupled with the function the file is name after.  There was more to gain by
# leaving them all in one file, then by splitting them up.
MULTIPLE_PROCS = insert_clone.sql regen_anatomy.sql

GENERIC_PROCS = $(ZDB_GNRCS) $(REGEN_GNRCS)
STATIC_PROCS  = $(DBLINK_STATS) $(FISH_STATS) $(MRKR_STATS) $(PUB_STATS) \
		$(ZDB_STATS) $(STAGE_STATS)

SPECIFIC_PROC_TARGETS = $(foreach SPEC, $(GENERIC_PROCS), $(TARGETDIR)/$(SPEC))
STATIC_PROC_TARGETS   = $(foreach STAT, $(STATIC_PROCS),  $(TARGETDIR)/$(STAT))
MULTIPLE_PROC_TARGETS = $(foreach SPEC, $(MULTIPLE_PROCS), $(TARGETDIR)/$(SPEC))

ENDEMICTARGETS_POSTTARGETS = $(SPECIFIC_PROC_TARGETS) $(STATIC_PROC_TARGETS) \
			     $(MULTIPLE_PROC_TARGETS)

# ---------------  Production Rules  ------------------------------------

include $(TOP)/make.default.rules

$(SPECIFIC_PROC_TARGETS) : $(TARGETDIR)/% : %
	$(MAKESPECIFIC) $< $(TRANSLATETABLE) $@
	-echo 'drop procedure $(patsubst %.sql,%,$^)' | $(DBACCESS) $(DBNAME) > /dev/null 2>&1
	$(DBACCESS) $(DBNAME) $@
	echo 'update statistics for procedure $(patsubst %.sql,%,$^)' | $(DBACCESS) $(DBNAME)

$(STATIC_PROC_TARGETS) : $(TARGETDIR)/% : %
	$(TARGET_CP) $^ $@
	$(TOUCH) $@
	-echo 'drop procedure $(patsubst %.sql,%,$^)' | $(DBACCESS) $(DBNAME) > /dev/null 2>&1
	$(DBACCESS) $(DBNAME) $@
	echo 'update statistics for procedure $(patsubst %.sql,%,$^)' | $(DBACCESS) $(DBNAME)

$(MULTIPLE_PROC_TARGETS) : $(TARGETDIR)/% : %
	$(MAKESPECIFIC) $< $(TRANSLATETABLE) $@
	-$(DBACCESS) $(DBNAME) $@
