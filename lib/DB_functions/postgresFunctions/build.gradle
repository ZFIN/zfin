import org.apache.tools.ant.filters.ReplaceTokens

def env = System.getenv()
def dbname = env['DBNAME']
def sourceroot = env['SOURCEROOT']
def pgbindir = env['PGBINDIR']
def pgdata = env['PGDATA']

task deployPostgresFunctions {
    description = "deploy postgres function in PG"

    doLast {
        println "deploying postgres regen_genox ..."
        int numberOfTrigger = runSqlFiles(".")
        println "deployed Regen_genox() and related functions"
    }
}

def projectDir = project.projectDir;


File[] fileList(String dir) {
    file(dir).listFiles({ file -> file.isFile() } as FileFilter).sort()
}

int runSqlFiles(String directory) {

    def env = System.getenv()
    def dbname = env['DBNAME']
    def pgbindir = env['PGBINDIR']


    int numberOfProc = 0;
    fileList(directory).each {
        File file ->
            if (file.getName().endsWith(".sql")) {
                String command = pgbindir + "/psql -d " + dbname + " -a -f " + file.getAbsoluteFile();
                // will execute command, return the text output from the executed command, and print to screen.
                //println command.execute().text
                command.execute().text
            }
	    numberOfProc ++;
    }
    return numberOfProc;
}
