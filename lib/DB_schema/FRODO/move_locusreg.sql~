begin work ;

set constraints all deferred ;

create temp table tmp_locus_registration (locus_name varchar(30), 
						owner varchar(50),
						pheno_descr lvarchar,
						abbrev varchar(20))
  with no log ;


insert into tmp_locus_registration (locus_name, owner, pheno_descr, abbrev)
  select distinct locus_name, owner, pheno_descr, abbrev
    from locus_registration
    where locusreg_public_release_date is null
    and not exists (select 'x'
			from marker
			where mrkr_name = locus_name); 
 
insert into marker (mrkr_zdb_id, 
			mrkr_name,
			mrkr_type,
			mrkr_owner,
			mrkr_comments,
			mrkr_abbrev)
select get_id('GENE'),
	locus_name,
	'GENE',
	owner,
	pheno_descr,
	lower(abbrev)
  from tmp_locus_registration;

--update marker
--  set mrkr_abbrev = lower(mrkr_abbrev||mrkr_zdb_id)
--  where exists (select 'x'	
--		  from tmp_locus_registration
--		  where mrkr_name = locus_name
--		  and mrkr_abbrev = abbrev
--		  and mrkr_owner = owner)
--   and mrkr_zdb_id like 'ZDB-GENE-%';


insert into genotype (geno_zdb_id,
			geno_display_name,
			geno_handle,
			geno_is_wildtype)
 select get_id('GENO'),
	locus_name||'<sup>'||allele||'</sup>',
	locus_name||allele||'unknown',
	'f'
   from locus_registration 
    where locusreg_public_release_date is null ;

insert into feature (feature_zdb_id,
			feature_name,
			feature_type,
			feature_abbrev,
			feature_owner,
			feature_comments)
  select get_id('ALT'),
		allele,
		'SEQUENCE_VARIANT',
		allele,
		owner,
		pheno_descr
    from locus_registration 
	where locusreg_public_release_date is null ;


create temp table tmp_featrel (feature_id varchar(50), 
				mrkr_id varchar(50))
with no log ;

insert into tmp_featrel (feature_id, mrkr_id)
  select distinct feature_zdb_id, mrkr_zdb_id
    from feature, marker, locus_Registration
    where feature_name = allele
	and mrkr_name = locus_name
	and locusreg_public_release_date is null 
	;


insert into feature_marker_relationship (fmrel_zdb_id,
					fmrel_type,
					fmrel_ftr_zdb_id,
					fmrel_mrkr_zdb_id)
  select get_id('FMREL'),
	'Mutation is allele of gene',
	feature_id,
	mrkr_id
     from tmp_featrel ;
				
insert into zdb_active_Data
  select fmrel_Zdb_id from feature_marker_relationship
	where not exists (select 'x'
				from zdb_Active_data
				where zactvd_zdb_id = fmrel_zdb_id);
				
insert into zdb_active_Data
  select geno_Zdb_id from genotype
	where not exists (select 'x'
				from zdb_Active_data
				where zactvd_zdb_id = geno_zdb_id);

insert into zdb_active_Data
  select mrkr_Zdb_id from marker
	where not exists (select 'x'
				from zdb_Active_data
				where zactvd_zdb_id = mrkr_zdb_id);

insert into zdb_active_Data
  select feature_zdb_id from feature
	where not exists (select 'x'
				from zdb_Active_data
				where zactvd_zdb_id = feature_zdb_id);

insert into record_attribution (recattrib_data_zdb_id,
				recattrib_source_zdb_id)
  select distinct feature_zdb_id, 'ZDB-PUB-040824-1'
    from feature, locus_registration
    where feature_name = allele
	and locusreg_public_release_date is null ;

insert into record_attribution (recattrib_data_zdb_id,
				recattrib_source_zdb_id)
  select distinct mrkr_zdb_id, 'ZDB-PUB-040824-1'
    from marker, locus_registration
    where mrkr_name = locus_name
	and locusreg_public_release_date is null ;

insert into record_attribution (recattrib_data_zdb_id,
				recattrib_source_zdb_id)
  select distinct geno_zdb_id, 'ZDB-PUB-040824-1'
    from genotype, locus_registration
    where geno_display_name = locus_name||'<sup>'||allele||'</sup>'
	and locusreg_public_release_date is null ;

set constraints all immediate ;

commit work ;

--rollback work ;